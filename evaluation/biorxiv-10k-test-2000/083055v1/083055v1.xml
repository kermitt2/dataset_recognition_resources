<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.2d1 20170631//EN" "JATS-archivearticle1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" article-type="article" dtd-version="1.2d1" specific-use="production" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">BIORXIV</journal-id>
<journal-title-group>
<journal-title>bioRxiv</journal-title>
<abbrev-journal-title abbrev-type="publisher">bioRxiv</abbrev-journal-title>
</journal-title-group>
<publisher>
<publisher-name>Cold Spring Harbor Laboratory</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1101/083055</article-id>
<article-version>1.1</article-version>
<article-categories>
<subj-group subj-group-type="author-type">
<subject>Regular Article</subject>
</subj-group>
<subj-group subj-group-type="heading">
<subject>New Results</subject>
</subj-group>
<subj-group subj-group-type="hwp-journal-coll">
<subject>Biophysics</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>Energy Conservation as a Measure of Simulation Accuracy</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<name><surname>Eastman</surname><given-names>Peter</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
</contrib>
<contrib contrib-type="author">
<name><surname>Pande</surname><given-names>Vijay S.</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
</contrib>
<aff id="a1">
<label>1</label><institution>Department of Chemistry, Stanford University</institution>, Stanford, CA 94305</aff></contrib-group>
<pub-date pub-type="epub">
<year>2016</year>
</pub-date>
<elocation-id>083055</elocation-id>
<history>
<date date-type="received">
<day>24</day>
<month>10</month>
<year>2016</year>
</date>
<date date-type="accepted">
<day>24</day>
<month>10</month>
<year>2016</year>
</date>
</history>
<permissions>
<copyright-statement>&#x00A9; 2016, Posted by Cold Spring Harbor Laboratory</copyright-statement>
<copyright-year>2016</copyright-year>
<license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by/4.0/"><license-p>This pre-print is available under a Creative Commons License (Attribution 4.0 International), CC BY 4.0, as described at <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link></license-p></license>
</permissions>
<self-uri xlink:href="083055.pdf" content-type="pdf" xlink:role="full-text"/>
<abstract>
<title>Abstract</title>
<p>Energy conservation is widely used as a measure of accuracy for molecular simulations. When reporting rates of energy drift, researchers usually assume it is linear in the simulation length, temperature, and system size. We study these assumptions and find that all three are incorrect. Energy drift is too complicated to characterize with a single number, and a more sophisticated analysis is needed to identify the effects of systematic versus random drift, and of integration error versus numerical error. We further argue that energy conservation is not a reliable measure of accuracy. Having small overall drift on long time scales is not a sufficient condition, and in some cases not a necessary condition, for a simulation to produce meaningful results.</p>
</abstract>
<counts>
<page-count count="29"/>
</counts>
</article-meta>
</front>
<body>
<sec id="s1">
<label>1.</label>
<title>Introduction</title>
<p>Energy conservation is widely used as a way to assess the accuracy of molecular simulations. The idea is that, if all sources of error have been sufficiently minimized, there should be negligible change in the total energy of a system over the course of a simulation. Measuring how much the energy actually changes therefore serves as a test of how much error is present in the simulation.</p>
<p>We emphasize that our concern is primarily with energy conservation used <italic>as a measure of simulation accuracy</italic>. There are many situations where energy conservation is important for its own sake, but those are not the focus of this paper. The majority of molecular simulations are performed at constant temperature, so they do not even attempt to conserve energy. However, researchers often use energy conservation in the absence of a thermostat to assess the accuracy of their production simulations, even if the production simulations do include a thermostat. That is the subject we wish to study.</p>
<p>Given its importance and prevalence in the literature, it is surprising how little agreement there is on how to measure energy conservation. We have reviewed a number of papers that report energy drift values for different simulation codes, and find an enormous variation in their methods.[<xref ref-type="bibr" rid="c1">1</xref>-<xref ref-type="bibr" rid="c5">5</xref>] They differ widely in the systems they simulate, the trajectory lengths, and the methods used to calculate energy drift.</p>
<p>For example, the simulation lengths reported in these papers cover two orders of magnitude, from 1 ns up to 100 ns. They universally normalize the energy drift by simulation length, reporting it in units of energy per time. This normalization assumes that energy drift is linear in time. Indeed, most authors appear to explicitly assume this. Results from simulations of different lengths are often presented side by side in a single table, indicating to the reader they can be directly compared. In some cases,[<xref ref-type="bibr" rid="c1">1</xref>, <xref ref-type="bibr" rid="c2">2</xref>] the simulation length is never even stated; it is simply assumed that the normalization makes this information irrelevant.</p>
<p>Surprisingly, there seems to have been very little discussion of this assumption in the literature. We are aware of no justification, either theoretical or empirical, that has been offered for why it should be expected to hold. On the contrary, some theoretical work has suggested energy drift should be primarily diffusive rather than linear in time.[<xref ref-type="bibr" rid="c6">6</xref>, <xref ref-type="bibr" rid="c7">7</xref>] But if this assumption is wrong, then results from simulations of different length are not equivalent and cannot be directly compared to each other.</p>
<p>Similar considerations apply to system size and temperature. The systems reported in these papers cover a huge range, from as few as 304 atoms to as many as 92,224. Temperatures of 300K and 394K are used in different cases, while some papers[<xref ref-type="bibr" rid="c2">2</xref>, <xref ref-type="bibr" rid="c4">4</xref>] do not even report the temperatures of their simulations. In all cases, the results are normalized by temperature and number of degrees of freedom, or equivalently, by the average kinetic energy. This normalization assumes that energy drift should be linear in temperature and number of degrees of freedom, and once again, this assumption seems to be explicitly made by most authors. For example, results for systems of different size are often presented side by side and directly compared to each other. But here again, we are aware of no justification for why these assumptions should be expected to hold.</p>
<p>Even the simple question of how to compute a single &#x201C;energy drift&#x201D; value from simulation data is usually left unspecified.[<xref ref-type="bibr" rid="c1">1</xref>, <xref ref-type="bibr" rid="c2">2</xref>, <xref ref-type="bibr" rid="c4">4</xref>, <xref ref-type="bibr" rid="c5">5</xref>] Most authors appear to have felt this was obvious and did not need to be stated, yet one can easily think of several different ways to do it:</p>
<p>1. Compute the energy difference between the first and last frames in the trajectory, then divide by the length of the trajectory.</p>
<p>2. Perform a linear regression to fit a straight line to the curve of energy vs. time and report its slope.</p>
<p>3. Perform either 1 or 2 for multiple simulation trajectories, then report the mean energy drift across all trajectories; or the mean absolute value of the energy drift; or the root-mean-squared energy drift.</p>
<p>Clearly these methods will produce different results, and values calculated with different methods cannot be directly compared to each other.</p>
<p>We encountered these issues while benchmarking OpenMM.[<xref ref-type="bibr" rid="c8">8</xref>] Our goal was to study its accuracy when using different program options and simulation parameters, then compare to the published numbers for other simulation codes. We soon realized the impossibility of that comparison, which led us to conduct a deeper study of the nature and significance of energy drift. All simulations described in this paper were conducted with OpenMM, but most of the conclusions are generally applicable to a wide range of molecular simulation codes.</p>
<p>The rest of this paper is organized as follows. In sections 2 and 3 we consider various issues involved in measuring and analyzing energy drift. Sections 4, 5, and 6 consider each of the assumptions (linearity in time, temperature, and system size) in turn to assess their validity. In section 7, we turn to an even more fundamental question: to what extent is energy conservation actually a useful measure for evaluating simulation accuracy? The following are our major conclusions:</p>
<p>1. All of the assumptions discussed above are incorrect. Therefore, energy drift values calculated for different sized systems, from different length trajectories, or at different temperatures cannot be directly compared to each other.</p>
<p>2. Energy conservation is too complicated to fully characterize with a single number. A more detailed analysis is required to measure it in a meaningful way.</p>
<p>3. Energy conservation is a singularly bad proxy for accuracy. Just because a simulation has low energy drift on long time scales, one cannot conclude the equations of motion are being integrated accurately.</p>
</sec>
<sec id="s2">
<label>2.</label>
<title>Computation of Energy</title>
<p>How should one compute the energy at a given instant in a simulation? This seemingly trivial question turns out to be somewhat subtle, and is often done in unnecessarily inaccurate ways.</p>
<p>Most constant-energy molecular simulations use some variation on the Verlet integrator:[<xref ref-type="bibr" rid="c9">9</xref>]
<disp-formula id="eqn1"><alternatives><graphic xlink:href="083055_eqn1.gif"/></alternatives></disp-formula>
where <italic>x</italic> is the vector of particle coordinates, <italic>t</italic> is the current time, and <italic>dt</italic> is the step size. There are two important things to note about this integration method. First, it has a local error that scales as O(<italic>dt</italic><sup>4</sup>) and a global error that scales as O(<italic>dt</italic><sup>2</sup>). Second, it is formulated entirely in terms of the positions. No velocities appear explicitly in it. This is important, because we must somehow determine velocities in order to calculate the kinetic (and hence total) energy.</p>
<p>The Verlet integrator is commonly reformulated in one of two ways to introduce a velocity-like variable into it. The &#x201C;velocity Verlet&#x201D; algorithm defines
<disp-formula id="eqn2"><alternatives><graphic xlink:href="083055_eqn2.gif"/></alternatives></disp-formula></p>
<p>Equation 1 can then be rewritten as a series of three steps:
<disp-formula id="eqn3"><alternatives><graphic xlink:href="083055_eqn3.gif"/></alternatives></disp-formula></p>
<p><italic>vV</italic>(<italic>t</italic>) is a finite difference approximation for velocity that is accurate to second order. It is best not to think of it actually being the velocity, however. It is an internal parameter of the integrator that is exactly defined by <xref ref-type="disp-formula" rid="eqn2">equation 2</xref>. It happens to equal a low order approximation to the velocity, but the trajectory (and hence the &#x201C;true&#x201D; velocity) has a local error of O(<italic>dt</italic><sup>4</sup>), not O(<italic>dt</italic><sup>2</sup>).</p>
<p>The &#x201C;leapfrog Verlet&#x201D; algorithm defines
<disp-formula id="eqn4"><alternatives><graphic xlink:href="083055_eqn4.gif"/></alternatives></disp-formula></p>
<p><xref ref-type="disp-formula" rid="eqn1">Equation 1</xref> can then be rewritten as
<disp-formula id="eqn5"><alternatives><graphic xlink:href="083055_eqn5.gif"/></alternatives></disp-formula></p>
<p><italic>v<sub>L</sub></italic>(<italic>t</italic>&#x002B;<italic>dt</italic>/2) is a second order approximation to the velocity at time <italic>t</italic>&#x002B;<italic>dt</italic>/2. It also is a first order approximation to the velocity at time <italic>t</italic>. As with velocity Verlet, however, these identifications can easily be misleading. <italic>v<sub>L</sub></italic> is simply an internal parameter of the algorithm that is exactly defined by <xref ref-type="disp-formula" rid="eqn4">equation 4</xref>.</p>
<p>Higher order approximations to the velocity can be formed by combining the positions at more points in time.[<xref ref-type="bibr" rid="c10">10</xref>] The &#x201C;five point stencil&#x201D; is given by:
<disp-formula id="eqn6"><alternatives><graphic xlink:href="083055_eqn6.gif"/></alternatives></disp-formula></p>
<p>This is accurate to fourth order, the same as the local error in the Verlet algorithm. The integration is still performed with one of the Verlet integrators given above, but <xref ref-type="disp-formula" rid="eqn6">equation 6</xref> is used in place of <italic>v<sub>V</sub></italic> or <italic>v<sub>L</sub></italic> when computing the kinetic energy. Still higher order approximations exist, but there is no value in using them: because the positions are only accurate to fourth order, no combination of them can produce a velocity more accurate than that. We therefore recommend <xref ref-type="disp-formula" rid="eqn6">equation 6</xref> for calculating velocities, and hence energies. It is used throughout this paper.</p>
</sec>
<sec id="s3">
<label>3.</label>
<title>Types of Error</title>
<p>The errors discussed in the previous section are inherent in the integration method. They come from using a finite sized time step, and are present even when all calculations are done to infinite precision. We refer to this as &#x201C;integration error&#x201D;. (It is also sometimes referred to as &#x201C;truncation error&#x201D;, since it is caused by omitting higher order terms in the integration method.)</p>
<p>In practice, the calculations are never done to infinite precision. This introduces other types of errors into the simulation, which we refer to as &#x201C;numerical error&#x201D;. Many types of approximations can lead to numerical error. Some common examples include:</p>
<p>1. Numeric representations that only use a finite number of bits of precision.</p>
<p>2. Cutoffs on nonbonded interactions (in real space, and possibly also in reciprocal space) that create discontinuities in the energy.</p>
<p>3. Neighbor lists that are not updated every time step, allowing interactions to occasionally be missed.</p>
<p>4. Lookup tables used to approximate expensive functions.</p>
<p>These sources of error are very different in their origins, but for simplicity we group them all into the single category of &#x201C;numerical error&#x201D;. They are all ways in which the integration algorithm is not computed exactly, to infinite precision. They therefore introduce error into the trajectory, above and beyond the error that is inherent in the integration algorithm.</p>
<p>There are some important differences between integration error and numerical error. The magnitude of integration error depends strongly on the time step: the global error scales as O(<italic>dt</italic><sup>2</sup>) for all Verlet integrators. Numerical error usually scales as a lower power: it may be independent of <italic>dt</italic>, or in some cases actually increase with decreasing step size. For example, if an approximation introduces a constant level of error in every time step, the total error during a time interval will scale with the total number of time steps, or 1/<italic>dt</italic>. This means that for sufficiently large step size, numerical error is negligible compared to integration error, while for sufficiently small step size, integration error is negligible compared to numerical error.</p>
<p>Another important difference is that, because integration error is inherent in the Verlet algorithm, it is identical for all simulation codes so long as they use the same step size and simulate the same system. Numerical error, on the other hand, depends very sensitively on the implementation details. It comes from the fact that forces are not computed exactly and the integration algorithm is not performed to infinite precision. This means that our measurements of integration error in the following sections should be universal and widely applicable, whereas our measurements of numerical error are specific to OpenMM.</p>
<p>We also distinguish between systematic errors and random errors. Systematic errors are the same for every time step, whereas random errors are uncorrelated between time steps (at least if those steps are sufficiently separated in time). They lead to very different behaviors. Systematic errors add together, leading to a linear change in energy with time, while random errors produce a diffusive drift whose magnitude grows as the square root of time.</p>
<p>It is tempting to conclude that systematic errors are &#x201C;more important&#x201D; than random ones, since they produce a much larger drift over sufficiently long time periods. That conclusion is not justified however. Random errors are still errors, no less for being uncorrelated, and they can still affect simulation results.</p>
<p>It is important to remember that many molecular simulations are performed at constant temperature, not constant energy. When using a stochastic thermostat, errors cannot produce an energy drift over long time periods, because it is counteracted by the thermostat. In this case, when one measures the energy drift in a constant energy simulation, the primary goal is to show that the equations of motion are being integrated accurately, and numerical and integration errors are not cause for concern. A large random error clearly shows that they are <italic>not</italic> being integrated correctly, and the accuracy of the simulation <italic>cannot</italic> be assumed.</p>
<p>The question of exactly how errors impact one&#x2019;s results is beyond the scope of this article. It might depend in complicated ways on the type of errors, the type of results one is interested in, and many other details of the simulation. A particular type of error might have a large effect on some results, but no effect at all on other results. Regardless of these details, all results must be treated as suspect if the equations of motion are not being integrated accurately. They might still be correct, but that cannot be assumed until the researcher presents convincing evidence. Systematic and random energy drift are both signs of inaccurate integration. Any analysis of energy conservation therefore needs to consider both systematic and random errors and evaluate their importance independently.</p>
<p>The above discussion applies to system size as well as to simulation length. Errors may be the same for every degree of freedom, or uncorrelated between degrees of freedom. The former case produces a total error in the energy that scales with the number of degrees of freedom as O(<italic>n</italic>), while the latter (being a sum of uncorrelated random variables) produces a total error that scales as O(&#x221A;<italic>n</italic>).</p>
</sec>
<sec id="s4">
<label>4.</label>
<title>Scaling With Simulation Length</title>
<p>We now turn to the first widely made assumption: that energy drift is linear in the simulation length. <xref ref-type="fig" rid="fig1">Figure 1</xref> shows the energy as a function of time for a 5 ns simulation of ubiquitin[<xref ref-type="bibr" rid="c11">11</xref>], a 1231 atom protein in GBSA-OBC implicit solvent[<xref ref-type="bibr" rid="c12">12</xref>]. This simulation used the Amber 99SB force field[<xref ref-type="bibr" rid="c13">13</xref>], a 1 fs time step, a leapfrog Verlet integrator, and no cutoff on the nonbonded interactions. No degrees of freedom were constrained. (The choice to use implicit solvent with no cutoff was made to eliminate any source of error coming from nonbonded cutoffs, and thus let us more clearly see the effect of other types of error. When using PME, the error depends in a complicated way on many different parameters, and that would unnecessarily complicate the analysis.) The energy was recorded every 1 ps.</p>
<fig id="fig1" position="float" orientation="portrait" fig-type="figure">
<label>Figure 1.</label>
<caption><p>Total energy versus time for a 5 ns simulation of ubiquitin in implicit solvent. This simulation used double precision and a 1 fs time step.</p></caption>
<graphic xlink:href="083055_fig1.tif"/>
</fig>
<p>It is immediately clear that the energy drift is primarily diffusive, not linear. It fluctuates irregularly on both short and long time scales, but the net effect is to change very little over the course of the simulation. This is our first indication that the assumption of linear drift is wrong.</p>
<p>To make the analysis more quantitative, we compute the difference between each adjacent pair of energies. This yields 5000 samples of how much the energy changes in 1 ps. A histogram is shown in <xref ref-type="fig" rid="fig2">Figure 2</xref>. It clearly resembles a symmetric distribution whose center is very close to 0.</p>
<fig id="fig2" position="float" orientation="portrait" fig-type="figure">
<label>Figure 2.</label>
<caption><p>Histogram of the change in total energy over 1 ps intervals for the simulation shown in <xref ref-type="fig" rid="fig1">Figure 1</xref>.</p></caption>
<graphic xlink:href="083055_fig2.tif"/>
</fig>
<p>Statistics for the distribution are given in <xref ref-type="table" rid="tbl1">Table 1</xref>. We repeated the simulation with time steps of 1.0, 0.5, and 0.25 fs. OpenMM allows calculations to be done in three different precision modes: nearly all single precision; all double precision; and a mixed precision mode that computes forces in single precision but does integration in double precision. We therefore ran simulations in all three modes. For each one, we report the mean (which gives a measure of the systematic error), standard deviation (which gives a measure of the random error), and standard error (which reflects the uncertainty in our measurement of the mean). Note that the mean is simply equal to the total change in energy over the course of the simulation, divided by the number of 1 ps intervals making up the simulation. A more robust measure of systematic error is to perform a linear regression to the curve of energy versus time. The slope of that line, when measured in kJ/(mol&#x00B7;ps), should be directly comparable to the mean of the 1 ps energy change distribution. This value is also shown in <xref ref-type="table" rid="tbl1">Table 1</xref>.</p>
<p>The first thing to notice is that in all cases, the standard deviation is orders of magnitude larger than the mean. This means that for short simulations, the energy drift will be completely dominated by random error and its magnitude will scale as the square root of the simulation length. For sufficiently long simulations, on the other hand, even a tiny systematic error will eventually become dominant. In either case, simply dividing by the simulation length and reporting a single drift rate is misleading. If the simulations are short, all information about systematic error will be lost. If the simulations are long, all information about random error will be lost. In contrast, the analysis shown in <xref ref-type="table" rid="tbl1">Table 1</xref> allows us to break them apart and measure each one independently.</p>
<table-wrap id="tbl1" orientation="portrait" position="float">
<label>Table 1.</label>
<caption><p>Statistics for a set of 5 ns simulations of ubiquitin in implicit solvent.. The mean, standard deviation, and standard error describe the distribution of energy changes over 1 ps intervals. The slope is from a linear regression to the curve of energy versus time for the whole simulation.</p></caption>
<graphic xlink:href="083055_tbl1.tif"/>
</table-wrap>
<p>We can estimate how well converged these values are by splitting each trajectory in half, then computing the statistics independently for the first half and the second half. In all cases, this produces two values for the standard deviation that agree with each other to within a few percent. We conclude that the measures of random error in <xref ref-type="table" rid="tbl1">Table 1</xref> are well converged, and the simulations are long enough to measure it accurately.</p>
<p>The measures of systematic error, on the other hand, are not well converged. There often are significant differences between the estimates from the two halves of a trajectory. This should not be surprising, given the much larger magnitude of the random error. On any time scale short enough for the random error to be significant, the rate of energy drift is not deterministic. The total drift in any one simulation is just a sample from a distribution. Performing several independent simulations will produce a different drift for every one. It is therefore essential that when one reports a &#x201C;drift rate&#x201D; for simulations of a given length, the simulation be repeated several times and a distribution be reported instead of a single value.</p>
<p>To illustrate this fact, we performed additional simulations of three different lengths: 10, 100, and 1000 ps. For each length, 10 independent simulations were performed. Before starting a simulation, the system was first equilibrated at 300K, and the simulations differed only in the random number seed used for the equilibration. All simulations used single precision and a 1 fs time step.</p>
<p>For each simulation, we performed a linear regression to the curve of energy versus time. This yielded 10 independent &#x201C;drift rates&#x201D; for each simulation length, allowing us to study the distribution of values. <xref ref-type="table" rid="tbl2">Table 2</xref> shows the mean, minimum, and maximum values for each simulation length, along with their standard deviation. In all cases, the width of the distribution is larger than its mean, emphasizing the fact that any one value taken on its own is meaningless. The width of the distribution decreases as the simulation length increases, but even at 1 ns the values are clearly still dominated by random error.</p>
<table-wrap id="tbl2" orientation="portrait" position="float">
<label>Table 2.</label>
<caption><p>Statistics from 10 independent simulations. For each length, 10 independent simulations were run and a linear regression to energy versus time was performed. This yields 10 independent &#x201C;drift rates&#x201D; whose distribution is characterized by the statistics shown.</p></caption>
<graphic xlink:href="083055_tbl2.tif"/>
</table-wrap>
<p>Returning to <xref ref-type="table" rid="tbl1">Table 1</xref>, we next compare the mean to the standard error, which reflects the uncertainty in our measurement of the mean. We immediately notice something odd: in all of the mixed and double precision cases, as well as single precision with a 1 fs time step, the mean is at least an order of magnitude smaller than the standard error. This is surprising. If the data really consisted of independent samples from a normal distribution, we would expect the mean to be similar to the standard error, since it is only being measured to that level of accuracy. Instead we find that in the majority of cases, it is much smaller than we have any right to expect.</p>
<p>This is not a coincidence. It reflects the fact that Verlet integrators are symplectic, and hence conserve energy over long time scales much better than one would expect given the magnitude of integration error. We will discuss this issue further in section 7.</p>
<p>The above assumes the samples really are independent. That assumption is not guaranteed to be true. On sufficiently short time scales, we expect the changes in energy to contain correlations. This is clearly seen in <xref ref-type="fig" rid="fig3">Figure 3</xref>, which shows the evolution in energy over a very short piece of a simulation. It contains clear oscillations at high frequencies, reflecting the presence of oscillatory motions within the system being simulated. On any time scale short enough for the motion to contain correlations, it is possible for the changes in energy to also contain correlations.</p>
<fig id="fig3" position="float" orientation="portrait" fig-type="figure">
<label>Figure 3.</label>
<caption><p>Total energy versus time for a short segment of a simulation of ubiquitin in implicit solvent. This simulation used double precision and a 1 fs time step.</p></caption>
<graphic xlink:href="083055_fig3.tif"/>
</fig>
<p>An analysis of characteristic time scales in protein simulations shows that the lowest frequency oscillatory motions in proteins have periods less than 100 fs[<xref ref-type="bibr" rid="c14">14</xref>]. This fact motivated our choice of 1 ps as the sampling interval: it was chosen to be as short as possible, while still being much longer than the slowest oscillatory motions, and hence unlikely to contain significant correlations. Even if residual correlations are still present at 1 ps, this will have no effect on the measures of random and systematic drift calculated in <xref ref-type="table" rid="tbl1">Table 1</xref>. The only numbers that would be affected are the standard errors, which would be based on an overestimate of the number of independent measurements. They would therefore underestimate the true uncertainty in the mean, and the argument given above would then become even stronger.</p>
<p>Next consider how the error varies with step size, as shown in <xref ref-type="fig" rid="fig4">Figure 4</xref>. This lets us distinguish between numerical error and integration error, since the latter should scale as O(<italic>dt</italic><sup>2</sup>), and hence should decrease by approximately a factor of 4 when the step size is cut in half. First we look at the double precision simulations. When the step size is decreased from 1 fs to 0.5 fs, the random error decreases by a factor of 3.8. When it is further decreased to 0.25 fs, the error decreases by another factor of 3.8. This is good agreement with the expected scaling, and suggests that even at a time step of 0.25 fs, the error primarily consists of integration error while numerical error makes little contribution to the energy drift. The results for mixed precision are similar: the random error decreases by 3.6 when going from 1 to 0.5 fs, and by 3.9 when going from 0.5 to 0.25 fs.</p>
<fig id="fig4" position="float" orientation="portrait" fig-type="figure">
<label>Figure 4.</label>
<caption><p>Standard deviation of the 1 ps energy change distribution versus step size. The values are for single precision (crosses) and double precision (circles). The dotted line is proportional to <italic>dt</italic><sup>2</sup> and is shown only for reference.</p></caption>
<graphic xlink:href="083055_fig4.tif"/>
</fig>
<p>Now look at the single precision simulations. For 1 fs and 0.5 fs time steps, the random error is very close to the corresponding values for double precision. With a 0.25 fs time step, however, it decreases less than expected and is significantly larger than for double precision. This suggests that numerical error is starting to become significant. We also note that for both 0.5 fs and 0.25 fs time steps, the distribution mean is much larger than for double precision, and becomes comparable to the standard error. This is another indication that numerical error is significant, since the symplectic property of the integrator only affects the energy drift from integration error, not from numerical error.</p>
</sec>
<sec id="s5">
<label>5.</label>
<title>Scaling With Temperature</title>
<p>Now we consider how energy drift varies with temperature. Some care is required in defining what we mean by this. When referring to the &#x201C;temperature&#x201D; of a simulation, one usually means that it is coupled to a heat bath by a thermostat, and one is specifying the temperature of that heat bath. A constant energy simulation is, by definition, not a constant temperature simulation. It is not coupled to a heat bath, and does not have a uniquely defined temperature.</p>
<p>Before starting a simulation, one usually first equilibrates it by simulating it at constant temperature for some amount of time. The temperature of that equilibration could be used as a measure of the &#x201C;temperature&#x201D; of the following constant energy simulation, but that is not reliable. The equilibration temperature does not guarantee anything about the energy of any one frame of the simulation: it merely sets a probability distribution for it. The last frame of the equilibration, which is then used as the first frame of the constant energy simulation, could easily happen to be an unusually high or low energy state for that temperature.</p>
<p>Another way to measure temperature is to compute the kinetic energy of the system. Since this is expected to have an average of kT/2 per degree of freedom, it can be used to compute an instantaneous effective temperature. Of course, it will not remain constant over the simulation, but as long as it does not fluctuate too much, the average instantaneous temperature over the simulation can serve as a reasonable measurement of the &#x201C;temperature&#x201D; of the simulation. This is what we do here.</p>
<p>The simulations described in section 4 were all equilibrated at 300K. To test the temperature dependence, we performed three additional simulations using mixed precision and a 1 fs time step. They were equilibrated at 100K, 200K, and 400K respectively. <xref ref-type="table" rid="tbl3">Table 3</xref> lists the mean and standard deviation of the 1 ps energy change distribution for each one, along with the average temperature of the simulation and the slope of the linear fit to energy versus time.</p>
<table-wrap id="tbl3" orientation="portrait" position="float">
<label>Table 3.</label>
<caption><p>Statistics for a set of simulations of ubiquitin in implicit solvent at different temperatures. The mean and standard deviation describe the distribution of energy changes over 1 ps intervals. The slope is from a linear regression to the curve of energy versus time for the whole simulation. All simulations used mixed precision, a 1 fs time step, and 5 ns simulation length.</p></caption>
<graphic xlink:href="083055_tbl3.tif"/>
</table-wrap>
<p>The standard deviation shows clear linear scaling with temperature, as shown in <xref ref-type="fig" rid="fig5">Figure 5</xref>. For short simulations that are dominated by random drift from integration error, the assumption that drift is proportional to temperature seems to be justified. On the other hand, the systematic error (as measured either by the mean or the slope) shows a very irregular variation with temperature, and is not even monotonic. For all simulations, the standard error (not shown) is much larger than the mean, so there is significant uncertainly is our estimates of the systematic error. It is possible that if we ran much longer simulations, a linear dependence on temperature would become apparent. But at the very least, our data does not support the assumption that energy drift is proportional to temperature for long simulations dominated by systematic drift.</p>
<fig id="fig5" position="float" orientation="portrait" fig-type="figure">
<label>Figure 5.</label>
<caption><p>Standard deviation of the 1 ps energy change distribution versus temperature.</p></caption>
<graphic xlink:href="083055_fig5.tif"/>
</fig>
<p>The above conclusions only apply to integration error. As we saw in section 4, numerical error is negligible compared to integration error at this step size. There can be many sources of numerical error, and different ones may scale differently with temperature. It is impossible to make any universal statements about how the energy drift will scale in situations where numerical error is significant.</p>
</sec>
<sec id="s6">
<label>6.</label>
<title>Scaling With System Size</title>
<p>Next we consider how energy drift scales with the number of degrees of freedom in the system. To test this, we simulated two additional proteins: the villin headpiece[<xref ref-type="bibr" rid="c15">15</xref>] (582 atoms) and &#x03B1;-spectrin[<xref ref-type="bibr" rid="c16">16</xref>] (5078 atoms). All simulations used mixed precision and a 1 fs time step. No constraints were used, so the number of degrees of freedom is simply three times the number of atoms. The results are shown in <xref ref-type="table" rid="tbl4">Table 4</xref>.</p>
<table-wrap id="tbl4" orientation="portrait" position="float">
<label>Table 4.</label>
<caption><p>Statistics for simulations of proteins of varying sizes. The mean and standard deviation describe the distribution of energy changes over 1 ps intervals. The slope is from a linear regression to the curve of energy versus time for the whole simulation. All simulations used mixed precision, a 1 fs time step, and 5 ns simulation length.</p></caption>
<graphic xlink:href="083055_tbl4.tif"/>
</table-wrap>
<p>The standard deviation shows a very clear O(&#x221A;<italic>n</italic>) dependence on the system size: dividing it by the square root of the number of atoms gives 0.062, 0.064, and 0.066 for villin, ubiquitin, and ?-spectrin respectively. Unsurprisingly, values that are uncorrelated between degrees of freedom also are uncorrelated between time steps. At least on short time scales, the assumption that energy drift is proportional to system size clearly is incorrect.</p>
<p>The systematic drift is harder to evaluate, given the larger uncertainties in it, but it clearly grows faster than the random drift. If anything, it appears to be growing quadratically in the system size: dividing the slope by the square of the number of atoms yields 3.4&#x00B7;10<sup>&#x2212;10</sup>, 7.8&#x00B7;10<sup>&#x2212;10</sup>, and 6.9&#x00B7;10<sup>&#x2212;10</sup> for villin, ubiquitin, and ?-spectrin respectively. Possibly this reflects the fact that no cutoffs were used in these simulations, so the total number of interactions grows as the square of the number of atoms. If so, the scaling might be different when simulating a periodic system with Particle Mesh Ewald, but it would still presumably be at least linear.</p>
<p>A consequence is that the relative magnitudes of random and systematic drift depend on system size, and for a sufficiently large system the energy drift will be primarily linear even on short time scales. We emphasize again that this does not make systematic error &#x201C;more important&#x201D; than random error. Both types of error indicate that the equations of motion are not being integrated accurately. Just because errors produce energy changes that are uncorrelated between time steps or degrees of freedom, that does not mean they cannot still distort one&#x2019;s results.</p>
</sec>
<sec id="s7">
<label>7.</label>
<title>Accuracy and Energy Drift</title>
<p>We now turn to a fundamental question: is energy conservation actually a good way to assess the accuracy of a simulation? The total energy is merely one degree of freedom out of thousands in the system. It is, to be sure, a very important degree of freedom, but so are many others. If a simulation produces little error in the total energy, can we safely assume that it also produces little error in all the other degrees of freedom? Conversely, if a simulation is accurate (for some reasonable definition of the word), to what extent does that guarantee precise energy conservation over long time periods?</p>
<p>The Verlet algorithm is <italic>symplectic</italic>, which means that it very precisely conserves a modified or &#x201C;shadow&#x201D; Hamiltonian.[<xref ref-type="bibr" rid="c17">17</xref>] The shadow Hamiltonian is different from the true Hamiltonian of the system, but the two are closely related, so precise conservation of one generally implies reasonable conservation of the other as well. The upshot is that symplectic integrators have much better long term energy conservation than would be expected based on the integration error.</p>
<p>This provides an answer to our first question: long term energy conservation does <italic>not</italic> necessarily imply accuracy. On the contrary, it is virtually guaranteed that the integration error in most degrees of freedom is larger (possibly much larger) than that in the total energy. This makes energy conservation a particularly bad way of estimating accuracy. This applies only to integration error. As we saw earlier, a symplectic integrator does not reduce the energy drift from numerical error. Therefore, if a simulation has little long term energy drift, it is plausible to conclude that there is minimal numerical error in other degrees of freedom. Even this conclusion needs to be qualified, however. Long term energy drift is determined primarily by systematic error, not random error. Therefore the only really reliable conclusion one can draw is that, if there is significant numerical error in the simulation, it is of a type that only produces random drift in the energy, not systematic drift.</p>
<p>Furthermore, there can be many different sources of error in a simulation, each of which contributes to both the random and systematic energy drifts. There is no reason to expect their contributions to random drift to be correlated, but by definition, all sources of systematic drift are correlated. If some sources produce a positive systematic drift and others produce a negative systematic drift, they will tend to cancel out, leading to an artificially low drift on long time scales. Increasing the error can actually decrease the energy drift and make the simulation appear more accurate than it really is.</p>
<p>To illustrate this effect, we performed a series of 5 ns simulations of ubiquitin in which the SHAKE algorithm[<xref ref-type="bibr" rid="c18">18</xref>] was used to constrain the lengths of bonds involving hydrogen to their equilibrium values. This is a common technique to eliminate fast motions and allow a larger time step to be used. It introduces a new source of error, however: constraints are implemented with an iterative algorithm, so the constrained distances only remain constant to within a user specified tolerance. <xref ref-type="table" rid="tbl5">Table 5</xref> shows the results of three simulations with different combinations of step size and constraint error tolerance.</p>
<table-wrap id="tbl5" orientation="portrait" position="float">
<label>Table 5.</label>
<caption><p>The cancelling effects of step size and constraint error tolerance on energy drift. The drift values are calculated from a linear regression to the curve of energy versus time for the whole simulation. All simulations were 5 ns long and used mixed precision.</p></caption>
<graphic xlink:href="083055_tbl5.tif"/>
</table-wrap>
<p>The first simulation uses a 2 fs step size and constraint error tolerance of 10<sup>&#x2212;6</sup>. These are commonly used values, and produce a reasonably small energy drift. In the second simulation, we increase the constraint error tolerance to 10-4. This introduces large errors into the simulation, and causes the energy to decrease rapidly. In the final simulation, we increase the step size to 2.6 fs. This introduces additional large errors into the simulation and, on its own, would cause a rapid increase in energy. But because the two sources of error have opposite effects on systematic energy drift, they mostly cancel out and the actual energy drift is much smaller than in the previous case. That does not mean they have no effect, of course. This is a very inaccurate simulation, and no results calculated from it should be trusted. But it is impossible to discover that inaccuracy just by looking at long term energy drift.</p>
<p>What about the second question: to what extent does accurate integration guarantee long term energy conservation? The true equations of motion conserve energy exactly, so a perfect integrator would of course do so as well. In practice, no integrator is perfect so we should expect errors in all degrees of freedom, including the total energy. A symplectic integrator makes much smaller errors in the energy than in other degrees of freedom. This is usually presented as an advantage: given the same level of error, a symplectic integrator will conserve energy better than a non-symplectic one. This comparison can easily be reversed, however: given the same level of energy conservation, a non-symplectic integrator will be more accurate than the symplectic one. It is thus entirely possible for one integrator to be more accurate, but a different one to conserve energy better.</p>
<p>There has been much research into integration methods over the years, and many of the most widely used ones are non-symplectic.[<xref ref-type="bibr" rid="c19">19</xref>] This includes, for example, the very popular Runge-Kutta and Adams-Bashforth families of integrators. Much of the research in recent decades has involved error-controlled, variable time step integrators that continuously adjust the step size (and sometimes integration order) to keep the total error below a user-specified limit.[<xref ref-type="bibr" rid="c20">20</xref>] This allows them to be significantly more efficient than fixed step size integrators. It also makes them robust against rare events when, for example, two atoms come unusually close to each other. Events of this sort have been shown to be a source of error in molecular simulations[<xref ref-type="bibr" rid="c17">17</xref>]; variable time step integrators eliminate these problems by simply detecting the close collision and reducing the step size for a few time steps. For these reasons, they are now widely used in such fields as mechanical engineering, aerospace, and fluid dynamics.</p>
<p>The value of error controlled integrators can be illustrated with a simple example suggested by So? derlind.[<xref ref-type="bibr" rid="c20">20</xref>] We simulate a single charged particle moving in an elliptical orbit around a fixed charge. The trajectory generated with a fixed step size Verlet integrator is shown in the top half of <xref ref-type="fig" rid="fig6">Figure 6</xref>. Accumulated error causes the orbit to precess with time. This has no effect on the energy of the system, which is well conserved over the simulation, yet the particle still clearly ends up in the wrong location.</p>
<fig id="fig6" position="float" orientation="portrait" fig-type="figure">
<label>Figure 6.</label>
<caption><p>The trajectory of a particle in an elliptical orbit as integrated with a fixed time step (top) or variable time step (bottom) integrator. The average step size was the same in both cases.</p></caption>
<graphic xlink:href="083055_fig6.tif"/>
</fig>
<p>OpenMM also provides an error controlled variable time step Verlet integrator. We simulated the same system, adjusting the error tolerance so the average step size over the simulation was identical to the previous case. The trajectory is shown in the bottom half of <xref ref-type="fig" rid="fig6">Figure 6</xref>. This time, there is negligible precession. The total number of time steps is identical, but the integrator is able to concentrate them in the parts of the trajectory where they are most needed, leading to a substantially more accurate result at similar cost. This is true despite the fact that the variable time step integrator is not symplectic.</p>
<p>This example is much simpler than most molecular simulations, and it may not be representative of them. Further research is clearly needed to understand how well the variable step size integrator reproduces statistical properties. Still, this example is valuable for providing a clear graphical illustration of how energy conservation does not imply accuracy. The fixed step size integrator produces an objectively less accurate result than the variable step size one, despite the fact that it is symplectic and has less energy drift over long time scales. (The energy drift over this short time interval was negligible for both simulations.)</p>
<p>It may be time to reconsider the molecular simulation community&#x2019;s reliance on fixed step size Verlet integrators. More modern algorithms have many advantages in terms of both robustness and efficiency. Many of them are not symplectic, which means they will appear inferior as long as one only looks at the long term drift in the total energy, but this may be nothing more than an artifact of ignoring most types of error in the simulation.</p>
</sec>
<sec id="s8">
<label>8.</label>
<title>Conclusions</title>
<p>We have performed simulations to test three commonly made assumptions about energy drift in molecular simulations: that it is linearly proportional to simulation length, linearly proportional to temperature, and linearly proportional to the number of degrees of freedom. We find that all three of these assumptions are wrong. This means that most published numbers for energy drift must be treated with extreme caution. Values computed for different systems or with different simulation parameters are not directly comparable to each other.</p>
<p>We also find that energy drift is too complicated to be accurately described with just a single number. A more thorough analysis is required to distinguish between random drift versus systematic drift, and between integration error versus numerical error. For example, by building a histogram of energy changes over short time intervals, one can separate systematic drift from random drift and measure each one independently. By measuring how they change as the step size is varied, one can then determine whether they are primarily caused by integration error or numerical error. These different factors may scale in very different ways with step size, simulation length, system size, and other simulation parameters. All of them are important and they need to be measured independently.</p>
<p>We further argue that energy conservation is not a reliable way to assess the accuracy of a simulation. For example, multiple sources of drift may cancel to produce good energy conservation even for an inaccurate simulation, as shown in <xref ref-type="table" rid="tbl5">Table 5</xref>. Conversely, a symplectic integrator can be objectively less accurate than a non-symplectic one, as shown in <xref ref-type="fig" rid="fig6">Figure 6</xref>, even though it does a better job of conserving energy over long time scales. In fact, when using a symplectic integrator such as fixed time step Verlet, it is virtually guaranteed that the integration errors in most degrees of freedom are larger than those in the total energy. This makes energy conservation a uniquely bad proxy for accuracy. At best, it is a necessary but not sufficient condition to conclude that one&#x2019;s results are accurate.</p>
</sec>
</body>
<back>
<ack>
<label>9.</label>
<title>Acknowledgments</title>
<p>The authors thank John Chodera and Michael Sherman for useful discussions and comments during the development of this manuscript. This work was supported by Simbios via the NIH Roadmap for Medical Research Grant U54 GM072970.</p>
</ack>
<ref-list>
<title>References</title>
<ref id="c1"><label>1.</label> <mixed-citation publication-type="confproc"><string-name><surname>Bowers</surname> <given-names>KJ</given-names></string-name>, <string-name><surname>Chow</surname> <given-names>E</given-names></string-name>, <string-name><surname>Xu</surname> <given-names>H</given-names></string-name>, <string-name><surname>Dror</surname> <given-names>RO</given-names></string-name>, <string-name><surname>Eastwood</surname> <given-names>MP</given-names></string-name>, <string-name><surname>Gregersen</surname> <given-names>BA</given-names></string-name>, <etal>et al</etal>. <article-title>Scalable Algorithms for Molecular Dynamics Simulations on Commodity Clusters</article-title>. <conf-name>Proceedings of the ACM/IEEE Conference on Supercomputing (SC06)</conf-name>. <year>2006</year>.</mixed-citation></ref>
<ref id="c2"><label>2.</label> <mixed-citation publication-type="journal"><string-name><surname>Hess</surname> <given-names>B</given-names></string-name>, <string-name><surname>Kutzner</surname> <given-names>C</given-names></string-name>, <string-name><surname>van</surname> <given-names>der</given-names></string-name>. <string-name><surname>Spoel</surname> <given-names>D</given-names></string-name>, <string-name><surname>Lindahl</surname> <given-names>E</given-names></string-name>. <article-title>GROMACS 4: Algorithms for Highly Efficient, Load-Balanced, and Scalable Molecular Simulation</article-title>. <source>Journal of Chemical Theory and Computation</source>. <year>2008</year>;<volume>4</volume>:<fpage>435</fpage>&#x2013;<lpage>47</lpage>.</mixed-citation></ref>
<ref id="c3"><label>3.</label> <mixed-citation publication-type="journal"><string-name><surname>Fitch</surname> <given-names>BG</given-names></string-name>, <string-name><surname>Rayshubskiy</surname> <given-names>A</given-names></string-name>, <string-name><surname>Eleftheriou</surname> <given-names>M</given-names></string-name>, <string-name><surname>Ward</surname> <given-names>TJC</given-names></string-name>, <string-name><surname>Giampapa</surname> <given-names>ME</given-names></string-name>, <string-name><surname>Pitman</surname> <given-names>MC</given-names></string-name>, <etal>et al</etal>. <article-title>Blue Matter: Scaling of N-body simulations to one atom per node</article-title>. <source>IBM Journal of Research and Development</source>. <year>2008</year>;<volume>52</volume>(<issue>1/2</issue>):<fpage>145</fpage>&#x2013;<lpage>58</lpage>.</mixed-citation></ref>
<ref id="c4"><label>4.</label> <mixed-citation publication-type="journal"><string-name><surname>Friedrichs</surname> <given-names>MS</given-names></string-name>, <string-name><surname>Eastman</surname> <given-names>P</given-names></string-name>, <string-name><surname>Vaidyanathan</surname> <given-names>V</given-names></string-name>, <string-name><surname>Houston</surname> <given-names>M</given-names></string-name>, <string-name><surname>LeGrand</surname> <given-names>S</given-names></string-name>, <string-name><surname>Beberg</surname> <given-names>AL</given-names></string-name>, <etal>et al.</etal> <article-title>Accelerating molecular dynamic simulation on graphics processing units</article-title>. <source>J Comp Chem</source>. <year>2009</year>;<volume>30</volume>(<issue>6</issue>):<fpage>864</fpage>&#x2013;<lpage>72</lpage>.</mixed-citation></ref>
<ref id="c5"><label>5.</label> <mixed-citation publication-type="journal"><string-name><surname>G&#x00F6;tz</surname> <given-names>AW</given-names></string-name>, <string-name><surname>Williamson</surname> <given-names>MJ</given-names></string-name>, <string-name><surname>Xu</surname> <given-names>D</given-names></string-name>, <string-name><surname>Poole</surname> <given-names>D</given-names></string-name>, <string-name><surname>Grand</surname> <given-names>SL</given-names></string-name>, <string-name><surname>Walker</surname> <given-names>RC</given-names></string-name>. <article-title>Routine Microsecond Molecular Dynamics Simulations with AMBER on GPUs. 1. Generalized Born</article-title>. <source>Journal of Chemical Theory and Computation</source>. <year>2012</year>;<volume>8</volume>(<issue>5</issue>):<fpage>1542</fpage>&#x2013;<lpage>55</lpage>.</mixed-citation></ref>
<ref id="c6"><label>6.</label> <mixed-citation publication-type="journal"><string-name><surname>McLachlan</surname> <given-names>RI</given-names></string-name>, <string-name><surname>Perlmutter</surname> <given-names>M</given-names></string-name>. <article-title>Energy Drift in Reversible Time Integration</article-title>. <source>Journal of Physics A</source>. <year>2004</year>;<volume>37</volume>:<fpage>L593</fpage>&#x2013;<lpage>L8</lpage>.</mixed-citation></ref>
<ref id="c7"><label>7.</label> <mixed-citation publication-type="journal"><string-name><surname>Cottrell</surname> <given-names>D</given-names></string-name>, <string-name><surname>Tupper</surname> <given-names>PF</given-names></string-name>. <article-title>Energy Drift in Molecular Dynamics Simulations</article-title>. <source>BIT Numerical Mathematics</source>. <year>2007</year>;<volume>47</volume>(<issue>3</issue>):<fpage>507</fpage>&#x2013;<lpage>23</lpage>.</mixed-citation></ref>
<ref id="c8"><label>8.</label> <mixed-citation publication-type="journal"><string-name><surname>Eastman</surname> <given-names>P</given-names></string-name>, <string-name><surname>Friedrichs</surname> <given-names>MS</given-names></string-name>, <string-name><surname>Chodera</surname> <given-names>JD</given-names></string-name>, <string-name><surname>Radmer</surname> <given-names>RJ</given-names></string-name>, <string-name><surname>Bruns</surname> <given-names>CM</given-names></string-name>, <string-name><surname>Ku</surname> <given-names>JP</given-names></string-name>, <etal>et al.</etal> <article-title>OpenMM 4: A Reusable, Extensible, Hardware Independent Library for High Performance Molecular Simulation</article-title>. <source>Journal of Chemical Theory and Computation</source>. <year>2012</year>;<volume>9</volume>(<issue>1</issue>):<fpage>461</fpage>&#x2013;<lpage>9</lpage>.</mixed-citation></ref>
<ref id="c9"><label>9.</label> <mixed-citation publication-type="book"><string-name><surname>Allen</surname> <given-names>MP</given-names></string-name>, <string-name><surname>Tildesley</surname> <given-names>DJ</given-names></string-name>. <chapter-title>Computer Simulation of Liquids</chapter-title>. <publisher-loc>Oxford</publisher-loc>: <publisher-name>Clarendon Press</publisher-name>; <year>1987</year>.</mixed-citation></ref>
<ref id="c10"><label>10.</label> <mixed-citation publication-type="website"><string-name><surname>Trefethen</surname> <given-names>LN</given-names></string-name>. <article-title>Finite Difference and Spectral Methods for Ordinary and Partial Differential Equations</article-title>: <ext-link ext-link-type="uri" xlink:href="http://people.maths.ox.ac.uk/trefethen/pdetext.html">http://people.maths.ox.ac.uk/trefethen/pdetext.html</ext-link>; <year>1996</year>.</mixed-citation></ref>
<ref id="c11"><label>11.</label> <mixed-citation publication-type="journal"><string-name><surname>Vijay-Kumar</surname> <given-names>S</given-names></string-name>, <string-name><surname>Bugg</surname> <given-names>CE</given-names></string-name>, <string-name><surname>Cook</surname> <given-names>WJ</given-names></string-name>. <article-title>Structure of ubiquitin refined at 1.8 A resolution</article-title>. <source>Journal of Molecular Biology</source>. <year>1987</year>;<volume>194</volume>(<issue>3</issue>):<fpage>531</fpage>&#x2013;<lpage>44</lpage>.</mixed-citation></ref>
<ref id="c12"><label>12.</label> <mixed-citation publication-type="journal"><string-name><surname>Onufriev</surname> <given-names>A</given-names></string-name>, <string-name><surname>Bashford</surname> <given-names>D</given-names></string-name>, <string-name><surname>Case</surname> <given-names>DA</given-names></string-name>. <article-title>Exploring protein native states and large-scale conformational changes with a modified generalized born model</article-title>. <source>Proteins</source>. <year>2004</year>;<volume>55</volume>(<issue>22</issue>):<fpage>383</fpage>&#x2013;<lpage>94</lpage>.</mixed-citation></ref>
<ref id="c13"><label>13.</label> <mixed-citation publication-type="book"><string-name><surname>Hornak</surname> <given-names>V</given-names></string-name>, <string-name><surname>Abel</surname> <given-names>R</given-names></string-name>, <string-name><surname>Okur</surname> <given-names>A</given-names></string-name>, <string-name><surname>Strockbine</surname> <given-names>B</given-names></string-name>, <string-name><surname>Roitberg</surname> <given-names>A</given-names></string-name>, <string-name><surname>Simmerling</surname> <given-names>C</given-names></string-name>. <chapter-title>Comparison of Multiple Amber Force Fields and Development of Improved Protein Backbone Parameters</chapter-title>. <publisher-loc>Proteins</publisher-loc>: <publisher-name>Structure, Function, and Bioinformatics</publisher-name>. <year>2006</year>;<volume>65</volume>:<fpage>712</fpage>&#x2013;<lpage>25</lpage>.</mixed-citation></ref>
<ref id="c14"><label>14.</label> <mixed-citation publication-type="journal"><string-name><surname>Feenstra</surname> <given-names>KA</given-names></string-name>, <string-name><surname>Hess</surname> <given-names>B</given-names></string-name>, <string-name><surname>Berendsen</surname> <given-names>HJC</given-names></string-name>. <article-title>Improving Efficiency of Large Time-Scale Molecular Dynamics Simulations of Hydrogen-Rich Systems</article-title>. <source>J Comp Chem</source>. <year>1999</year>;<volume>20</volume>(<issue>8</issue>):<fpage>786</fpage>&#x2013;<lpage>98</lpage>.</mixed-citation></ref>
<ref id="c15"><label>15.</label> <mixed-citation publication-type="journal"><string-name><surname>Kubelka</surname> <given-names>J</given-names></string-name>, <string-name><surname>Eaton</surname> <given-names>WA</given-names></string-name>, <string-name><surname>Hofrichter</surname> <given-names>J</given-names></string-name>. <article-title>Experimental tests of villin subdomain folding simulations</article-title>. <source>Journal of Molecular Biology</source>. <year>2003</year>;<volume>329</volume>(<issue>4</issue>):<fpage>625</fpage>&#x2013;<lpage>30</lpage>.</mixed-citation></ref>
<ref id="c16"><label>16.</label> <mixed-citation publication-type="journal"><string-name><surname>Kusunoki</surname> <given-names>H</given-names></string-name>, <string-name><surname>Minasov</surname> <given-names>G</given-names></string-name>, <string-name><surname>Macdonald</surname> <given-names>RI</given-names></string-name>, <string-name><surname>Mondrag&#x00F3;n</surname> <given-names>A</given-names></string-name>. <article-title>Independent movement, dimerization and stability of tandem repeats of chicken brain alpha-spectrin</article-title>. <source>Journal of Molecular Biology</source>. <year>2004</year>;<volume>344</volume>(<issue>2</issue>):<fpage>495</fpage>&#x2013;<lpage>511</lpage>.</mixed-citation></ref>
<ref id="c17"><label>17.</label> <mixed-citation publication-type="journal"><string-name><surname>Engle</surname> <given-names>RD</given-names></string-name>, <string-name><surname>Skeel</surname> <given-names>RD</given-names></string-name>, <string-name><surname>Drees</surname> <given-names>M</given-names></string-name>. <article-title>Monitoring energy drift with shadow Hamiltonians</article-title>. <source>J Comp Phys</source>. <year>2005</year>;<volume>206</volume>:<fpage>432</fpage>&#x2013;<lpage>52</lpage>.</mixed-citation></ref>
<ref id="c18"><label>18.</label> <mixed-citation publication-type="journal"><string-name><surname>Ryckaert</surname> <given-names>J-P</given-names></string-name>, <string-name><surname>Ciccotti</surname> <given-names>G</given-names></string-name>, <string-name><surname>Berendsen</surname> <given-names>HJC</given-names></string-name>. <article-title>Numerical integration of the Cartesian Equations of Motion of a System with Constraints: Molecular Dynamics of n-Alkanes</article-title>. <source>J Comp Phys</source>. <year>1977</year>;<volume>23</volume>(<issue>3</issue>):<fpage>327</fpage>&#x2013;<lpage>41</lpage>.</mixed-citation></ref>
<ref id="c19"><label>19.</label> <mixed-citation publication-type="book"><string-name><surname>Ascher</surname> <given-names>UM</given-names></string-name>, <string-name><surname>Petzold</surname> <given-names>LR</given-names></string-name>. <chapter-title>Computer Methods for Ordinary Differential Equations and Differential-Algebraic Equations</chapter-title>. <publisher-loc>Philadelphia</publisher-loc>: <publisher-name>Society for Industrial and Applied Mathematics</publisher-name>; <year>1998</year>.</mixed-citation></ref>
<ref id="c20"><label>20.</label> <mixed-citation publication-type="journal"><string-name><surname>S&#x00F6;derlind</surname> <given-names>G</given-names></string-name>. <article-title>Time-step selection algorithms: Adaptivity, control, and signal processing</article-title>. <source>Applied Numerical Mathematics</source>. <year>2006</year>;<volume>56</volume>:<fpage>488</fpage>&#x2013;<lpage>502</lpage>.</mixed-citation></ref>
</ref-list>
</back>
</article>
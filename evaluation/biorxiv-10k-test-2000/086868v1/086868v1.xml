<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.2d1 20170631//EN" "JATS-archivearticle1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" article-type="article" dtd-version="1.2d1" specific-use="production" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">BIORXIV</journal-id>
<journal-title-group>
<journal-title>bioRxiv</journal-title>
<abbrev-journal-title abbrev-type="publisher">bioRxiv</abbrev-journal-title>
</journal-title-group>
<publisher>
<publisher-name>Cold Spring Harbor Laboratory</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1101/086868</article-id>
<article-version>1.1</article-version>
<article-categories>
<subj-group subj-group-type="author-type">
<subject>Regular Article</subject>
</subj-group>
<subj-group subj-group-type="heading">
<subject>New Results</subject>
</subj-group>
<subj-group subj-group-type="hwp-journal-coll">
<subject>Synthetic Biology</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>Millstone: Software for Multiplex Microbial Genome Analysis and Engineering</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Goodman</surname>
<given-names>Daniel B</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a2">2</xref>
<xref ref-type="author-notes" rid="n1">6</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Kuznetsov</surname>
<given-names>Gleb</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a2">2</xref>
<xref ref-type="aff" rid="a3">3</xref>
<xref ref-type="author-notes" rid="n1">6</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Lajoie</surname>
<given-names>Marc J.</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a2">2</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Ahern</surname>
<given-names>Brian W.</given-names>
</name>
<xref ref-type="aff" rid="a5">5</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Napolitano</surname>
<given-names>Michael G.</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a2">2</xref>
<xref ref-type="aff" rid="a4">4</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Chen</surname>
<given-names>Kevin Y.</given-names>
</name>
<xref ref-type="aff" rid="a5">5</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Chen</surname>
<given-names>Changping</given-names>
</name>
<xref ref-type="aff" rid="a5">5</xref>
</contrib>
<contrib contrib-type="author" corresp="yes">
<name>
<surname>Church</surname>
<given-names>George M.</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a2">2</xref>
<xref ref-type="corresp" rid="cor1">7</xref>
</contrib>
<aff id="a1"><label>1</label><institution>Department of Genetics</institution>, Harvard Medical School, Boston, Massachusetts, <country>USA</country></aff>
<aff id="a2"><label>2</label><institution>Wyss Institute for Biologically Inspired Engineering</institution>, Harvard Medical School, Boston, Massachusetts, <country>USA</country></aff>
<aff id="a3"><label>3</label><institution>Program in Biophysics</institution>, Harvard University, Boston, Massachusetts, <country>USA</country></aff>
<aff id="a4"><label>4</label><institution>Biological and Biomedical Sciences</institution>, Harvard Medical School, Boston, Massachusetts, <country>USA</country></aff>
<aff id="a5"><label>5</label><institution>Massachusetts Institute of Technology</institution>, Cambridge, Massachusetts, <country>USA</country></aff>
</contrib-group>
<author-notes>
<fn id="n1" fn-type="equal"><label>6</label> <p>These authors contributed equally to this work.</p></fn>
<corresp id="cor1"><label>7</label>Correspondence should be addressed to G.M.C. (<email>gchurch@genetics.med.harvard.edu</email>).</corresp>
</author-notes>
<pub-date pub-type="epub">
<year>2016</year>
</pub-date>
<elocation-id>086868</elocation-id>
<history>
<date date-type="received">
<day>09</day>
<month>11</month>
<year>2016</year>
</date>
<date date-type="accepted">
<day>10</day>
<month>11</month>
<year>2016</year>
</date>
</history>
<permissions>
<copyright-statement>&#x00A9; 2016, Posted by Cold Spring Harbor Laboratory</copyright-statement>
<copyright-year>2016</copyright-year>
<license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by/4.0/"><license-p>This pre-print is available under a Creative Commons License (Attribution 4.0 International), CC BY 4.0, as described at <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link></license-p></license>
</permissions>
<self-uri xlink:href="086868.pdf" content-type="pdf" xlink:role="full-text"/>
<abstract>
<title>Abstract</title>
<p>Inexpensive DNA sequencing and advances in genome editing have made computational analysis a major rate-limiting step in adaptive laboratory evolution and microbial genome engineering. We describe Millstone, a web-based platform which automates genotype comparison and visualization for projects with up to hundreds of genomic samples. To enable iterative genome engineering, Millstone allows users to design oligonucleotide libraries and create successive versions of reference genomes. Millstone is open source and easily deployable to a cloud platform, local cluster, or desktop, making it a scalable solution for any lab.</p></abstract>
<counts>
<page-count count="25"/>
</counts>
</article-meta>
</front>
<body>
<sec id="s1">
<title>INTRODUCTION</title>
<p>Microbial populations can harbor a staggering amount of genomic diversity, enabling them to evolve and adapt to diverse environments. Adaptive laboratory evolution uses this process to generate strains that are useful for biotechnology or for answering fundamental biological questions (<xref ref-type="bibr" rid="c4">Dragosits and Mattanovich 2013</xref>). In addition to harnessing natural variation, biologists can generate targeted genomic diversity in a population of cells and then screen or select for phenotypes of interest (<xref ref-type="bibr" rid="c16">Wang et al. 2009</xref>). The decreasing cost of reading and writing microbial genomes has made it possible to generate billions of combinatorial genomic variants per day at specific loci (<xref ref-type="bibr" rid="c16">Wang et al. 2009</xref>; <xref ref-type="bibr" rid="c7">Isaacs et al. 2011</xref>; <xref ref-type="bibr" rid="c8">Jiang et al. 2013</xref>) and to sequence entire <italic>E. coli</italic> genomes for less than 25 USD per sample (<xref ref-type="bibr" rid="c1">Baym et al. 2015</xref>; <xref ref-type="bibr" rid="c13">Shapland et al. 2015</xref>) (<bold>Supplementary Note 1</bold>).</p>
<p>Computational analysis is increasingly a bottleneck when mapping whole-genome data to phenotypes across many samples. Going from raw DNA sequencing reads to annotated variants requires the integration of a large number of disparate tools, usually assembled into an <italic>ad hoc</italic> pipeline by individual labs and followed by time-intensive manual confirmation of variants. There remains a critical need for an integrated solution capable of comparative analysis among multiple genomes and supporting interactive querying and data visualization, collaboration, genome versioning, and the design of additional mutations or reversions (<bold><xref ref-type="table" rid="tblS1">Supplementary Table 1</xref></bold>, <bold>Supplementary Note 2</bold>).</p>
<p>To address this need, we developed Millstone, a web-based software platform that supports an iterative process of multiplex mutation analysis and genome engineering. Millstone automates read alignment and variant calling using a hybrid reference-based and <italic>de novo</italic> assembly approach, then allows researchers to explore and compare mutations among genomic samples, and finally creates updated reference genomes and designs new genomic edits for subsequent rounds of experiments (<xref ref-type="fig" rid="fig1"><bold>Fig. 1a</bold></xref>). Serving as both a genomics pipeline and a platform for exploring whole-genome sequencing data, Millstone provides a powerful user-friendly interface that allows researchers to investigate individual variants through interactive filtering and alignment visualization ((<xref ref-type="fig" rid="fig1"><bold>Fig. 1b</bold></xref>).</p>
<fig id="fig1" position="float" orientation="portrait" fig-type="figure">
<label>Figure 1:</label>
<caption><p><bold>Millstone enables rapid iterative multiplex genome analysis and engineering.</bold> (<bold>a</bold>) To use Millstone, a researcher uploads a reference genome and next-generation sequencing reads for many individual genomic clones, for example from long-term evolution or targeted genome editing. Millstone performs alignment and variant calling for both single nucleotide variants and structural variation and then assigns predicted effects based on reference genome annotations. A unified data model stores sample genotype, phenotype, and variant annotation data. Variants can then be queried, filtered, and grouped into sets for export, triage, and analysis. These variant sets can be used to design oligonucleotides to recreate or revert mutations of interest, or used to generate new versions of the reference genome. (<bold>b</bold>) A combined screenshot of the Millstone analysis and alignment visualization views (condensed and cropped for clarity). A custom query language allows searching and filtering over the data. As variant calls sometimes require visual inspection and comparison, Millstone&#x2019;s variant analysis view provides programmatically-generated links to visualizations of the relevant read alignments in JBrowse (<xref ref-type="bibr" rid="c14">Skinner et al. 2009</xref>).</p></caption>
<graphic xlink:href="086868_fig1.tif"/>
</fig>
</sec>
<sec id="s2">
<title>RESULTS</title>
<p>Millstone was built in response to challenges encountered during the construction of the genomically recoded organism (GRO) <italic>C</italic>321.&#x0394;<italic>A</italic> (<xref ref-type="bibr" rid="c9">Lajoie et al. 2013</xref>), a strain of <italic>E. coli</italic> in which all 321 UAG stop codons were replaced with a synonymous UAA. Multiplex automated genome engineering (<xref ref-type="bibr" rid="c16">Wang et al. 2009</xref>) (MAGE) was used to introduce sets of 10 mutations into 32 strains and conjugative assembly genome engineering (<xref ref-type="bibr" rid="c7">Isaacs et al. 2011</xref>) (CAGE) was used to hierarchically combine redesigned regions into a chromosome with all 321 UAGs recoded (<xref ref-type="fig" rid="fig2"><bold>Fig. 2a</bold></xref>, green). We sequenced 68 intermediate clones to confirm the designed changes but our initial analyses were slow, error-prone, and lacked the ability to visualize and compare evidence for mutations among samples. Millstone solved these issues, allowing us to identify and track the 3127 designed and off-target mutations across all strains. Finally, by iteratively applying mutations directly to the initial reference genome and re-aligning reads, Millstone allowed us to generate a new <italic>C</italic>321.&#x0394;<italic>A</italic> reference sequence which incorporated 355 additional off-target mutations that had accumulated during strain construction. (<xref ref-type="fig" rid="fig2"><bold>Fig. 2a</bold></xref>, green and orange).</p>
<fig id="fig2" position="float" orientation="portrait" fig-type="figure">
<label>Figure 2:</label>
<caption><p><bold>Millstone accurately detects genomic variants and can iteratively version genomes</bold>. (<bold>a</bold>) Millstone was used to analyze genomic clones involved in generating and rationally optimizing a genomically recoded organism. MAGE (<xref ref-type="bibr" rid="c16">Wang et al. 2009</xref>) and CAGE (<xref ref-type="bibr" rid="c7">Isaacs et al. 2011</xref>) were used to generate the<italic>C</italic>321.&#x0394;<italic>A</italic> strain of <italic>E. coli</italic>(<xref ref-type="bibr" rid="c9">Lajoie et al. 2013</xref>). With sequencing data from these strains, Millstone confirmed the designed mutations, identified and annotated off-target mutations, and generated a new reference genome. Further reversion of variants was performed with MAGE to improve the strain&#x2019;s fitness (<italic>Kuznetsov et al., submitted</italic>), and a final reference genome was generated. (<bold>b</bold>) Analysis of 11 escapee clones from a biocontainment selection with a synthetic non-standard amino acid (nsAA) auxotrophy (<xref ref-type="bibr" rid="c11">Mandell et al. 2015</xref>) identified two escape mechanisms, either mutation of<italic>tyrS</italic> or disruption of<italic>lon</italic>. (<bold>c</bold>) Millstone can also be used for Adaptive Laboratory Evolution studies. We employed Millstone to analyze mutations across 115 clones in the Tenaillon et al.(<xref ref-type="bibr" rid="c15">Tenaillon et al. 2012</xref>) high temperature evolution experiment. Millstone was used to create a new reference genome for the ancestral strain from REL606, the closest available reference genome, and called variants against this new reference. Millstone reports 99.2&#x0025; of SNVs, deletions, and mobile elements found by the Tenaillon pipeline, as well some not identified in the original study (<bold><xref ref-type="table" rid="tblS2">Supplementary Table 2</xref></bold>)</p></caption>
<graphic xlink:href="086868_fig2.tif"/></fig>
<p>Millstone&#x2019;s ability to rapidly generate clonal genotypes from whole genome sequencing reads enabled a follow-up project to improve the fitness of the GRO. The final strain from Lajoie et al. demonstrated incorporation of proteins containing non-standard amino acids, but suffered from an impaired growth phenotype, which we hypothesized was due to a subset of the 355 off-target mutations. We developed an iterative method for systematically optimizing strain fitness through predictive modeling and multiplex testing of reversions (<italic>Kuznetsov et al., submitted</italic>). Millstone was used throughout this process: first, to rank high-effect candidates for reversion, then to design oligonucleotides for MAGE, and finally to report variants from whole genome sequencing of 96 edited clones (<xref ref-type="fig" rid="fig2"><bold>Fig. 2a</bold></xref>, orange). Once the final subset of effective reversions was identified and used to construct a faster-growing GRO, Millstone was also used to produce a final reference genome for the improved strain.</p>
<p>Millstone&#x2019;s <italic>de novo</italic> assembly and genotype comparison features were crucial in a project to engineer a biocontained version of the GRO which is dependent on a non-standard amino acid (nsAA) for survival (<xref ref-type="bibr" rid="c11">Mandell et al. 2015</xref>). A major challenge in engineering biocontainment, and in selection more generally, is diagnosis of escape mechanisms. In <italic>Mandell et al.</italic>, plating of early versions of the biocontained GRO on non-permissive media revealed individual clones that could survive without the essential nsAA. We performed whole genome sequencing on 11 escapee clones and several controls and used Millstone to identify loci enriched for mutations across escapees. This led to the discovery and validation of two primary mechanisms of escape: a single off-target nonsynonymous mutation in the redesigned <italic>tyrS</italic> gene occurring in 4/11 clones and disruption of the <italic>lon</italic> protease in the remaining 7 clones. Millstone revealed several modes of <italic>lon</italic> disruption: a frameshift (1/7), nonsynonymous substitution (1/7), and insertion of a mobile element upstream of the gene (5/7) (<xref ref-type="fig" rid="fig2"><bold>Fig. 2b</bold></xref>). To identify and precisely map these mobile elements and other structural variants, Millstone combines a local <italic>de novo</italic> re-assembly approach with coverage-based deletion calling (<bold>Supplementary <xref ref-type="fig" rid="figS3">Fig. 3</xref></bold>). Rapid analysis of escapee clones allowed us to identify and validate the key mechanisms of escape from biocontainment, so that further modifications lowered escape rates by at least 5 orders of magnitude (undetectable escape with detection limit 2.2e-12 escapees per c.f.u.).(<xref ref-type="bibr" rid="c11">Mandell et al. 2015</xref>).</p>
<p>Millstone can also be used to analyze genomic variation in samples undergoing adaptive laboratory evolution (ALE). In Tenaillon <italic>et al.</italic> (<xref ref-type="bibr" rid="c15">Tenaillon et al. 2012</xref>), 115 lines of <italic>E. coli</italic> were grown at 42&#x00B0;<italic>C</italic> in parallel for over 2,000 generations in an attempt to identify convergent evolutionary responses to this environmental challenge (<xref ref-type="fig" rid="fig2"><bold>Fig. 2c</bold></xref>). This impressive effort required a custom sequencing analysis pipeline consisting of over half a dozen tools, followed by manual validation and visual confirmation of all 1331 variants. We reanalyzed the raw data from this project in Millstone and identified 99.7&#x0025; of SNVs and 98.9&#x0025; of structural variants and mobile element insertions. Millstone further discovered 8 SNVs, 4 large deletions, and 2 mobile element insertions that were not reported in the original work (<xref ref-type="fig" rid="fig2"><bold>Fig. 2d</bold></xref>, <bold><xref ref-type="table" rid="tblS2">Supplementary Table 2</xref></bold>). On an Amazon Web Services EC2 instance, the entire process from sample upload to variant triage across all 115 strains took a single day (<bold><xref ref-type="table" rid="tblS3">Supplementary Table 3</xref></bold>).</p>
</sec>
<sec id="s3">
<title>DISCUSSION</title>
<p>New technologies for constructing, screening, and selecting microbial genomes now allow for increasingly complex functional genomics studies and bioengineering endeavors. As the sequence constraints of the genome come into focus, the promise of designing new organisms to address medical and material challenges is becoming a reality (<xref ref-type="bibr" rid="c5">Haimovich, Muir, and Isaacs 2015</xref>). The path forward requires rapid construction and characterization of successive versions of redesigned 105 genomes (<xref ref-type="bibr" rid="c6">Hutchison et al. 2016</xref>; <xref ref-type="bibr" rid="c12">Ostrov et al. 2016</xref>), and computational genome design and analysis tools will increasingly become integral to this process. Researchers who already have raw sequencing data can use Millstone to identify and explore mutations. We have reduced the barrier for other labs to use Millstone by making the software deployable on Amazon Web Services (AWS). Documentation and an online demo are available at <ext-link ext-link-type="uri" xlink:href="http://churchlab.github.io/millstone">http://churchlab.github.io/millstone</ext-link>.</p>
</sec>
<sec id="s4">
<title>METHODS</title>
<sec id="s4a" sec-type="data_availability">
<title>Software availability and documentation</title>
<p>Millstone source code is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/churchlab/millstone">https://github.com/churchlab/millstone</ext-link>. Documentation is available at <ext-link ext-link-type="uri" xlink:href="http://millstone.readthedocs">http://millstone.readthedocs</ext-link>.</p>
</sec>
<sec id="s4b">
<title>Deployment via Amazon Web Services (AWS)</title>
<p>Using Millstone via AWS is the recommended option for most users. We have pre-configured a Millstone installation as an Amazon Machine Image (AMI), allowing users to sidestep all dependency installation and configuration steps. Researchers can provision a fully-configured private instance of Millstone running on AWS in minutes and can specify compute, memory, and disk requirements to match project needs. AWS allows resizing a machine without losing data. For most projects and benchmarking, we use a 32-core r3.8xlarge instance type for alignment and variant calling, and then resize the machine to the 2-core c3.large or c4.large instance type for data exploration. Academic labs can apply for the AWS Cloud Credits for Research program (<ext-link ext-link-type="uri" xlink:href="https://aws.amazon.com/grants/">https://aws.amazon.com/grants/</ext-link>).</p>
</sec>
<sec id="s4c">
<title>Analysis pipeline</title>
<p>Millstone provides a user interface that guides a researcher through uploading a reference genome (Genbank or FASTA) and Illumina sequencing reads (FASTQ). The Millstone analysis pipeline then performs alignment, variant-calling, and annotation of called variants. Millstone aligns reads using BWA-MEM (<xref ref-type="bibr" rid="c10">Li and Durbin 2010</xref>), parallelizing across available cores. Millstone calls single nucleotide variants (SNV) using Freebayes and structural variants (SV) using a custom contig assembly-based method (see De Novo Assembly Pipeline below) and a custom coverage-based method. A diagram of the pipeline and the parallelization scheme is shown in <bold><xref ref-type="fig" rid="figS1">Supplemental Fig. 1</xref></bold>. Even though Millstone was primarily designed for haploid bacterial genomes, the default and recommended mode for calling SNVs in Millstone is diploid. This allows for marginal calls that are neither clean wild-type nor clean mutant alleles, indicated as &#x201C;heterozygous&#x201D; under the GT TYPE field (GT in VCF format). If the user-provided reference genome is annotated (i.e. Genbank format), the Millstone analysis pipeline can annotate variants with predicted effect usingSnpEff (<xref ref-type="bibr" rid="c2">Cingolani et al. 2012</xref>).</p>
</sec>
<sec id="s4d">
<title>Variant exploration view</title>
<p>Millstone provides an interactive user interface for exploring mutations and comparing genomes. Two primary data view modes, <italic>cast</italic> and <italic>melted</italic>, allow exploring data with samples aggregated by mutation or by individual mutation-sample relationships, respectively. Each mutation row includes icons that link to the relevant view of aligned reads in JBrowse. This is useful for performing visual quality control (QC) on aligned regions to verify that reads are properly aligned around a variant or to diagnose complex structural events. Visual QC is particularly important for inspecting marginal variant calls (see Analysis Pipeline), where only a fraction of aligned reads show a SNV. These can indicate regional duplication, non-unique mapping of reads, or non-clonality.</p>
<p>A query language allows filtering variants according to fields such as read depth, evidence quality, gene affected, predicted impact (Online Documentation). The filter key <monospace>GT_TYPE</monospace> is particularly important with respect to identifying mutant alleles and distinguishing them from marginal calls. <monospace>GT_TYPE</monospace> can take on values of 0 (strong evidence wild-type allele), 1 (marginal call), or 2 (strong evidence mutant allele). The query language allows for boolean combinations of key-value statements. For example, the following query filters the displayed variants down to only well-supported mutants that have a moderate to strong affect on some gene:</p>
<p><monospace>GT_TYPE = 2 &#x0026; (INFO EFF IMPACT = HIGH | INFO EFF IMPACT = MODERATE)</monospace></p>
<p>Further information and examples of queries can be found in the Online Documentation (<ext-link ext-link-type="uri" xlink:href="http://millstone.readthedocs.io/">http://millstone.readthedocs.io/</ext-link>).</p>
</sec>
<sec id="s4e">
<title>Visualizing alignments</title>
<p>Millstone uses JBrowse (<xref ref-type="bibr" rid="c14">Skinner et al. 2009</xref>) to visualize read alignments, enabling manual quality control and verification of complex structural events. For each called variant, Millstone programatically generates a link that brings up JBrowse at the affected locus showing the relevant alignment tracks. In the <italic>cast</italic> view, multiple JBrowse tracks will be shown simultaneously if the variant is present in multiple samples.</p>
</sec>
<sec id="s4f">
<title>Variant sets</title>
<p>Variant sets are an important unit of operation in Millstone that allow grouping variants after filtering. Millstone&#x2019;s analysis pipeline also allocates variants to several common variant sets by default, including sets indicating insufficient coverage, no coverage, greater than expected coverage, or poor mapping quality (corresponding perhaps to regions that are non-unique).Variant sets can also be used to generate oligonucleotides targeting or reverting the mutations in the set, via an integrated python implementation of optMAGE (<xref ref-type="bibr" rid="c16">Wang et al. 2009</xref>) (<ext-link ext-link-type="uri" xlink:href="https://github.com/churchlab/optmage">https://github.com/churchlab/optmage</ext-link>). Millstone&#x2019;s Genome Versioning feature allows for variant sets to be used to generate a new version of reference genome containing those variants as &#x2018;ref&#x2019; alleles. In particular, we show the use of this feature to generate updated reference genomes for the C321.&#x0394;A strain and its improved version, C321.&#x0394;A.opt.</p>
</sec>
<sec id="s4g">
<title>De novo assembly pipeline</title>
<p>After Illumina sequencing reads are aligned to the genome, Millstone identifies candidate reads that may indicate structural variants, including unmapped, clipped, and split reads, as well as their pairs. These reads may indicate the presence of complex structural events such as deletions, novel sequence insertions, and translocations of mobile elements. Velvet (Zerbino and Birney 2008) is used to assemble these reads into <italic>de novo</italic> contigs.</p>
<p>Once the reads are assembled into contigs by Velvet, those contigs over a size threshold are aligned back to the reference genome using BWA-MEM (<xref ref-type="bibr" rid="c10">Li and Durbin 2010</xref>). These contig-toreference alignments are used by Millstone to generate a graph whose nodes are contigs and reference sequence fragments and whose edges are alignments. Individual contigs and their reference junctions can be browsed and downloaded by the user. The contig sequences can also be downloaded as FASTA records and blasted individually by the user. Contigs whose edges map to annotated mobile elements are also labelled in the user interface. Novel sequence and mobile element insertions consist of multiple graph edges (two edges for novel sequence, four for mobile element insertions, <bold><xref ref-type="fig" rid="figS3">Supplemental Fig. 3b</xref></bold>). These variants are identified by a graph-traversal algorithm and converted into VCF records that are added to the variant database.</p>
</sec>
<sec id="s4h">
<title>Tenaillon et al.Variant Comparison</title>
<p>Raw data for Tenaillon et al. (<xref ref-type="bibr" rid="c15">Tenaillon et al. 2012</xref>) was downloaded from <ext-link ext-link-type="uri" xlink:href="http://wfitch.bio.uci.edu/&#x007E;tdlong/PapersRawData/Tenaillon.rawdata.tar.gz">http://wfitch.bio.uci.edu/&#x007E;tdlong/PapersRawData/Tenaillon.rawdata.tar.gz</ext-link>. Using the strain metadata provided with the sequencing data, we generated a targets file containing fitness ratios, line labels, and paths to read files for all 115 samples.</p>
<p>We first used Millstone to align the Ancestor strain (Line 0) to the REL606 reference genome (NCBI accession CP000819). This found a 6.93kb deletion in <italic>scgB</italic> (3,894,998 bp) and an IS186 insertion near <italic>fimA</italic> (4,517,603 bp). We used Millstone&#x2019;s Reference Genome Versioning feature to generate the REL1206 reference genome by applying these strucutral events to REL606.</p>
<p>Finally, all 115 samples (including the Ancestor strain) were realigned to the new REL1206 genome using Millstone. The data were exported to CSV format for comparison with the variants called by Tenaillon et. al. For a list of mutation discrepancies between Millstone and Tenaillon, see <bold><xref ref-type="table" rid="tblS2">Supplementary Table 2</xref></bold>.</p>
</sec>
<sec id="s4i">
<title>Optimizing Genomically Recoded Organism C321.&#x0394;A</title>
<p>Millstone was used to create a new reference genome for the final C321.&#x0394;A strain. Mutations called by Millstone were triaged based on quality and added to a variant set. Then, from the variant set view, the &#x2019;Generate New Reference Genome&#x2019; feature was used to create the new genome. This process was iterated two additional times until there were no structural or single nucleotide variants called against the new final reference genome.</p>
<p>Millstone includes SnpEff (<xref ref-type="bibr" rid="c2">Cingolani et al. 2012</xref>) integration that allows annotating mutations with predicted effects. We used Millstone to generated 127 MAGE oligos to revert mutations predicted to have strong fitness effects.</p>
<p>After sequencing 96 clones which underwent from 5 to 50 cycles of MAGE with subsets of these 127 oligos, Millstone was used to align and call variants across all clones. This process took 3 hours on a 32 core machine (<bold><xref ref-type="table" rid="tblS3">Supplementary Table 3</xref></bold>). Millstone generated a .csv file reporting evidence for variants, and this was combined with per-strain doubling time measurements to generate a regularized linear model (Kuznetsov et al., submitted). Additionally, during modeling and iterative testing we returned to Millstone to use the JBrowse view to visually validate and compare marginal variant calls among samples.</p>
<p>Finally, Millstone was used to align, call variants, and produce a reference sequence for the final optimized strain, which contained 6 reverted alleles and 9 de novo mutations relative to the starting C321.&#x0394;A strain.</p>
</sec>
<sec id="s4j">
<title>Mandell et al. Variant Comparison</title>
<p>We obtained sequencing reads from the authors and uploaded and aligned them to the C321.&#x0394;A genome (described above). In addition to the 11 escapee genomes on the adk.d8 and tyrS.d6 strain backgrounds, we also sequenced control clones for each background which remained dependent on the non-standard amino acid bipA, and some additional escapee clones on other nsAA-dependent backgrounds.</p>
<p>To identify the SNVs, including the <italic>lon</italic> and <italic>tyrS</italic> A70V mutations, we used Millstone to look for non-designed mutations which occurred only in the escapee strains and not in the bipA-dependent strains. To exhaustively identify transposon insertions where only partial alignment support was available, we additionally downloaded the raw contig list from Millstone and looked for contigs with graph edges mapping from mobile elements to other genome locations. We identified junction contigs which bridge the IS186 mobile element and the <italic>lon</italic> gene in 5 strains (<bold><xref ref-type="fig" rid="figS3">Supplemental Fig.3</xref></bold>).</p>
</sec>
<sec id="s4k">
<title>Data representation</title>
<p>Millstone stores variant, experiment sample, and evidence data across several tables in a PostgreSQL database (<bold><xref ref-type="fig" rid="figS2">Supplemental Fig. 2</xref></bold>). Returning results for user queries from the variant exploration view requires a &#x2018;join&#x2019; operation among multiple tables, which is expensive and does not scale well. To address this, we use PostgreSQL&#x2019;s Materialized View feature to compute and store a single denormalized table with all variant-sample evidence. Subsequent queries can then be performed directly against this table. Benchmarking on an AWS EC2 c3.large (2-core,3.75gb RAM), a dataset with 100 samples and 2500 variants required 1 min 44 seconds to compute a materialized view and typical queries required less than 1 seconds. The Millstone database only recomputes the materialized view when underlying data has changed.</p>
</sec>
</sec>
</body>
<back>
<ref-list>
<title>References</title>
<ref id="c1"><mixed-citation publication-type="journal"><string-name><surname>Baym</surname></string-name>, <string-name><surname>Michael</surname></string-name> <etal>et al.</etal> (<year>2015</year>). <article-title>&#x201C;Inexpensive Multiplexed Library Preparation for Megabase-Sized Genomes&#x201D;</article-title>. In: <source>bioRxiv</source>, p. <fpage>013771</fpage>.</mixed-citation></ref>
<ref id="c2"><mixed-citation publication-type="journal"><string-name><surname>Cingolani</surname></string-name>, <string-name><surname>Pablo</surname></string-name> <etal>et al.</etal> (<year>2012</year>). <article-title>&#x201C;A program for annotating and predicting the effects of single nucleotide polymorphisms, SnpEff: SNPs in the genome of Drosophila melanogaster strain w1118; iso-2; iso-3&#x201D;</article-title>. In: <source>Fly</source> <volume>6.2</volume>, pp. <fpage>80</fpage>&#x2013;<lpage>92</lpage>.</mixed-citation></ref>
<ref id="c3"><mixed-citation publication-type="journal"><string-name><surname>Deatherage</surname></string-name>, <string-name><surname>Daniel</surname> <given-names>E</given-names></string-name> and <string-name><surname>Jeffrey</surname> <given-names>E</given-names></string-name> <string-name><surname>Barrick</surname></string-name> (<year>2014</year>). <article-title>&#x201C;Identification of mutations in laboratory-evolved microbes from next-generation sequencing data using breseq&#x201D;</article-title>. In: <source>Engineering and Analyzing Multicellular Systems: Methods and Protocols</source>, pp. <fpage>165</fpage>&#x2013;<lpage>188</lpage>.</mixed-citation></ref>
<ref id="c4"><mixed-citation publication-type="journal"><string-name><surname>Dragosits</surname></string-name>, <string-name><surname>Martin</surname></string-name> and <string-name><surname>Diethard</surname> <given-names>Mattanovich</given-names></string-name> (<year>2013</year>). <article-title>&#x201C;Adaptive laboratory evolution &#x2013; principles and applications for biotechnology&#x201D;</article-title>. In: <source>Microbial cell factories</source> <volume>12.1</volume>, p. <fpage>64</fpage>. doi:<pub-id pub-id-type="doi">10.1186/1475-2859-12-64</pub-id>.</mixed-citation></ref>
<ref id="c5"><mixed-citation publication-type="journal"><string-name><surname>Haimovich</surname></string-name>, <string-name><surname>Adrian</surname> <given-names>D</given-names></string-name>, <string-name><surname>Paul</surname> <given-names>Muir</given-names></string-name>, and <string-name><surname>Farren</surname> <given-names>J</given-names></string-name> <string-name><surname>Isaacs</surname></string-name> (<year>2015</year>). <article-title>&#x201C;Genomes by design&#x201D;</article-title>. In: <source>Nature Reviews Genetics</source> <volume>16.9</volume>, pp. <fpage>501</fpage>&#x2013;<lpage>516</lpage>.</mixed-citation></ref>
<ref id="c6"><mixed-citation publication-type="journal"><string-name><surname>Hutchison</surname></string-name>, <string-name><surname>Clyde</surname> <given-names>A.</given-names></string-name> <etal>et al.</etal> (<year>2016</year>). <article-title>&#x201C;Design and synthesis of a minimal bacterial genome&#x201D;</article-title>. In: <source>Science</source> <volume>351.6280</volume>. ISSN: <issn>0036-8075</issn>. doi:<pub-id pub-id-type="doi">10.1126/science.aad6253</pub-id>.</mixed-citation></ref>
<ref id="c7"><mixed-citation publication-type="journal"><string-name><surname>Isaacs</surname></string-name>, <string-name><surname>Farren</surname> <given-names>J</given-names></string-name> <etal>et al.</etal> (<year>2011</year>). <article-title>&#x201C;Precise manipulation of chromosomes in vivo enables genome-wide codon replacement&#x201D;</article-title>. In: <source>Science (New York, NY)</source> <volume>333.6040</volume>, pp. <fpage>348</fpage>&#x2013;<lpage>353</lpage>.</mixed-citation></ref>
<ref id="c8"><mixed-citation publication-type="journal"><string-name><surname>Jiang</surname></string-name>, <string-name><surname>Wenyan</surname></string-name> <etal>et al.</etal> (<year>2013</year>). <article-title>&#x201C;RNA-guided editing of bacterial genomes using CRISPR-Cas systems&#x201D;</article-title>. In: <source>Nature Biotechnology</source> <volume>31.3</volume>, pp. <fpage>233</fpage>&#x2013;<lpage>239</lpage>.</mixed-citation></ref>
<ref id="c9"><mixed-citation publication-type="journal"><string-name><surname>Lajoie</surname></string-name>, <string-name><surname>Marc</surname> <given-names>J</given-names></string-name> <etal>et al.</etal> (<year>2013</year>). <article-title>&#x201C;Genomically recoded organisms expand biological functions&#x201D;</article-title>. In: <source>Science (New York, NY)</source> <volume>342.6156</volume>, pp. <fpage>357</fpage>&#x2013;<lpage>360</lpage>.</mixed-citation></ref>
<ref id="c10"><mixed-citation publication-type="journal"><string-name><surname>Li</surname></string-name>, <string-name><surname>Heng</surname></string-name> and <string-name><surname>Richard</surname> <given-names>Durbin</given-names></string-name> (<year>2010</year>). <article-title>&#x201C;Fast and accurate long-read alignment with Burrows&#x2013;Wheeler transform&#x201D;</article-title>. In: <source>Bioinformatics</source> <volume>26.5</volume>, pp. <fpage>589</fpage>&#x2013;<lpage>595</lpage>.</mixed-citation></ref>
<ref id="c11"><mixed-citation publication-type="journal"><string-name><surname>Mandell</surname></string-name>, <string-name><surname>Daniel</surname> <given-names>J</given-names></string-name> <etal>et al.</etal> (<year>2015</year>). <article-title>&#x201C;Biocontainment of genetically modified organisms by synthetic protein design&#x201D;</article-title>. In: <source>Nature</source> <volume>518.7537</volume>, pp. <fpage>55</fpage>&#x2013;<lpage>60</lpage>.</mixed-citation></ref>
<ref id="c12"><mixed-citation publication-type="journal"><string-name><surname>Ostrov</surname></string-name>, <string-name><surname>Nili</surname></string-name> <etal>et al.</etal> (<year>2016</year>). <article-title>&#x201C;Design, synthesis, and testing toward a 57-codon genome&#x201D;</article-title>. In: <source>Science</source> <volume>353.6301</volume>, pp. <fpage>819</fpage>&#x2013;<lpage>822</lpage>. ISSN: <issn>0036-8075</issn>. doi:<pub-id pub-id-type="doi">10.1126/science.aaf3639</pub-id>.</mixed-citation></ref>
<ref id="c13"><mixed-citation publication-type="journal"><string-name><surname>Shapland</surname></string-name>, <string-name><surname>Elaine</surname> <given-names>B</given-names></string-name> <etal>et al.</etal> (<year>2015</year>). <article-title>&#x201C;Low-Cost, High-Throughput Sequencing of DNA Assemblies Using a Highly Multiplexed Nextera Process&#x201D;</article-title>. In: <source>ACS Synthetic Biology</source> <volume>4.7</volume>, pp. <fpage>860</fpage>&#x2013;<lpage>866</lpage>.</mixed-citation></ref>
<ref id="c14"><mixed-citation publication-type="journal"><string-name><surname>Skinner</surname></string-name>, <string-name><surname>Mitchell</surname> <given-names>E</given-names></string-name> <etal>et al.</etal> (<year>2009</year>). <article-title>&#x201C;JBrowse: a next-generation genome browser&#x201D;</article-title>. In: <source>Genome Research</source> <volume>19.9</volume>, pp. <fpage>1630</fpage>&#x2013;<lpage>1638</lpage>. doi: <pub-id pub-id-type="doi">10.1101/gr.094607.109</pub-id>.</mixed-citation></ref>
<ref id="c15"><mixed-citation publication-type="journal"><string-name><surname>Tenaillon,</surname> <given-names>O</given-names></string-name> <etal>et al.</etal> (<year>2012</year>). <article-title>&#x201C;The Molecular Diversity of Adaptive Convergence&#x201D;</article-title>. In: <source>Science (New York, NY)</source> <volume>335.6067</volume>, pp. <fpage>457</fpage>&#x2013;<lpage>461</lpage>.</mixed-citation></ref>
<ref id="c16"><mixed-citation publication-type="journal"><string-name><surname>Wang</surname></string-name>, <string-name><surname>Harris</surname> <given-names>H</given-names></string-name> <etal>et al.</etal> (<year>2009</year>). <article-title>&#x201C;Programming cells by multiplex genome engineering and accelerated evolution&#x201D;</article-title>. In: <source>Nature</source> <volume>460.7257</volume>, pp. <fpage>894</fpage>&#x2013;<lpage>898</lpage>.</mixed-citation></ref>
<ref id="c17"><mixed-citation publication-type="journal"><string-name><surname>Zerbino</surname></string-name>, <string-name><surname>Daniel</surname> <given-names>R</given-names></string-name> and <string-name><surname>Ewan</surname> <given-names>Birney</given-names></string-name> (<year>2008</year>). <article-title>&#x201C;Velvet: algorithms for de novo short read assembly using de Bruijn graphs&#x201D;</article-title>. In: <source>Genome research</source> <volume>18.5</volume>, pp. <fpage>821</fpage>&#x2013;<lpage>829</lpage>.</mixed-citation></ref>
</ref-list>
<sec id="s5" sec-type="supplementary-material">
<title>Supplementary Materials</title>
<fig id="figS1" position="float" orientation="portrait" fig-type="figure">
<label>Figure S1:</label>
<caption><title>Millstone Analysis Pipeline.</title>
<p>The analysis pipeline efficiently automates the process of identifying single nucleotide variants (SNVs) and structural variants (SVs) from user sample data and storing the information in a data model representation that can be explored using Millstone&#x2019;s variant exploration UI. Once sample FASTQs and a reference genome are uploaded, Millstone uses BWA (<xref ref-type="bibr" rid="c10">Li and Durbin 2010</xref>) to align samples to the reference, parallelizing alignments across available processor cores. Once all alignments are complete, Freebayes performs SNV-detection on all .bam files simultaneously, parallelizing across regions of the genome. SVs are identified in parallel in individual samples using two methods: 1) Deletions are detected using sequencing read coverage and 2) novel junctions that indicate insertions and rearrangements are identified using <italic>de novo</italic> assembly of unmapped reads using Velvet (<xref ref-type="bibr" rid="c17">Zerbino and Birney 2008</xref>) followed by a custom graph-walking algorithm to combine assembled contigs and alignment with BWA to place contigs in the genome. All variant callers report their data in the Variant Call Format (VCF) and Millstone parses the VCFs into a single data model representation. Millstone further uses read coverage to identify regions of the genome with poor mapping quality and automatically adds variants that fall into such regions to appropriate VariantSets.</p></caption>
<graphic xlink:href="086868_figS1.tif"/></fig>
<fig id="figS2" position="float" orientation="portrait" fig-type="figure">
<label>Figure S2:</label>
<caption><title>Millstone Data Model.</title>
<p>Millstone&#x2019;s data model was designed to enable project organization, data storage, and to support researcher operations including uploading data, running analysis pipelines, exploring the resulting data, and generating actionable outputs. Users upload <italic>Reference Genomes</italic> (e.g. Genbank or FASTA genome sequences) and <italic>ExperimentSamples</italic> (e.g. FASTQ) to a Project. The <italic>Alignment Group</italic> model stores data from an alignment of multiple <italic>Experiment Samples</italic> against a specific <italic>Reference Genome</italic>. <italic>Variants</italic> represent both user-specified designed mutations and those emprically identified by variant callers. <italic>Variants</italic> are the most important primitive in Millstone, and serve as the unit of operation for analysis and design tasks. <italic>Variants</italic> are defined relative to a specific <italic>ReferenceGenome</italic>. The <italic>Variant Caller CommonData</italic> model relates a given Variant to any <italic>Alignment Groups</italic> the mutation was called in and stores metadata provided by the variant calling tool (e.g. Freebayes). The <italic>Variant Evidence</italic> model further stores evidence for the occurrence of a specific Variant in a specific Experiment Sample. <italic>Variant Sets</italic> allow the user to group Variants and take actions on groups. The VariantSet concept is very similar to tags in other software contexts and a Variant can belong to more than one VariantSet. Operations enabled by VariantSets include filtering in the exploration view, exporting subsets of variants, printing MAGE oligos, and generating new versions of reference genomes. The full data model is declared in the source code: <ext-link ext-link-type="uri" xlink:href="https://github.com/churchlab/millstone/blob/master/genome_designer/main/models.py">https://github.com/churchlab/millstone/blob/master/genome_designer/main/models.py.</ext-link></p></caption>
<graphic xlink:href="086868_figS2.tif"/>
</fig>
<fig id="figS3" position="float" orientation="portrait" fig-type="figure">
<label>Figure S3:</label>
<caption><title>Millstone uses <italic>de novo</italic> assembly to identify a mobile element insertion at the <italic>lon</italic> locus across 5 escapee clones from Mandell <italic>et al.</italic></title>
<p>(a) Millstone&#x2019;s integration with JBrowse shows evidence for a disruption upstream of the <italic>lon</italic> gene for 5 escapee strains. Each colored line represents a single read and the read alignments are grouped by sample. A wild-type strain is shown at the bottom for comparison. Darker reads map to the forward strand and lighter reads map to the reverse strand. Properly paired reads are green, reads with an unmapped mate are blue, and reads with improperly paired mates are orange. The dark blue vertical lines denote split reads, indicating a disrupted read alignment.Millstone performs <italic>de novo</italic> assembly followed by alignment of assembled contigs back to the reference, and then uses a graph traversal algorithm to identify large insertions. Two example cases are shown where either one or two contigs are identified. These contigs are composed of reads that map to the <italic>lon</italic> locus and IS186 mobile element, indicating insertion of IS186 element at the <italic>lon</italic> locus. Finally, Millstone generates an updated reference genome reflecting the insertion. <bold>(c)</bold> A table of contigs, their sizes, and multiple reference alignments for each of the 5 samples with an IS186 insertion. <bold>(d)</bold> A new JBrowse view with the updated reference. The split and mismapping reads are gone, revealing a clean alignment in the region with the inserted IS element. The dark region indicates reads which map to multiple IS186 paralogs across the genome.</p></caption>
<graphic xlink:href="086868_figS3.tif"/>
</fig>
<table-wrap id="tblS1" orientation="portrait" position="float">
<label>Table S1:</label>
<caption><title>Comparison between Millstone and Other Tools.</title>
<p>A tabular comparison of features among different whole-genome sequencing tools, with a focus on those that are meant for use with haploid microbial genomes and are scalable to large datasets. All tools listed here are free and open-source. A more detailed description of the differences between the features and limitations of each is provided in <bold>Supplementary Note 2.</bold> <italic>Effect Prediction:</italic> Prediction of variant effects based on genome annotation. <italic>Variant visualization:</italic> can visualize read alignments for individual variants built into the tool. <italic>Multiple Sample Comparison:</italic> can compare the evidence for and presence/absence of a variant across multiple samples within the tool. <italic>Interactive Querying:</italic> can interactively search and subset variant list based on genomic position, gene, quality, mutation type, etc. within the tool. <italic>Structural Variant Detection:</italic> Supports detection of longer variants not normally detected by SNV callers like Freebayes and GATK Unified Genotyper, such as insertions, deletions, and translocations longer than 50-100 bp in length. <italic>Genome Versioning:</italic> Capable of generating an updated reference genome based on a subset of variants found in an initial reference genome. <italic>Easy Deployment/Install:</italic> Can be used without command-line compilation or scripting. <italic>Genome Editing:</italic> Generates designs for iterative editing/reversion of selected variants. <italic>Sharing / Collaboration:</italic> Built-in data-sharing via the web among teams of multiple users. <italic>Supports Paired-End Data:</italic> Utilizes paired-end read information to generate alignments and identify structural variants. <italic>Modular Pipeline:</italic> Capable of custom pipelines using different user-specified modules.</p></caption>
<graphic xlink:href="086868_tblS1.tif"/></table-wrap>
<table-wrap id="tblS2" orientation="portrait" position="float">
<label>Table S2:</label>
<caption><title>Variant differences between Millstone and the original analysis performed by Tenaillon et al.</title>
<p>We compared variants found by <italic>Tenaillon et al</italic>. to those found automatically Millstone, focusing on Type II errors. Here we split discrepancies into 5 classes, including 3 short nucleotide variant (SNV) classes - short Deletions, Insertions, and Point Mutations, and 2 structural variant classes - Large Deletions and Mobile Element insertions. The final two columns describe &#x2019;True Positive&#x2019; variants which were found by only one of the two pipelines. To identify these, we examined the read evidence using Millstone&#x2019;s JBrowse visualization feature and determined whether the variant was correct as called by either pipeline.</p></caption>
<graphic xlink:href="086868_tblS2.tif"/>
</table-wrap>
<table-wrap id="tblS3" orientation="portrait" position="float">
<label>Table S3:</label>
<caption><title>Benchmarking.</title>
<p>Millstone&#x2019;s analysis pipeline was executed on datasets of various size from four different projects: Biocontainment (Mandell et al. 2015), GRO (Lajoie et al. 2013), Improving GRO Fitness (<italic>Kuznetsov et al., submitted</italic>), and Tenaillon (Tenaillon et al. 2012). Average query time was calculated using no filter and a simple filter for strong alt calls: <monospace>GT_TYPE = 2</monospace>. All benchmarking was performed on Amazon Web Services (AWS) Elastic Cloud Compute (EC2) instances r3.8xlarge (32 cores, 244 Gb memory).</p></caption>
<graphic xlink:href="086868_tblS3.tif"/>
</table-wrap>
<sec id="s5a">
<title>Supplementary Note 1: Cost of Multiplexed Genome Library Preparation and Sequencing</title>
<sec id="s5a1">
<title>Sample Preparation</title>
<p>Low-cost high-throughput sample preparation workflows for Illumina sequencing based on transposon insertion and fluorescent dye-based sample quantification can reduce the cost of preparation to below &#x0024;15 USD per sample and be performed in approximately 5 hours per 96-well plate (Baym et al. 2015).</p>
</sec>
<sec id="s5a2">
<title>Multiplexed Illumina Sequencing</title>
<p>For accurate discovery of structural variants, 20-30x coverage is ideal per sample. For the 4.6 megabase <italic>Escherichia coli K12 MG1655</italic> genome at 30x coverage, this is approximately 1 million 150 bp reads. The cost per read for Illumina sequencing can vary widely depending on the platform (NexSeq, MiSeq, HiSeq, etc). As a conservative estimate, a whole HiSeq 2500 lane in Rapid Run mode can produce 250 million paired end reads of 150 base pairs for a cost of approximately &#x0024;2500 USD, or approximately &#x0024;10 dollars per bacterial genome. Paired-end 150bp sequencing in Rapid Run mode takes approximately 40 hours. Larger-scale sequencing formats are generally cheaper, but longer to run, and smaller formats, like the MiSeq, are faster, but more expensive per genome.</p>
</sec>
</sec>
<sec id="s5b">
<title>Supplementary Note 2: Comparison of Millstone to Other Tools</title>
<p>While other packages exist to solve the integration and automation of whole genome resequencing and annotation, most of these tools are built for large diploid genomes, such as <italic>Homo sapiens</italic>. Here we compare features and performance between Millstone and a few other related automated genome re-sequencing tools (see also <bold><xref ref-type="table" rid="tblS1">Supplementary Table 1</xref></bold>).</p>
<sec id="s5b1">
<title>Galaxy</title>
<p>Some tools, like Galaxy, allow users to create their own custom pipelines without bash scripting, and do support the creation of pipelines for microbial genomes. However, Galaxy requires that the user to understand and optimize settings for each individual tool. Galaxy also does not allow visualization or interactive querying of the output, and cannot generate new reference genomes or use the output of one round of sequencing to inform the next round. Finally, because of Galaxy&#x2019;s one-size-fits-all nature, optimizing pipeline performance (for example, via inline compression and piping of input and output streams) is challenging.</p>
</sec>
<sec id="s5b2">
<title>SPANDx</title>
<p>Another recent tool, SPANDx, can also perform genome resequencing for multiple strains simultaneously, but its widespread use is limited because it can only be run on UNIX computing clusters using the venerable and closed-source commercial PBS job scheduling system. SPANDx has no user interface or interactive components, and so users are required to gather the data manually and run the pipeline using a command line interface. Because we could not readily locate a PBS system to test the pipeline on, we were not able to compare the output between SPANDx and Millstone.</p>
</sec>
<sec id="s5b3">
<title>breseq</title>
<p><italic>breseq</italic> is purpose-built to perform haploid genome resequencing, and has become a standard tool for Adaptive Laboratory Evolution experiments. (<xref ref-type="bibr" rid="c3">Deatherage and Barrick 2014</xref>). <italic>breseq</italic> reports SNV and SV events for single genomes and provides a visualization of raw read evidence for the event. An advantage of Millstone is its ability to perform variant calling on hundreds of genomes in parallel, facilitating analysis of mutation frequency across a population of clones. Millstone&#x2019;s JBrowse integration, data model, and querying features allow researchers to interactively filter, view, and compare genome alignments and variant data (as in <bold>Supplementary <xref ref-type="fig" rid="figS3">Fig. 3</xref></bold>).</p>
<p>Both <italic>breseq</italic> and Millstone use a default variant detection threshold that works well in most cases, and Millstone complements this with an interactive search feature that allows researchers to filter variants after the variant calling pipeline has been run according to characteristics including read depth, number of samples with the variant, or predicted variant effect.</p>
<p>Millstone further supports paired-end reads, allowing for enhanced detection of structural variation, whereas <italic>breseq</italic> treats paired-end reads as single reads. Millstone can further assemble and place <italic>de novo</italic> contigs onto existing reference genomes. Millstone can be used pre-configured on Amazon Web Services (AWS) and so does not require proficiency with UNIX nor the manual installation of dependencies. Millstone&#x2019;s user interface also automates the process of copying potentially large amounts of whole-genome data to the remote server.</p>
</sec>
</sec>
</sec>
</back>
</article>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.2d1 20170631//EN" "JATS-archivearticle1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" article-type="article" dtd-version="1.2d1" specific-use="production" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">BIORXIV</journal-id>
<journal-title-group>
<journal-title>bioRxiv</journal-title>
<abbrev-journal-title abbrev-type="publisher">bioRxiv</abbrev-journal-title>
</journal-title-group>
<publisher>
<publisher-name>Cold Spring Harbor Laboratory</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1101/022715</article-id>
<article-version>1.1</article-version>
<article-categories>
<subj-group subj-group-type="author-type">
<subject>Regular Article</subject>
</subj-group>
<subj-group subj-group-type="heading">
<subject>New Results</subject>
</subj-group>
<subj-group subj-group-type="hwp-journal-coll">
<subject>Bioinformatics</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>Scalable multi whole-genome alignment using recursive exact matching</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<name><surname>Linthorst</surname><given-names>Jasper</given-names></name>
<xref ref-type="corresp" rid="cor1">&#x002A;</xref>
</contrib>
<contrib contrib-type="author">
<name><surname>Hulsman</surname><given-names>Marc</given-names></name>
</contrib>
<contrib contrib-type="author">
<name><surname>Holstege</surname><given-names>Henne</given-names></name>
</contrib>
<contrib contrib-type="author">
<name><surname>Reinders</surname><given-names>Marcel</given-names></name>
</contrib>
</contrib-group>
<author-notes>
<corresp id="cor1"><label>&#x002A;</label>to whom correspondence should be addressed; <email>jasper.linthorst@gmail.com</email></corresp>
</author-notes>
<pub-date pub-type="epub">
<year>2015</year>
</pub-date>
<elocation-id>022715</elocation-id>
<history>
<date date-type="received">
<day>16</day>
<month>7</month>
<year>2015</year>
</date>
<date date-type="accepted">
<day>17</day>
<month>7</month>
<year>2015</year>
</date>
</history>
<permissions>
<copyright-statement>&#x00A9; 2015, Posted by Cold Spring Harbor Laboratory</copyright-statement>
<copyright-year>2015</copyright-year>
<license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by/4.0/"><license-p>This pre-print is available under a Creative Commons License (Attribution 4.0 International), CC BY 4.0, as described at <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link></license-p></license>
</permissions>
<self-uri xlink:href="022715.pdf" content-type="pdf" xlink:role="full-text"/>
<abstract><title>Abstract</title>
<p>The emergence of third generation sequencing technologies has brought near perfect <italic>de-novo</italic> genome assembly within reach. This clears the way towards reference-free detection of genomic variations.</p>
<p>In this paper, we introduce a novel concept for aligning whole-genomes which allows the alignment of multiple genomes. Alignments are constructed in a recursive manner, in which alignment decisions are statistically supported. Computational performance is achieved by splitting an initial indexing data structure into a multitude of smaller indices.</p>
<p>We show that our method can be used to detect high resolution structural variations between two human genomes, and that it can be used to obtain a high quality multiple genome alignment of at least nineteen Mycobacterium tuberculosis genomes.</p>
<p>An implementation of the outlined algorithm called REVEAL is available on: <ext-link ext-link-type="uri" xlink:href="https://github.com/jasperlinthorst/REVEAL">https://github.com/jasperlinthorst/REVEAL</ext-link></p>
</abstract>
<counts>
<page-count count="17"/>
</counts>
</article-meta>
</front>
<body>
<sec id="s1">
<label>1</label><title>Introduction</title>
<p>With an ever increasing length and throughput of sequencing data, affordable perfectly reconstructed complete genomes are slowly coming within reach [<xref rid="c3" ref-type="bibr">3</xref>, <xref rid="c10" ref-type="bibr">10</xref>]. This shift in the field of comparative genomics is changing the way in which genomic variations between samples will be detected in the near future. The current approach of aligning individual short reads to a reference genome has proven useful for the detection of small variations (see <xref ref-type="fig" rid="fig1">Figure 1a</xref>), but will most likely be substituted by the application of <italic>de-novo</italic> genome assembly followed by the direct comparison of genomes. This, due to the fact that the current approach of aligning short reads to a reference genome, misses variations in repetitive or (large) structurally variant sequence (see <xref ref-type="fig" rid="fig1">Figure 1b</xref>). Reason for this is the fact that short reads do not span the breakpoints of large variations with respect to the reference genome. By directly comparing <italic>de-novo</italic> assembled genomes it is possible to detect these variations. Furthermore, by directly comparing genomes, variations can also be detected in sequence that is absent from a reference genome (see <xref ref-type="fig" rid="fig1">Figure 1c</xref>). This occurs when the reference genome represents an organism that is somewhat diverged from the sequenced organism of interest.</p>
<fig id="fig1" position="float" orientation="portrait" fig-type="figure">
<label>Figure 1:</label>
<caption><p>An overview of sequence variations that can and cannot be detected by the alignment of short-reads. Genomes are represented by horizontal lines, the reference genome is represented in black. Pairwise sequence variations are marked in red. <bold>a</bold> Short indels and point mutations can be detected by the alignment of short reads. <bold>b</bold> Highly variable regions, large indels and variations in repetitive regions (longer than the read length), cannot be detected by the alignment of short reads with respect to a reference sequence. <bold>c</bold> When comparing samples that are more closely related to eachother than to the reference sequence, simple variations between them are missed by an indirect comparison. Long reads in combination with <italic>de-novo</italic> assembly and whole-genome alignments allow the detection of all of these variations.</p></caption>
<graphic xlink:href="022715_fig1.tif"/>
</fig>
<p>Global alignment of <italic>de-novo</italic> assembled genomes allows the detection of most, if not all, genomic variations. However, the computational burden of dynamic programming based global alignment algorithms like [<xref rid="c14" ref-type="bibr">14</xref>, <xref rid="c7" ref-type="bibr">7</xref>, <xref rid="c12" ref-type="bibr">12</xref>] limits its straightforward application to large eukaryotic genomes, at least when a limited amount of computational time is available. Heuristic local sequence alignment methods, like BLAST and LAST, can handle large genomes and are responsive to relatively short query sequences, but return a multitude of local sequence similarity measures, rather than the variations that differentiate between two complete genomes.</p>
<p>MUMmer [<xref rid="c5" ref-type="bibr">5</xref>], a heuristic sequence alignment method produces pairwise alignments of two entire genomes and reports variations between them. It does this by extracting all maximal exact unique matches (MUMs) between the two genomes and defines &#x2018;chains&#x2019; (solutions of the Longest Increasing Subsequence problem) that collectively represent an alignment. Gaps between MUMs represent SNPs, indels and repetitive and/or variable stretches of sequence. This poses a problem in the alignment of genomes with high repetitiveness, and limits the resolution of variant calls. This is subsequently overcome by resorting to a dynamic programming approach for larger gaps.</p>
<p>Here, we introduce the concept of &#x2018;recursive exact matching&#x2019; for global sequence alignment and provide an implementation called REVEAL. This implementation uses an hierarchical approach towards sequence alignment, which essentially builds up a tree of alignment decisions, where every knot in the tree represents an accepted MUM (see <xref ref-type="fig" rid="fig2">Figure 2</xref>). This way, by definition, a collinear alignment of MUMs is found without any explicit &#x2018;chaining&#x2019;.</p>
<fig id="fig2" position="float" orientation="portrait" fig-type="figure">
<label>Figure 2:</label>
<caption><p>Alignment of two sequences by the application of recursive exact matching. Blue sequence is leading, red sequence is trailing, green sequence is maximally unique matching (MUM). Final alignment is obtained by four recursive alignment steps.</p></caption>
<graphic xlink:href="022715_fig2.tif"/>
</fig>
<p>The advantage of this method is that repetitive stretches of sequence, that were not spanned by MUMs at the genome scale, can be spanned by MUMs in the local context. This results in higher resolution alignments without the need for dynamic programming approaches. On top of that, our method encodes the alignment in a graph structure (see <xref ref-type="fig" rid="fig3">Figure 3</xref>), which enables the extension of our method to construct multiple sequence alignments in a progressive way.</p>
<fig id="fig3" position="float" orientation="portrait" fig-type="figure">
<label>Figure 3:</label>
<caption><p>Resulting alignment graph of the two sequences mentioned in <xref ref-type="fig" rid="fig2">Figure 2</xref>. Green nodes are subsequences specific to input sequence 1. Blue nodes are specific to sequence 2. Red nodes are subsequences that occur in both input sequences, i.e. the hierarchically detected MUMs.</p></caption>
<graphic xlink:href="022715_fig3.tif"/>
</fig>
<p>A probabilistic model based on Extreme Value Theory assesses the significance of matches throughout the construction of the alignment, and prevents the alignment of highly variable and possibly inverted sequences between the two genomes. This increases the interpretability of the alignment and aids in the translation of alignment to variant calls.</p>
<p>We use REVEAL to construct interpretable high-resolution alignments for humansized genomes within reasonable time and identify many structural variations (large indels and inversions). Furthermore, we confirm the quality of our alignment using known statistics on SNPs in whole human genomes [<xref rid="c6" ref-type="bibr">6</xref>]. We show that REVEAL can reproduce and extend findings from a manually curated hybrid approach to detect structural variations, where individual reads originating from the same dataset were aligned and locally reassembled. Importantly, REVEAL detects many additional large inversions, and we detect a remarkable enrichment for inversions on the human X-chromosome. Finally, we show that REVEAL can also be used to construct a high quality MSA for nineteen <italic>Mycobacterium tuberculosis</italic> genomes, and that a MSA can be used to detect genomic variation in sequence that is absent from the H37Rv reference genome between two locally diverged samples.</p>
<p>Taken together, we propose a new global alignment methodology, which, through its scalability and statistical support, is especially suited for the discovery of genomic variants between whole genomes. We believe that this approach progresses the field of variant detection in third generation sequencing data.</p>
</sec>
<sec id="s2">
<label>2</label><title>Methods</title>
<sec id="s2a">
<label>2.1</label><title>Recursive MUM extraction</title>
<p>In order to efficiently determine the best-scoring MUM at various points of the alignment we make use of a generalized extended suffix array, which is key to keep our solution scalable. In this data structure, the indices of the suffixes originating from a concatenation of both genomic sequences (seperated by a sentinel character) are stored in a lexicographically sorted order. Additionally, a longest common prefix array (LCP array) stores the length of the common prefix between consecutive values in the suffix array. REVEAL makes use of libdivsufsort [<xref rid="c11" ref-type="bibr">11</xref>] to construct the suffix array and the Kasai algorithm [<xref rid="c8" ref-type="bibr">8</xref>] to construct an initial LCP array, however, other algorithms can also be used to generate these initial data-structures. MUMs between two input sequences can be found by a single scan over the generalized extended suffix array [<xref rid="c1" ref-type="bibr">1</xref>]. REVEAL essentially considers all unique exact matches within the index, scores them by their length and penalizes them by the amount of deviation from the diagonal in an imaginary alignment matrix (which essentially captures the indel size within the leading and the trailing parts of the alignment), see <xref ref-type="fig" rid="fig4">Figure 4</xref>.</p>
<fig id="fig4" position="float" orientation="portrait" fig-type="figure">
<label>Figure 4:</label>
<caption><p><bold>a</bold> The orange maximal exact match scores best when assuming an affine gap penalty model (gap open=-2 and gap extend=-1), since it is positioned on the diagonal of the matrix, while the red exact match is longer. <bold>b</bold> When testing the significance of the orange exact match, only the red cells of the matrix should be considered, since they are the only valid starting positions of a match that would lead to a similar gap penalty (in this example gamma=98). <bold>c</bold> Within this alignment the red exact match scores best (gap open=-2 and gap extend=-1). <bold>d</bold> When assessing the significance of the best exact match in c, more positions have to be considered as valid starting positions, because more positions within the matrix would lead to an equal or better gap penalty (gamma=318).</p></caption>
<graphic xlink:href="022715_fig4.tif"/>
</fig>
<p>After the alignment of two sequences based on a single &#x2018;best-scoring&#x2019; MUM. Data structures for the unaligned &#x2018;leading&#x2019; and &#x2018;trailing&#x2019; sequences can efficiently be obtained from the original extended generalized suffix array, by splitting it into two new suffix arrays for the leading and the trailing sequences (see Algorithm 1).</p>
<p>When we consider that the suffix array is essentially an ordered set of indices from the input text, we can split this set into suffixes originating from the unaligned &#x2018;leading&#x2019;, the aligned &#x2018;matching&#x2019;, and the unaligned &#x2018;trailing&#x2019; sequences. Where the new LCP value can be derived from the observation that the length of the common prefix between any two values in the suffix array is equal to the minimal value on that interval within the LCP array. After splitting the suffix array, the vast majority of the suffixes will already be in the correct order. However, in some cases (e.g. with overlapping MUMs) a fraction of the suffixes has to be reordered. These can be identified, since the LCP value between two subsequent suffixes extends into the aligned part of the sequence. In these cases we use a modified bubble-sort to reorder only these suffixes and decrease their corresponding LCP values. After performing these two linear time operations we obtain two extended suffix arrays to proceed with the alignment of the unaligned leading and trailing sequences. Since the size of the suffix arrays decreases exponentially, these methods become very fast as the alignment progresses and can be performed in parallel.</p>
</sec>
<sec id="s2b">
<label>2.2</label><title>Significance of an exact match</title>
<p>The alignment procedure continues until no more significant MUMs are available in any segment of the recursion tree.</p>
<p>At each recursion step during the alignment process, MUMs within the current sequence context are scored based on their length and penalized using an affine gap penalty model, which essentially scores MUMs by subtracting the minimal gap size created in the leading and trailing sequences (if the two sequences were aligned on this MUM) from the length of the MUM. The minimal gap size is based on the location of the MUM in an imaginary alignment matrix for the current sequence context, see <xref ref-type="fig" rid="fig4">Figure 4</xref>.</p>
<fig id="ufig1" position="float" orientation="portrait" fig-type="figure">
<graphic xlink:href="022715_ufig1.tif"/>
</fig>
<p>The significance of the single best-scoring MUM is then determined by calculating a p-value. This p-value is derived from a Gumbel distribution, which can be used to model the maximum expected length of an exact match between two random sequences. This allows us to determine the likelihood of a stretch of exact matching bases of a length at least as large as the best-scoring MUM. This likelihood is based upon the number of possible sites at which sequence matches of similar length as the best-scoring MUM can occur between the two aligned sequences. To incorporate the gap penalty into this model, we note that with increasing gap penalties, MUMs need to be longer to attain a similar score as the best-scoring MUM. For such longer MUMs, there are therefore less potential matching locations. Incorporating this notion in the parameters of the Gumbel distribution increases the significance of MUMs with low gap penalty values.</p>
<p>More specifically, the cdf of the Gumbel distribution is given by <inline-formula><alternatives><inline-graphic xlink:href="022715_inline1.gif"/></alternatives></inline-formula> where <italic>x</italic> is equal to the length of the observed MUM and the parameters <italic>&#x03BC;</italic> and <italic>&#x03B2;</italic> can be derived as follows:</p>
<p><italic>&#x03BC;</italic> = log(1<italic>/&#x03B1;</italic>) where <italic>&#x03B1;</italic> is the probability of observing a matching base between two random sequences. For now, we ignore the effect of repetitiveness and deviations in nucleotide frequency throughout the genome when modeling our null-distribution and assume a constant value of 0.25 for <italic>&#x03B1;</italic>. However, we recognize that a larger value for <italic>&#x03B1;</italic> would be more appropriate in most cases.</p>
<p><italic>&#x03B2;</italic> = log(<italic>&#x03BC;</italic>)<italic>/&#x03B3;</italic>, where <italic>&#x03B3;</italic> is the number of positions on which two sequences of length <italic>m</italic> and <italic>n</italic> can be compared in order to produce an exact match with a score that is equal or better than the observed match. The applied gap penalty model and the length of a MUM influence this value. The appropriate value for <italic>&#x03B3;</italic> is best understood by considering the comparison of two sequences within a matrix, where any deviation from the diagonal can be considered as a gap in the alignment. <xref ref-type="fig" rid="fig4">Figure 4</xref> shows the effect of a gap penalty model on the best-scoring MUM and the starting positions that need to be evaluated in a statistical test that determines how likely it is to observe an exact match with this length at a similar position.</p>
<p>Note that for off-diagonal positions only longer MUMs can attain a more significant score than the best-scoring MUM. Although it would be possible to calculate an exact p-value by using a mixture of Gumbel distributions, we approximate this value for computational reasons in a conservative manner using a single Gumbel distribution, with a cutoff corresponding to the smallest allowable MUM length.</p>
</sec>
<sec id="s2c">
<label>2.3</label><title>Alignment graphs</title>
<p>The alignment of two sequences can be modeled in an alignment graph. Here we suggest an acyclic directional alignment graph in which nodes describe the sequence specifiedby an interval within one or multiple input sequences. Edges describe the contiguity of these intervals within the original input sequence.</p>
<p>As can be seen from <xref ref-type="fig" rid="fig3">Figure 3</xref>, the alignment graph compresses (in this case) two input sequences, where both input sequences correspond to two partially overlapping walks in the graph. This graph is acquired by iteratively breaking the two input nodes up into the unaligned leading and trailing sequences and collapsing the best-scoring MUM into one node, as described in <xref ref-type="fig" rid="fig2">Figure 2</xref>. Within the resulting graph, bubble structures indicate variations between the two sequences.</p>
</sec>
<sec id="s2d">
<label>2.4</label><title>Alignment of graphs</title>
<p>Apart from the alignment of two genomes, REVEAL can also be used to align a genome to an earlier obtained alignment graph, or align two alignment graphs to eachother. This enables the construction of a multiple sequence alignments. In more or less the same way as we indexed two genomes before, we can also index the two sets of sequences corresponding to the nodes in both graphs. Next, the best-scoring MUM can be detected, followed by the alignment of the originating nodes (see <xref ref-type="fig" rid="fig5">Figure 5</xref>). Now a graph search (depth-first), from the aligned node is conducted in both directions in order to segment the two graphs in an &#x2018;unaligned leading subgraph&#x2019; and an &#x2018;unaligned trailing subgraph&#x2019;. Within these subgraphs the same recursive approach can be applied until no more significant MUMs are detected. The resulting &#x2018;multi-sample alignment graphs&#x2019; now contain all variations between all samples, which might lead to more complex and nested bubble structures that essentially describe the differences between all samples at that position, given the obtained multi-alignment. Many variations obtained in this way, are variations that cannot be detected when variants are only detected with respect to a single reference sequence (<xref ref-type="fig" rid="fig5">Figure 5</xref>).</p>
<fig id="fig5" position="float" orientation="portrait" fig-type="figure">
<label>Figure 5:</label>
<caption><p>The alignment of two additional sequences (with respect to <xref ref-type="fig" rid="fig3">Figure 3</xref>) &#x2018;TTCGGGTTAGTCCACTTGAT&#x2019; (sequence 3) and &#x2018;TTCGGGTTTAGTCACTTCAT&#x2019;(sequence 4) leads to a more complicated bubble structure. If we would consider input sequence 1 (&#x2018;ATCGGAACTAGTCCACGTTGAT&#x2019;) as a reference sequence to which other sequences are compared one-by-one, there would not be a straightforward way of detecting the deleted &#x2018;T&#x2019; at position 7 in sequence 3 with respect to sequences 2 and 4.</p></caption>
<graphic xlink:href="022715_fig5.tif"/>
</fig>
</sec>
<sec id="s2e">
<label>2.5</label><title>Alignments to variant calls</title>
<p>Bubbles in the resulting alignment graphs represent variations at the base pair level between genomes. Bubbles are formed by node pairs denoted as source and sink nodes. A source-sink pair is found when all paths starting in a node that is common to more than one sample, ends up in another node that is common to at least a subset of these samples. From simple bubble structures (<xref ref-type="fig" rid="fig3">Figure 3</xref>) it is easy to recognize SNPs and indels. Complex or nested bubbles that occur in multi sample graphs, as shown in <xref ref-type="fig" rid="fig5">Figure 5</xref>, can be more complicated, since they essentially describe a multitude of different pairwise variations. In the current version of this software, these bubbles are not translated into specific variant calls, but these will be addressed in future work. Simple bubble structures (also when they are nested in more complicated bubbles) are detected and translated into either substitution or indel calls between subsets of the aligned samples.</p>
</sec>
<sec id="s2f">
<label>2.6</label><title>Detection of inversions and translocations</title>
<p>Substitution calls can either contain a single base (in which case they are SNPs), or contain stretches of highly variable sequence (for example, the AAC/GTT bubble in <xref ref-type="fig" rid="fig3">Figure 3</xref>). When these stretches are longer, they could be due to inverted sequence. In order to detect these inversions, the variant alleles in their current orientation as well as in reverse-complemented orientation (one of them) can be aligned using a simple Needleman-Wunsch alignment. If the score of the reverse complemented alignment is now considerably larger than a certain cutoff, an inversion is detected. This detection is implemented within the current variant caller (since Needleman-Wunsch alignment is used, the size of the detectable inversions is limited depending on available RAM). Translocations can also be recognized in a similar way by aligning every insert variant onto every delete variant using a sequence similarity search application like BLAST.</p>
</sec>
</sec>
<sec id="s3">
<label>3</label><title>Results</title>
<sec id="s3a">
<p>Human-sized genome alignment possible: To show that REVEAL scales up to large sized genomes, two human genome assemblies were aligned and variations between them were analyzed. For the alignments, the manually curated human reference genome GRCh37, created by BAC cloning and Sanger sequencing, was aligned with a recent assembly of a hydatidiform mole (CHM1), using third generation sequencing [<xref rid="c2" ref-type="bibr">2</xref>]).</p>
<p>The CHM1 assembly used here consists of about 25.000 contigs. To make efficient use of the alignment algorithm proposed here, genome assemblies should be complete. Meaning that, ideally, the number of contigs resulting from a <italic>de-novo</italic> assembly should be equal to the number of chromosomes in the sequenced organism. To correct for this, the ordering and orientation of contigs was derived from the GRCh37 genome.</p>
<p>Hereto, all MUMs with a size larger than 1000 base pairs with respect to the GRCh37 genome were obtained from a suffix array that contained a concatenation of all contigs (in both orientations) and all chromosomes (in one orientation). Then, contigs were assigned to the chromosome on which most MUMs aligned. Next, contigs were ordered and oriented with respect to the reference sequence. This way, 23 chromosome-length sequences were obtained for the CHM1 assembly, which were aligned to the corresponding chromosomes on GRCh37.</p>
<p>For each aligned chromosome, variations were detected in the alignment graphs. From these variations, we found that the transition to transversion (Ts/Tv) ratio over all detected SNPs was 2.1 which is in accordance with Ts/Tv rates detected by other whole-genome sequencing studies of the human genome [<xref rid="c6" ref-type="bibr">6</xref>]. Furthermore, we observed a mutation in, on average, every 1003 bases, which is in line with an estimated average mutation load of 0.001 [<xref rid="c6" ref-type="bibr">6</xref>].</p>
<sec id="s3a1"><title>Many more large indels detected</title>
<p>For the remaining variations we were interested in those larger than 50 base pairs. <xref ref-type="fig" rid="fig6">Figure 6</xref> shows two plots of the distribution of all indel sizes larger than 50 base pairs, illustrating that more than 14000 large indels could be detected in the constructed whole-genome alignment. The distributions shown in <xref ref-type="fig" rid="fig6">Figure 6</xref> reveal two peaks at around 300 and 6000 base pairs. These correspond to indels caused by ALU and L1 transposable elements. This finding was confirmed in [<xref rid="c2" ref-type="bibr">2</xref>].</p>
<fig id="fig6" position="float" orientation="portrait" fig-type="figure">
<label>Figure 6:</label>
<caption><p>Size distributions of indels larger than 50bp between two human genome assemblies. Indels less than 1kb are shown on the top and indels greater than 1kb are shown on the bottom.</p></caption>
<graphic xlink:href="022715_fig6.tif"/>
</fig>
</sec>
<sec id="s3a2"><title>Large inversions detected</title>
<p>Large inversions (up to 75.000 base pairs) were also detected. In <xref ref-type="fig" rid="fig7">Figure 7</xref> we compared the number of detected inversions from the whole-genome alignment to the number of detected inversions by Chaisson et al [<xref rid="c2" ref-type="bibr">2</xref>]. We note that our method detects far more inversions. Remarkably, we find an enrichment for large inversions on the X-chromosome. This difference may be explained by the difference between the hybrid approach employed by Chaisson and the method used here. Since inversions are often flanked by very large inverted repeat structures, this might obfuscate the detection of breakpoints necessary for the hybrid method to detect them. Another explanation might lie in misassembly of the Celera de-novo assembler [<xref rid="c13" ref-type="bibr">13</xref>] that was used to construct the CHM1 genome. However, a twofold enrichment of large inversions on the X-chromosome was previously observed by a study that focussed on structural variations between human genomes of different origins [<xref rid="c9" ref-type="bibr">9</xref>]. In this study, this finding was explained by the enrichment of unusual inverted repeat structures on the X-chromosome, which supposedly increases the odds of structural rearrangements like inversions [<xref rid="c16" ref-type="bibr">16</xref>] [<xref rid="c15" ref-type="bibr">15</xref>]. The hybrid approach employed by Chaisson et al. might have missed this, which would make yet another strong case for whole-genome alignments of complete de-novo assemblies.</p>
<fig id="fig7" position="float" orientation="portrait" fig-type="figure">
<label>Figure 7:</label>
<caption><p>Inversions larger than 50 base pairs per chromosome. Whole-genome alignment detects more inversions than the method employed by Chaisson et al. The X-chromosome seems to be enriched for large inversion events.</p></caption>
<graphic xlink:href="022715_fig7.tif"/>
</fig>
</sec>
<sec id="s3a3"><title>Multi alignment of 19 whole genomes possible</title>
<p>To show that our method does not only scale to large size genomes, but can also be used to align large numbers of genomes, we progressively aligned nineteen <italic>Mycobacterium tuberculosis</italic> genomes. Publicly available genomes were obtained through the TB-ARC K-RITH initiative of the Broad Institute. From these genomes, nineteen were selected from a random clade in the phylogenetic tree. Contigs were then ordered and oriented with respect to the H37Rv reference genome. Next, all genomes were sequentially aligned in a random order, resulting in an alignment graph containing a representation of all genomic variation.</p>
</sec>
<sec id="s3a4"><title>Sequence identity decreases linearly with number of genomes</title>
<p>By keeping track of the amount of sequence that is common to all genomes in the MSA graph we measured sequence &#x2018;identity&#x2019; throughout the progressive alignment. As can be seen from <xref ref-type="fig" rid="fig8">Figure 8</xref>, there seems to be a steady linear decrease in sequence identity when adding multiple samples, as would be expected from the increase in variable sequence. Eventually, all genomes were aligned with about 93&#x0025; sequence identity. We should note that the order in which genomes and graphs are aligned influences the resulting MSA, we believe that results could be further improved when this is taken into consideration.</p>
<fig id="fig8" position="float" orientation="portrait" fig-type="figure">
<label>Figure 8:</label>
<caption><p>Linear decrease of identity while aligning nineteen <italic>Mycobacterium tuberculosis</italic> genomes</p></caption>
<graphic xlink:href="022715_fig8.tif"/>
</fig>
</sec>
<sec id="s3a5"><title>Small sequence variation between pairs of genomes detectable</title>
<p>In the MSA of two different <italic>Mycobacterium tuberculosis</italic> genomes, <italic>TKK 04 0085</italic> (genbank id 622044059) and <italic>TKK 04 0098</italic> (genbank id 622072251), with the H37Rv reference genome, we were able to identify variations in sequence that was absent from the reference genome. In <xref ref-type="fig" rid="fig9">Figure 9</xref> a bubble structure in the alignment graph shows two SNPs and one indel in sequence that is absent from the reference genome. Many more of these variations are observed in multiple sequence alignments of more distant related genomes.</p>
<fig id="fig9" position="float" orientation="portrait" fig-type="figure">
<label>Figure 9:</label>
<caption><p>Variations between TKK 04 0085 and TKK 04 0098 in sequence absent from the H37Rv reference genome are indicated by arrows. Blue nodes contain sequence that is absent from the H37Rv reference genome but does exist in both TKK 04 0098 and TKK 04 0085. Purple nodes contain sequence that occurs in all three genomes. The size of nodes corresponds to the length of the contained sequence.</p></caption>
<graphic xlink:href="022715_fig9.tif"/>
</fig>
</sec>
</sec>
<sec id="s3b">
<label>3.1</label><title>Performance</title>
<p>REVEAL uses a single CPU architecture. However, the presented algorithm is very well suited to support multiple CPU&#x2019;s in parallel. All alignments presented here ran within 12 hours on a single CPU. This time can be greatly reduced by a parallel approach. The memory usage of the current implementation is about 21n bytes (O(n)), where n is the sum of the length of the two input genomes. The use of more space economical datastructures and encodings can further reduce this amount. However, we believe that the current implementation in combination with modern computer architectures will make this implementation applicable to most genomes. The sequential alignment of nineteen <italic>Mycobacterium tuberculosis</italic> genomes presented here took about 20 minutes on a single 2GHz Intel Core I7 processor.</p>
</sec>
</sec>
<sec id="s4">
<label>4</label><title>Discussion</title>
<p>Here we introduce REVEAL, a &#x2018;recursive exact matching&#x2019; approach that is capable of aligning whole-genomes. We show that it can be used to detect various structural variations from two <italic>de-novo</italic> human genome assemblies. We also showed that REVEAL can be used to align multiple genomes and illustrate the advantage of reference-free (or direct) genome comparisons by a specific multiple genome alignment of two diverged genomes.</p>
<p>It is important to note that, unlike exact or optimal global alignment methods, REVEAL is considered as a heuristical approach. However, this does not mean that the produced alignments are of lesser quality. In case of high sequence divergence we do indeed anticipate that an optimal alignment algorithm might be a better choice, but the optimality still depends on the minimisation of a cost function that in general only addresses substitutions and indels, but lacks inversions and translocations as biologically valid edit operations.</p>
<p>We believe that the concept introduced here is the way forward in order to obtain alignments of thousands to eventually millions of complete genomes that are currently being produced by initiatives like Human Longevity, Inc and others. However, we do acknowledge certain shortcomings of the current implementation.</p>
<p>For example, to make optimal use of the alignment algorithm, we depend on complete genomes, which means that contigs have to be ordered and oriented up front. Here, we ordered and oriented contigs with respect to an available reference sequence, however, ordering and orienting contigs with respect to another incomplete assembly, would be a more appropriate solution.</p>
<p>Another problem that we foresee is that we use a greedy approach towards overlapping exact matches, although the impact of this problem is limited in the case of pairwise alignments, this can become problematic in the setting of multiple sequence alignments with for example variable number tandem repeats. Multiple sequence alignments also produce more complicated (or nested) bubble structures in the alignment graph. This makes it a lot harder to make calls for all variations in a multiple sequence alignment graph.</p>
<p>Here, we used a progressive approach towards multiple sequence alignment. We believe that this is also the most realistic way to obtain multiple-genome alignments of thousands of large genomes. Conceptually, a recursive exact matching algorithm can also be used to align more than two genomes at a time, based on for example multi-MUMs [<xref rid="c4" ref-type="bibr">4</xref>]. However, this won&#x2019;t scale to the number of samples that are needed to obtain statistical power in comparitive genomics studies of large genomes, and thus we believe that a progressive approach will be necessary at some point in time.</p>
<p>We used REVEAL to construct alignments for haplotype-genomes, the approach can also be applied to diploid genome assemblies, because they can be modeled as graphs similar to the result of the alignment of two haploid genomes. This way, alignments between a multitude of diploid genomes are conceptually possible as well.</p>
<p>In conclusion, we believe that REVEAL and the concepts introduced here advance the field of variant discovery from third generation sequencing data and can make an important contribution to the decoding of the second generation of complete <italic>de-novo</italic> assembled genomes that are currently being produced worldwide.</p>
</sec>
</body>
<back>
<ack><title>Acknowledgements</title>
<p>We thank Jason Chin and Pacific Biosciences for providing us with the assembled contigs for the human CHM1 assembly.</p>
</ack>
<ref-list><title>References</title>
<ref id="c1"><label>[1]</label><mixed-citation publication-type="book"><string-name><given-names>Mohamed Ibrahim</given-names> <surname>Abouelhoda</surname></string-name>, <string-name><given-names>Stefan</given-names> <surname>Kurtz</surname></string-name>, and <string-name><given-names>Enno</given-names> <surname>Ohlebusch</surname></string-name>. <chapter-title>The enhanced suffix array and its applications to genome analysis</chapter-title>. In <source>Algorithms in Bioinformatics</source>, pp. <fpage>449</fpage>&#x2013;<lpage>463</lpage>. <publisher-name>Springer</publisher-name>, <year>2002</year>.</mixed-citation></ref>
<ref id="c2"><label>[2]</label><mixed-citation publication-type="other"><string-name><given-names>Mark JP</given-names> <surname>Chaisson</surname></string-name>, <string-name><surname>John</surname> <given-names>Huddleston</given-names></string-name>, <string-name><given-names>Megan Y</given-names> <surname>Dennis</surname></string-name>, <string-name><given-names>Peter H</given-names> <surname>Sudmant</surname></string-name>, <string-name><surname>Maika</surname> <given-names>Malig</given-names></string-name>, <string-name><surname>Fereydoun</surname> <given-names>Hormozdiari</given-names></string-name>, <string-name><surname>Francesca</surname> <given-names>Antonacci</given-names></string-name>, <string-name><surname>Urvashi</surname> <given-names>Surti</given-names></string-name>, <string-name><surname>Richard</surname> <given-names>Sandstrom</given-names></string-name>, <string-name><surname>Matthew</surname> <given-names>Boitano</given-names></string-name>, <etal>et al.</etal> <article-title>Resolving the complexity of the human genome using single-molecule sequencing</article-title>. <source>Nature</source>, <year>2014</year>.</mixed-citation></ref>
<ref id="c3"><label>[3]</label><mixed-citation publication-type="journal"><string-name><given-names>Chen-Shan</given-names> <surname>Chin</surname></string-name>, <string-name><given-names>David H</given-names> <surname>Alexander</surname></string-name>, <string-name><given-names>Patrick</given-names> <surname>Marks</surname></string-name>, <string-name><given-names>Aaron A</given-names> <surname>Klammer</surname></string-name>, <string-name><given-names>James</given-names> <surname>Drake</surname></string-name>, <string-name><given-names>Cheryl</given-names> <surname>Heiner</surname></string-name>, <string-name><given-names>Alicia</given-names> <surname>Clum</surname></string-name>, <string-name><given-names>Alex</given-names> <surname>Copeland</surname></string-name>, <string-name><given-names>John</given-names> <surname>Huddleston</surname></string-name>, <string-name><given-names>Evan E</given-names> <surname>Eichler</surname></string-name>, <etal>et al.</etal> <article-title>Nonhybrid, finished microbial genome assemblies from long-read smrt sequencing data</article-title>. <source>Nature methods</source>, <volume>10</volume>(<issue>6</issue>):<fpage>563</fpage>&#x2013;<lpage>569</lpage>, <year>2013</year>.</mixed-citation></ref>
<ref id="c4"><label>[4]</label><mixed-citation publication-type="journal"><string-name><given-names>Aaron E</given-names> <surname>Darling</surname></string-name>, <string-name><given-names>Bob</given-names> <surname>Mau</surname></string-name>, and <string-name><given-names>Nicole T</given-names> <surname>Perna</surname></string-name>. <article-title>progressivemauve: multiple genome alignment with gene gain, loss and rearrangement</article-title>. <source>PloS one</source>, <volume>5</volume>(<issue>6</issue>):<fpage>e11147</fpage>, <year>2010</year>.</mixed-citation></ref>
<ref id="c5"><label>[5]</label><mixed-citation publication-type="journal"><string-name><given-names>Arthur L</given-names> <surname>Delcher</surname></string-name>, <string-name><given-names>Simon</given-names> <surname>Kasif</surname></string-name>, <string-name><given-names>Robert D</given-names> <surname>Fleischmann</surname></string-name>, <string-name><given-names>Jeremy</given-names> <surname>Peterson</surname></string-name>, <string-name><given-names>Owen</given-names> <surname>White</surname></string-name>, and <string-name><given-names>Steven L</given-names> <surname>Salzberg</surname></string-name>. <article-title>Alignment of whole genomes</article-title>. <source>Nucleic acids research</source>, <volume>27</volume>(<issue>11</issue>):<fpage>2369</fpage>&#x2013;<lpage>2376</lpage>, <year>1999</year>.</mixed-citation></ref>
<ref id="c6"><label>[6]</label><mixed-citation publication-type="journal"><string-name><given-names>Mark A</given-names> <surname>DePristo</surname></string-name>, <string-name><given-names>Eric</given-names> <surname>Banks</surname></string-name>, <string-name><given-names>Ryan</given-names> <surname>Poplin</surname></string-name>, <string-name><given-names>Kiran V</given-names> <surname>Garimella</surname></string-name>, <string-name><given-names>Jared R</given-names> <surname>Maguire</surname></string-name>, <string-name><given-names>Christopher</given-names> <surname>Hartl</surname></string-name>, <string-name><given-names>Anthony A</given-names> <surname>Philippakis</surname></string-name>, <string-name><given-names>Guillermo</given-names> <surname>del Angel</surname></string-name>, <string-name><given-names>Manuel A</given-names> <surname>Rivas</surname></string-name>, <string-name><given-names>Matt</given-names> <surname>Hanna</surname></string-name>, <etal>et al.</etal> <article-title>A framework for variation discovery and genotyping using next-generation dna sequencing data</article-title>. <source>Nature genetics</source>, <volume>43</volume>(<issue>5</issue>):<fpage>491</fpage>&#x2013;<lpage>498</lpage>, <year>2011</year>.</mixed-citation></ref>
<ref id="c7"><label>[7]</label><mixed-citation publication-type="journal"><string-name><surname>Daniel</surname> <given-names>S.</given-names></string-name> <string-name><surname>Hirschberg</surname>.<given-names>A</given-names></string-name> <article-title>linear space algorithm for computing maximal common subsequences</article-title>. <source>Communications of the ACM</source>, <volume>18</volume>(<issue>6</issue>):<fpage>341</fpage>&#x2013;<lpage>343</lpage>, <year>1975</year>.</mixed-citation></ref>
<ref id="c8"><label>[8]</label><mixed-citation publication-type="book"><string-name><surname>Toru</surname> <given-names>Kasai</given-names></string-name>, <string-name><surname>Gunho</surname> <given-names>Lee</given-names></string-name>, <string-name><surname>Hiroki</surname> <given-names>Arimura</given-names></string-name>, <string-name><surname>Setsuo</surname> <given-names>Arikawa</given-names></string-name>, and <string-name><surname>Kunsoo</surname> <given-names>Park</given-names>.</string-name> <chapter-title>Linear-time longest-common-prefix computation in suffix arrays and its applications</chapter-title>. In <source>Combinatorial pattern matching</source>, pp. <fpage>181</fpage>&#x2013;<lpage>192</lpage>. <publisher-name>Springer</publisher-name>, <year>2001</year>.</mixed-citation></ref>
<ref id="c9"><label>[9]</label><mixed-citation publication-type="journal"><string-name><given-names>Jeffrey M</given-names> <surname>Kidd</surname></string-name>, <string-name><given-names>Gregory M</given-names> <surname>Cooper</surname></string-name>, <string-name><given-names>William F</given-names> <surname>Donahue</surname></string-name>, <string-name><given-names>Hillary S</given-names> <surname>Hayden</surname></string-name>, <string-name><given-names>Nick</given-names> <surname>Sampas</surname></string-name>, <string-name><given-names>Tina</given-names> <surname>Graves</surname></string-name>, <string-name><given-names>Nancy</given-names> <surname>Hansen</surname></string-name>, <string-name><given-names>Brian</given-names> <surname>Teague</surname></string-name>, <string-name><given-names>Can</given-names> <surname>Alkan</surname></string-name>, <string-name><given-names>Francesca An-</given-names> <surname>tonacci</surname></string-name>, <etal>et al.</etal> <article-title>Mapping and sequencing of structural variation from eight human genomes</article-title>. <source>Nature</source>, <volume>453</volume>(<issue>7191</issue>):<fpage>56</fpage>&#x2013;<lpage>64</lpage>, <year>2008</year>.</mixed-citation></ref>
<ref id="c10"><label>[10]</label><mixed-citation publication-type="journal"><string-name><given-names>Nicholas James</given-names> <surname>Loman</surname></string-name>, <string-name><given-names>Joshua</given-names> <surname>Quick</surname></string-name>, and <string-name><given-names>Jared T</given-names> <surname>Simpson</surname></string-name>. <article-title>A complete bacterial genome assembled de novo using only nanopore sequencing data</article-title>. <source>bioRxiv</source>, <year>2015</year>.</mixed-citation></ref>
<ref id="c11"><label>[11]</label><mixed-citation publication-type="other"><string-name><given-names>Y</given-names> <surname>Mori</surname>.</string-name> <source>libdivsufsort: A lightweight suffix-sorting library</source>, <year>2007</year>.</mixed-citation></ref>
<ref id="c12"><label>[12]</label><mixed-citation publication-type="journal"><string-name><given-names>Eugene W</given-names> <surname>Myers</surname></string-name> and <string-name><given-names>Webb</given-names> <surname>Miller</surname></string-name>. <article-title>Optimal alignments in linear space</article-title>. <source>Computer applications in the biosciences: CABIOS</source>, <volume>4</volume>(<issue>1</issue>):<fpage>11</fpage>&#x2013;<lpage>17</lpage>, <year>1988</year>.</mixed-citation></ref>
<ref id="c13"><label>[13]</label><mixed-citation publication-type="journal"><string-name><given-names>Eugene W</given-names> <surname>Myers</surname></string-name>, <string-name><given-names>Granger G</given-names> <surname>Sutton</surname></string-name>, <string-name><given-names>Art L</given-names> <surname>Delcher</surname></string-name>, <string-name><given-names>Ian M</given-names> <surname>Dew</surname></string-name>, <string-name><given-names>Dan P</given-names> <surname>Fasulo</surname></string-name>, <string-name><given-names>Michael J</given-names> <surname>Flanigan</surname></string-name>, <string-name><given-names>Saul A</given-names> <surname>Kravitz</surname></string-name>, <string-name><given-names>Clark M</given-names> <surname>Mobarry</surname></string-name>, <string-name><given-names>Knut HJ</given-names> <surname>Reinert</surname></string-name>, <string-name><given-names>Karin A</given-names> <surname>Remington</surname></string-name>, <etal>et al.</etal> <article-title>A whole-genome assembly of drosophila</article-title>. <source>Science</source>, <volume>287</volume>(<issue>5461</issue>):<fpage>2196</fpage>&#x2013;<lpage>2204</lpage>, <year>2000</year>.</mixed-citation></ref>
<ref id="c14"><label>[14]</label><mixed-citation publication-type="journal"><string-name><given-names>Saul B</given-names> <surname>Needleman</surname></string-name> and <string-name><given-names>Christian D</given-names> <surname>Wunsch</surname></string-name>. <article-title>A general method applicable to the search for similarities in the amino acid sequence of two proteins</article-title>. <source>Journal of molecular biology</source>, <volume>48</volume>(<issue>3</issue>):<fpage>443</fpage>&#x2013;<lpage>453</lpage>, <year>1970</year>.</mixed-citation></ref>
<ref id="c15"><label>[15]</label><mixed-citation publication-type="journal"><string-name><given-names>Mariko</given-names> <surname>Sasaki</surname></string-name>, <string-name><given-names>Julian</given-names> <surname>Lange</surname></string-name>, and <string-name><given-names>Scott</given-names> <surname>Keeney</surname></string-name>. <article-title>Genome destabilization by homologous recombination in the germ line</article-title>. <source>Nature reviews Molecular cell biology</source>, <volume>11</volume>(<issue>3</issue>):<fpage>182</fpage>&#x2013;<lpage>195</lpage>, <year>2010</year>.</mixed-citation></ref>
<ref id="c16"><label>[16]</label><mixed-citation publication-type="journal"><string-name><given-names>Peter E</given-names> <surname>Warburton</surname></string-name>, <string-name><given-names>Joti</given-names> <surname>Giordano</surname></string-name>, <string-name><given-names>Fanny</given-names> <surname>Cheung</surname></string-name>, <string-name><given-names>Yefgeniy</given-names> <surname>Gelfand</surname></string-name>, and <string-name><given-names>Gary</given-names> <surname>Benson</surname></string-name>. <article-title>Inverted repeat structure of the human genome: the x-chromosome contains a preponderance of large, highly homologous inverted repeats that contain testes genes</article-title>. <source>Genome research</source>, <volume>14</volume>(<issue>10a</issue>):<fpage>1861</fpage>&#x2013;<lpage>1869</lpage>, <year>2004</year>.</mixed-citation></ref>
</ref-list>
</back>
</article>

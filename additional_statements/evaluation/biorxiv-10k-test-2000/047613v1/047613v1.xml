<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.2d1 20170631//EN" "JATS-archivearticle1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" article-type="article" dtd-version="1.2d1" specific-use="production" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">BIORXIV</journal-id>
<journal-title-group>
<journal-title>bioRxiv</journal-title>
<abbrev-journal-title abbrev-type="publisher">bioRxiv</abbrev-journal-title>
</journal-title-group>
<publisher>
<publisher-name>Cold Spring Harbor Laboratory</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1101/047613</article-id>
<article-version>1.1</article-version>
<article-categories>
<subj-group subj-group-type="author-type">
<subject>Regular Article</subject>
</subj-group>
<subj-group subj-group-type="heading">
<subject>New Results</subject>
</subj-group>
<subj-group subj-group-type="hwp-journal-coll">
<subject>Bioinformatics</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>Comparison of Clustering Methods for High-Dimensional Single-Cell Flow and Mass Cytometry Data</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-3282-1730</contrib-id>
<name><surname>Weber</surname> <given-names>Lukas M.</given-names></name>
<xref ref-type="aff" rid="a1"><sup>1</sup></xref>
<xref ref-type="aff" rid="a2"><sup>2</sup></xref>
</contrib>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-3048-5518</contrib-id>
<name><surname>Robinson</surname> <given-names>Mark D.</given-names></name>
<xref ref-type="aff" rid="a1"><sup>1</sup></xref>
<xref ref-type="aff" rid="a2"><sup>2</sup></xref>
<xref ref-type="corresp" rid="cor1">&#x002A;</xref>
</contrib>
<aff id="a1"><label>1</label><institution>Institute of Molecular Life Sciences</institution>, University of Zurich, <country>Switzerland</country></aff>
<aff id="a2"><label>2</label><institution>SIB Swiss Institute of Bioinformatics</institution>, University of Zurich, <country>Switzerland</country></aff>
</contrib-group>
<author-notes>
<corresp id="cor1"><label>&#x002A;</label><email>mark.robinson@imls.uzh.ch</email></corresp>
</author-notes>
<pub-date pub-type="epub">
<year>2016</year>
</pub-date>
<elocation-id>047613</elocation-id>
<history>
<date date-type="received">
<day>07</day>
<month>4</month>
<year>2016</year>
</date>
<date date-type="accepted">
<day>07</day>
<month>4</month>
<year>2016</year>
</date>
</history>
<permissions>
<copyright-statement>&#x00A9; 2016, Posted by Cold Spring Harbor Laboratory</copyright-statement>
<copyright-year>2016</copyright-year><license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by/4.0/"><license-p>This pre-print is available under a Creative Commons License (Attribution 4.0 International), CC BY 4.0, as described at <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link></license-p></license></permissions>
<self-uri xlink:href="047613.pdf" content-type="pdf" xlink:role="full-text"/>
<abstract>
<title>Abstract</title>
<p>Single-cell analysis techniques are frequently used to characterize and detect cell populations in biological samples. The latest advances in multicolor flow cytometry and mass cytometry enable measurement of dozens of parameters per cell in thousands of cells per second. This has led to bottlenecks in data analysis, since traditional gating techniques are insufficient for these large, high-dimensional data sets. To address this, major efforts have been made to develop automated analysis methods. A key step in automated analysis is the use of clustering methods to detect high-dimensional clusters representing cell populations. Here, we have performed an up-to-date, comprehensive, extensible comparison of clustering methods for detecting cell populations in high-dimensional flow and mass cytometry data, including several new methods that were not yet available during previous comparisons. We evaluated clustering methods using four publicly available data sets containing major immune cell populations as well as specific rare populations, with population identities available from manual gating. The comparisons revealed that FlowSOM (with optional meta-clustering but without automatic selection of the number of clusters) performed well across all data sets, and had among the fastest runtimes. We recommend FlowSOM as a first choice for analyzing new data sets. In particular, the fast runtimes enable interactive, exploratory analyses on a standard laptop. Several methods were sensitive to random starts when detecting rare cell populations, indicating that multiple random starts should be used in these cases. Our results provide a guide for researchers deciding between clustering methods for analyzing data sets from high-dimensional flow and mass cytometry experiments. R scripts to reproduce all analyses are available from GitHub (<ext-link ext-link-type="uri" xlink:href="https://github.com/lmweber/cytometry-clustering-comparison">https://github.com/lmweber/cytometry-clustering-comparison</ext-link>), and preprocessed data files are available from FlowRepository (FR-FCM-ZZPH), allowing our comparisons to be extended to include new clustering methods and reference data sets.</p>
<sec>
<title>Author Summary</title>
<p>Detecting cell types or populations is an important part of many biological experiments and medical diagnostic procedures. For example, in cancer diagnostics, tumor subtypes may be identified by the presence of certain cell types, while in vaccine research, the success of a vaccine may be inferred from the frequency of activated immune cells. Flow cytometry and mass cytometry are technologies used to identify cell populations by measuring the expression of characteristic proteins on cell surfaces or within cells. With the latest advances, dozens of proteins can be measured for each cell, precisely characterizing the diversity of cell types present. However, this leads to challenges in data analysis. Recently, significant efforts have been made to develop automated analysis methods, many of which rely on clustering methods to detect groups of similar cells. Here, we have compared the performance of available clustering methods, using several publicly available data sets as benchmarks. The results provide guidance to researchers trying to decide which method to use when analyzing data sets. By helping researchers choose appropriate data analysis methods, this work will improve confidence in reported experimental results, and ultimately contribute to broader adoption of these state-of-the-art technologies for applications in biology and medicine.</p>
</sec>
</abstract>
<counts>
<page-count count="28"/>
</counts>
</article-meta>
</front>
<body>
<sec id="s2">
<title>Introduction</title>
<p>Single-cell analysis techniques are frequently used to study cell populations, which may be defined as groups of cells with consistent phenotypic or functional characteristics. The identification or characterization of cell populations is a key analysis step in a broad range of studies in biology and biomedicine. Examples of design settings include: identification of known cell populations of interest in a biological sample, such as disease biomarkers; characterization of previously unknown cell subpopulations; and differential abundance analysis of cell populations between samples in different biological conditions, such as diseased and healthy.</p>
<p>Flow cytometry (fluorescence activated cell sorting, or FACS) is a widely used technology for measuring expression levels of surface and intracellular proteins at the individual cell level. In many cases, cell populations can then be defined according to their protein expression profiles. In the field of immunology, this procedure has seen enormous success over the past several decades, for example leading to a detailed framework of cellular differentiation during hematopoiesis [<xref ref-type="bibr" rid="c1">1</xref>].</p>
<p>Modern multicolor flow cytometers are capable of measuring up to 10-15 parameters per cell (in some cases up to 20), at a throughput rate of greater than 10,000 cells per second [<xref ref-type="bibr" rid="c2">2</xref>]. The resulting multidimensional data sets allow cell populations to be characterized in great detail. However, the number of parameters (protein expression levels) that can be measured per cell is ultimately limited by technical characteristics of flow cytometry, in particular spectral overlap and autofluorescence [<xref ref-type="bibr" rid="c2">2</xref>].</p>
<p>Mass cytometry (also known as cytometry by time-of-flight, or CyTOF) allows a greater number of parameters to be measured per cell [<xref ref-type="bibr" rid="c3">3</xref>]. In mass cytometry experiments, antibodies are labeled with elemental isotopes selected from the transition metals, which are rare in normal biological systems, instead of the fluorescent molecules used in flow cytometry. Cells are then atomized and ionized in a high-temperature plasma and passed through a time-of-flight mass spectrometer, which detects the presence or absence of the metal tags for each cell. By using rare metal isotopes instead of fluorescent molecules to tag antibodies, mass cytometry largely eliminates the problems of spectral overlap and autofluorescence. However, throughput rates are somewhat lower than in flow cytometry, and it is not possible to collect cells after an experiment, since they are destroyed during ionization. Currently, mass cytometry systems are capable of measuring around 40 parameters per cell, at throughput rates of hundreds of cells per second [<xref ref-type="bibr" rid="c3">3</xref>].</p>
<p>Using multicolor flow cytometry or mass cytometry systems, experimentalists can now routinely create large data sets (up to millions of cells) with high dimensionality (dozens of parameters). This has resulted in bottlenecks during data analysis. Traditionally, flow cytometry data sets have been analyzed by &#x201C;manual gating&#x201D;, consisting of visual examination of two-dimensional scatterplots to identify defined cell populations. However, manual gating may be insufficient for high-dimensional data sets for several reasons: there are too many possible two-dimensional projections to reliably analyze; any multidimensional structure in the data is ignored; it is difficult to detect previously unknown cell populations; and the analysis can be highly subjective. Therefore, major efforts have been made to partially or fully automate the data analysis procedures [<xref ref-type="bibr" rid="c4">4</xref>].</p>
<p>A key step in many automated analysis pipelines is the use of clustering tools to automatically detect or define cell populations. However, due to the &#x201C;curse of dimensionality&#x201D;, standard clustering techniques such as <monospace>k-means</monospace> and hierarchical clustering generally do not perform well in high-dimensional data spaces [<xref ref-type="bibr" rid="c5">5</xref>]. In order to address this, several research groups have developed specialized clustering methods designed specifically for high-dimensional flow and mass cytometry data sets. These methods take a variety of theoretical approaches to solve the problems of high dimensionality, with the common aim of detecting distinct populations of cells corresponding to known biology. Several recent studies have provided overviews of available clustering methods [<xref ref-type="bibr" rid="c6">6</xref>,<xref ref-type="bibr" rid="c7">7</xref>], and performance comparisons using standardized benchmark data sets [<xref ref-type="bibr" rid="c8">8</xref>&#x2013;<xref ref-type="bibr" rid="c10">10</xref>] (including the FlowCAP challenges [<xref ref-type="bibr" rid="c10">10</xref>]).</p>
<p>In this study, we carry out an up-to-date, comprehensive, extensible performance comparison of clustering methods for high-dimensional flow and mass cytometry data, including several new methods that were not yet available at the time of the FlowCAP challenges. To evaluate the methods, we have selected four publicly available data sets with moderate to high dimensionality, where cell population identities are known from manual gating. The data sets include major immune cell populations as well as specific rare populations, in well-characterized biological systems where manual gating is likely to be reliable. Unlike the FlowCAP comparisons, we do not include low-dimensional flow cytometry data sets, since we are interested in the performance of clustering algorithms in high-dimensional settings. Our aim is to provide guidance to researchers faced with decisions about which clustering tools to use when analyzing new data sets from high-dimensional cytometry experiments. Code and preprocessed data files are available from GitHub (<ext-link ext-link-type="uri" xlink:href="https://github.com/lmweber/cytometry-clustering-comparison">https://github.com/lmweber/cytometry-clustering-comparison</ext-link>) and FlowRepository (repository FR-FCM-ZZPH), allowing our analyses to be easily reproduced or extended to include new clustering methods and reference data sets.</p>
</sec>
<sec id="s3">
<title>Methods</title>
<sec id="s3a">
<title>Clustering methods</title>
<p>We compared a total of 13 clustering methods. The methods are listed in <xref ref-type="table" rid="tbl1">Table 1</xref>, along with key information and references to original publications. Most of the methods are designed specifically for analyzing high-dimensional cytometry data, however some (<monospace>FLOCK</monospace>, <monospace>flowMeans</monospace>, and <monospace>SamSPECTRAL</monospace>) were originally developed for lower-dimensional flow cytometry data, but have been found to still perform well in higher-dimensional settings. Two of the methods (<monospace>FlowSOM_meta</monospace> and <monospace>immunoClust_all</monospace>) are variations of others in the list. We have also included <monospace>k-means</monospace> as a basic benchmark. Additional details including package versions and parameter settings are included in Supp Table S1.</p>
<table-wrap id="tbl1" orientation="portrait" position="float">
<label>Table 1</label>
<caption><p>Overview of clustering methods compared in this study.</p></caption>
<graphic xlink:href="047613_tbl1.tif"/>
</table-wrap>
<p>We included only methods with freely available software implementations, since our aim is to provide practical recommendations to researchers performing data analyses. The methods are based on a range of different theoretical approaches, which are briefly described in <xref ref-type="table" rid="tbl1">Table 1</xref>. For comprehensive explanations of the methodological approaches, we refer to the original references for each method (<xref ref-type="table" rid="tbl1">Table 1</xref>).</p>
</sec>
<sec id="s3b">
<title>Data sets</title>
<p>We evaluated the performance of the clustering methods on four publicly available data sets, from experiments in immunology using mass cytometry or high-dimensional flow cytometry. We selected these data sets to allow testing of two distinct clustering tasks: detection of all major immune cell populations (data sets <monospace>Levine_2015_marrow_32</monospace> and <monospace>Levine_2015_marrow_13</monospace>); and detection of a single rare cell population of interest (data sets <monospace>Nilsson_2013_HSC</monospace> and <monospace>Mosmann_2014_activ</monospace>). Key characteristics of the data sets are summarized in <xref ref-type="table" rid="tbl2">Table 2</xref>.</p>
<table-wrap id="tbl2" orientation="portrait" position="float">
<label>Table 2</label>
<caption><p>Summary of data sets used to evaluate clustering performance.</p></caption>
<graphic xlink:href="047613_tbl2.tif"/>
</table-wrap>
<p>For each of these data sets, manually gated cell population identities are available, either directly within the original data files or easily reproducible from gating diagrams published in the original papers. We have used these manually gated cell population labels as the &#x201C;truth&#x201D; against which the automated clustering methods can be evaluated. All of the data sets are from well-characterized biological systems, where manual gating is likely to be reliable despite the high dimensionality. However, due to the limitations of manual gating, labels are only available for a subset of cells in each data set. For <monospace>Levine_2015_marrow_32</monospace> and <monospace>Levine_2015_marrow_13</monospace>, the authors note that 61&#x0025; and 51&#x0025; of cells remain unassigned [<xref ref-type="bibr" rid="c9">9</xref>]. For <monospace>Nilsson_2013_HSC</monospace> and <monospace>Mosmann_2014_activ</monospace>, we use only labels for the rare cell population of interest. In each case, we run the clustering algorithms on all cells (i.e. including unassigned cells), and subsequently evaluate performance on the cells with manually gated population labels.</p>
<p>The data sets were distributed by the original authors through FlowRepository [<xref ref-type="bibr" rid="c21">21</xref>] and Cytobank [<xref ref-type="bibr" rid="c22">22</xref>]. Repository identifiers and links to experiment data pages can be found in the original publications referenced in <xref ref-type="table" rid="tbl2">Table 2</xref>. Note that the data sets <monospace>Levine_2015_marrow_32</monospace> and <monospace>Levine_2015_marrow_13</monospace> are referred to as &#x201C;benchmark data set 2&#x201D; and &#x201C;benchmark data set 1&#x201D; in the respective publication [<xref ref-type="bibr" rid="c9">9</xref>].</p>
</sec>
<sec id="s3c" sec-type="availability">
<title>Data preprocessing and availability</title>
<p>For the mass cytometry data sets (<monospace>Levine_2015_marrow_32</monospace> and <monospace>Levine_2015_marrow_13</monospace>), we first combined the original FCS files into one file per data set and added the manually gated population labels. Next, we applied an arcsinh transformation with a standard cofactor of 5 for mass cytometry (i.e. <italic>arcsinh</italic>(<italic>x</italic>/5)) [<xref ref-type="bibr" rid="c3">3</xref>]. We did not include any additional standardization or normalization of dimensions. This was unnecessary since the arcsinh calculation already transforms all dimensions to comparable scales; and in addition, since we perform clustering using all dimensions, unnecessary standardization of dimensions that do not contain a strong signal could amplify the effect of noise, adversely affecting clustering performance. We also did not include any additional normalization between samples, since the authors of the data sets already performed sample normalization (and the second data set contains only a single sample) [<xref ref-type="bibr" rid="c9">9</xref>].</p>
<p>For the flow cytometry data sets (<monospace>Nilsson_2013_HSC</monospace> and <monospace>Mosmann_2014_activ</monospace>), additional preprocessing was required. We performed pre-gating in Cytobank to exclude doublets, debris, and dead cells, following the published gating hierarchies displayed in <xref ref-type="fig" rid="fig2">Figure 2</xref> in [<xref ref-type="bibr" rid="c20">20</xref>] and <xref ref-type="fig" rid="fig4">Figure 4A</xref> in [<xref ref-type="bibr" rid="c19">19</xref>]. The remaining single, live cells were kept for further analysis. Compen-sation was performed automatically in Cytobank using the spillover matrices provided with the original FCS files. Next, we generated cell population labels for the rare populations of interest by reproducing the remainder of the published gating hierarchies (<xref ref-type="fig" rid="fig2">Figure 2</xref> in [<xref ref-type="bibr" rid="c20">20</xref>] and <xref ref-type="fig" rid="fig4">Figure 4A</xref> in [<xref ref-type="bibr" rid="c19">19</xref>]). Finally, we applied an arcsinh transformation with a standard cofactor of 150 for flow cytometry (i.e. <italic>arcsinh</italic>(<italic>x</italic>/150)) [<xref ref-type="bibr" rid="c3">3</xref>], and exported a new FCS file for each data set. As previously, we did not include any additional standardization or normalization of dimensions. Additional normalization between samples was also not required, since each data set contains only a single sample.</p>
<p>Our preprocessed data files are available from FlowRepository (repository identifier FR-FCM-ZZPH). Manually gated cell population labels are included within the FCS files. For each data set, we provide files with and without the arcsinh transformation, since some clustering algorithms apply automatic transformations. The gating hierarchies used to select the rare cell populations in the <monospace>Nilsson_2013_HSC</monospace> and <monospace>Mosmann_2014_activ</monospace> data sets are reproduced in Supp Figs S1&#x2013;S2.</p>
<table-wrap id="tbl3" orientation="portrait" position="float">
<label>Table 3</label>
<caption><p>Number of clusters selected for each method.</p></caption>
<graphic xlink:href="047613_tbl3.tif"/>
</table-wrap>
</sec>
<sec id="s3d">
<title>Number of clusters and other parameter settings</title>
<p>The number of clusters is a key parameter for many clustering methods. Some methods provide an option to select this number automatically, while others leave it as an input for the user. Many methods with an automatic option also allow the user to adjust the number indirectly by changing related parameters.</p>
<p>We used the automatic choice for methods where this was available and gave reasonable results, and 40 clusters for each data set if a manual input was required. For methods where an automatic choice was available but did not perform well, we adjusted parameters to give a number close to 40. However, since several methods only allowed the number to be adjusted through indirect parameters, it was not always possible to obtain exactly 40 clusters. For some methods, it was not possible to adjust the automatic number at all. The choice of 40 clusters was designed to be conservative, in the sense of selecting too many clusters rather than too few. All four data sets contain fewer than 40 true (manually gated) populations (<xref ref-type="table" rid="tbl2">Table 2</xref>); selecting fewer clusters tended to merge important clusters, especially for the data sets containing rare cell populations.</p>
<p><xref ref-type="table" rid="tbl3">Table 3</xref> summarizes the number of clusters used for each method, and the options available to select the number. For methods where more than one option is available, the option we used for the main results is indicated. For three methods (<monospace>DensVM</monospace>, <monospace>FLOCK</monospace>, <monospace>SWIFT</monospace>), it was not possible to adjust the automatic number of clusters, even if it was sub-optimal. Some methods are designed to return large numbers of clusters (<monospace>immunoClust</monospace>, <monospace>immunoClust_all</monospace>, <monospace>SWIFT</monospace>); so we did not attempt to reduce these (see Discussion). Similarly, the large number of clusters from <monospace>FlowSOM</monospace> are intended to be merged in a separate &#x201C;meta-clustering&#x201D; step, which we have labeled as the method <monospace>FlowSOM_meta</monospace> (see <xref ref-type="table" rid="tbl1">Table 1</xref>).</p>
<p>Additional details including the number of clusters for all available options, as well as all other parameter settings for each method, are provided in Supp Table S1.</p>
</sec>
<sec id="s3e">
<title>Evaluation criteria</title>
<p>We evaluated the clustering methods using F1 scores, precision, and recall. For a given true (manually gated) cell population and a corresponding detected cluster from an algorithm, the precision measures the proportion of cells in the detected cluster that are from the correct true population (i.e. avoiding false positives); the recall (or sensitivity) measures the proportion of cells from the true population that are assigned to the detected cluster (i.e. avoiding false negatives); and the F1 score is the harmonic mean of precision and recall.</p>
<p>For the data sets with multiple cell populations of interest (<monospace>Levine_2015_marrow_32</monospace> and <monospace>Levine_2015_marrow_13</monospace>), we calculated unweighted means of the F1 score, precision, and recall across true populations. The use of unweighted means ensures that large and small populations are represented equally. (Additional results with weighting by true population size are included in Supp Figs S3&#x2013;S4.) For the data sets with a single rare population of interest (<monospace>Nilsson_2013_HSC</monospace> and <monospace>Mosmann_2014_activ</monospace>), we used the F1 score, precision, and recall for the rare population. In all evaluations, we used the manually gated population labels as the &#x201C;truth&#x201D; against which the F1 scores, precision, and recall were calculated. Clusters were matched to true populations by maximizing the F1 score; in other words, for each true population, we assigned the cluster giving the highest F1 score.</p>
<p>We investigated the protein expression profiles of detected clusters by comparing them against the true (manually gated) populations using hierarchical clustering. In addition, we recorded runtimes for each method, and evaluated the stability of the clustering algorithms by running them multiple times with different random starts.</p>
</sec>
<sec id="s3f">
<title>Ensemble clustering</title>
<p>We performed ensemble clustering (consensus clustering) to test whether performance may be improved by aggregating results from multiple clustering algorithms, as in previous comparisons (for example, the FlowCAP challenges [<xref ref-type="bibr" rid="c10">10</xref>]). We used the <monospace>clue R</monospace> package [<xref ref-type="bibr" rid="c23">23</xref>] to combine clustering results from the top five methods for each data set, according to mean F1 score or F1 score in the main results. However, the following methods were excluded: methods that required subsampled data (<monospace>ACCENSE</monospace>, <monospace>DensVM</monospace>, <monospace>Rclusterpp</monospace>) or removed outliers (<monospace>ACCENSE</monospace>, <monospace>immunoClust</monospace>, <monospace>SamSPECTRAL</monospace>), since consensus clustering requires the same data for each method; and methods that returned large numbers of clusters (<monospace>FlowSOM</monospace>, <monospace>immunoClust</monospace>, <monospace>immunoClust_all</monospace>, <monospace>SWIFT</monospace>), since this greatly increased runtime. For the <monospace>Nilsson_2013_HSC</monospace> data set, the small size of the data set (see <xref ref-type="table" rid="tbl2">Table 2</xref>) meant that runtime remained fast even with large numbers of clusters, so these methods were not removed. Methods that were excluded were replaced with the next lower-ranked methods, so that five methods were still included for each data set.</p>
</sec>
<sec id="s3g">
<title>Stability across random starts</title>
<p>To evaluate the stability of the clustering algorithms across random starts, we ran methods 30 times with different random seeds, generating empirical distributions of the main evaluation criteria (F1 score, precision, and recall) as well as runtime. Where possible, we ran the methods in parallel on our multi-core server. We restricted the stability analysis to methods that were available as R packages or command-line programs to allow scripting; this excluded <monospace>ACCENSE</monospace> and <monospace>SWIFT</monospace>, which could only be accessed through graphical interfaces. For <monospace>PhenoGraph</monospace>, we used the alternative Python command-line implementation (with multiple processor cores) instead of the graphical interface (see <xref ref-type="table" rid="tbl1">Table 1</xref>). We also excluded <monospace>DensVM</monospace>, which was difficult to parallelize since results are written to output files that may be overwritten; and <monospace>Rclusterpp</monospace>, which required too many processor cores for each instance.</p>
</sec>
</sec>
<sec id="s4">
<title>Results</title>
<sec id="s4a">
<title>Detection of major cell populations</title>
<p><xref ref-type="fig" rid="fig1">Fig 1</xref> summarizes the results of the comparison of clustering methods for data set <monospace>Levine_2015_marrow_32</monospace>. This is a 32-dimensional mass cytometry data set, where we are interested in the ability to detect 14 major immune cell populations (see Methods and <xref ref-type="table" rid="tbl2">Table 2</xref>). Panel A shows the mean F1 score across the 14 populations, which we use as our main evaluation criterion. The best-performing method in terms of mean F1 score is <monospace>FlowSOM_meta</monospace>, followed by <monospace>flowMeans</monospace>, <monospace>FLOCK</monospace>, and <monospace>PhenoGraph</monospace>. Panel B provides additional detail on the distribution of F1 scores across populations; further results according to population size are provided in Supp Fig S5, revealing that among the top-performing methods, the lowest F1 scores tend to occur for the smallest populations. Panel C displays the mean precision and mean recall, showing that the relatively poor performance of <monospace>immunoClust</monospace> and <monospace>SWIFT</monospace> is due to low recall, while <monospace>Rclusterpp</monospace> suffers from low precision. Panel D displays the true (manually gated) population sizes, which range from 304 to 26,366 of the 265,627 total cells. Panel E summarizes the runtimes, which vary over several orders of magnitude between methods. Apart from <monospace>k-means</monospace>, <monospace>FlowSOM</monospace> and <monospace>FlowSOM_meta</monospace> have the fastest runtimes, followed by <monospace>FLOCK</monospace>. Two methods (<monospace>Rclusterpp</monospace> and <monospace>SWIFT</monospace>) make use of multiple processor cores (the number of cores for each method is included in Supp Table S1). Panel F plots runtime against mean F1 score, where the best-performing methods can be seen in the bottom-right corner, combining fast runtimes with high mean F1 scores.</p>
<fig id="fig1" position="float" orientation="portrait" fig-type="figure">
<label>Figure 1</label>
<caption><p><bold>Results of comparison of clustering methods for data set <monospace>Levine_2015_marrow_32</monospace></bold>. (A) Mean F1 score across cell populations. (B) Distributions of F1 scores across cell populations. The box plots show medians, upper and lower quartiles, whiskers extending to 1.5 times the interquartile range, and outliers, with means shown additionally in red. (C) Mean precision and mean recall, together with mean F1 scores. (D) Number of cells per true population. (E) Runtimes, with methods that make use of multiple processor cores indicated in gray. (F) Runtime vs. mean F1 score, where the best-performing methods combining fast runtimes with high mean F1 scores are seen toward the bottom-right.</p></caption>
<graphic xlink:href="047613_fig1.tif"/>
</fig>
<p><xref ref-type="fig" rid="fig2">Fig 2</xref> displays the same results for data set <monospace>Levine_2015_marrow_13</monospace>, which is a 13-dimensional mass cytometry data set (see Methods and <xref ref-type="table" rid="tbl2">Table 2</xref>). Compared to the first data set, this data set is lower-dimensional, and cells are divided into a greater number of major immune cell populations (24 instead of 14). The populations also span a larger range of relative population sizes (Panel D). We are interested in the ability of clustering algorithms to detect all 24 major immune cell populations. The top method in terms of mean F1 score (Panel A) is again <monospace>FlowSOM_meta</monospace>, followed by <monospace>PhenoGraph</monospace>, <monospace>flowMeans</monospace>, and <monospace>k-means</monospace>. However, for all methods, there are some populations with very low F1 scores (Panel B); among the top-performing methods, the lowest F1 scores tend to occur for the smallest populations (Supp Fig S6). As previously, the poor performance of <monospace>immunoClust</monospace> and <monospace>SWIFT</monospace> is due to low recall, while <monospace>Rclusterpp</monospace> has low precision (Panel C). The fastest runtimes are observed for <monospace>k-means</monospace>, <monospace>FlowSOM</monospace>, <monospace>FlowSOM_meta</monospace>, and <monospace>FLOCK</monospace> (Panel E). In Panel F, the best-performing methods can again be seen toward the bottom-right, combining fast runtimes with high mean F1 scores.</p>
<fig id="fig2" position="float" orientation="portrait" fig-type="figure">
<label>Figure 2</label>
<caption><p><bold>Results of comparison of clustering methods for data set <monospace>Levine_2015_marrow_13</monospace></bold>. (A) Mean F1 score across cell populations. (B) Distributions of F1 scores across cell populations. The box plots show medians, upper and lower quartiles, whiskers extending to 1.5 times the interquartile range, and outliers, with means shown additionally in red. (C) Mean precision and mean recall, together with mean F1 scores. (D) Number of cells per true population. (E) Runtimes, with methods that make use of multiple processor cores indicated in gray. (F) Runtime vs. mean F1 score, where the best-performing methods combining fast runtimes with high mean F1 scores are seen toward the bottom-right.</p></caption>
<graphic xlink:href="047613_fig2.tif"/>
</fig>
<p>To further investigate the quality of the clustering results, we used heatmaps to compare the protein expression profiles of detected clusters and true (manually gated) populations. <xref ref-type="fig" rid="fig3">Fig 3</xref> displays an example of these results, for method <monospace>FlowSOM_meta</monospace> with data set <monospace>Levine_2015_marrow_32</monospace>. The heatmap shows the median expression intensities of each protein marker (in columns), for each detected cluster or true population (in rows). Values are arcsinh-transformed, and scaled between 0 and 1 for each protein marker. Rows and columns are sorted by hierarchical clustering (Euclidean distance, average linkage), and rows are labeled to indicate whether they represent true populations or detected clusters. We observe that for most of the true populations (red rows), at least one cluster detected by <monospace>FlowSOM_meta</monospace> (blue rows) matches closely to the expression profile of the true population. This indicates that <monospace>FlowSOM_meta</monospace> has correctly detected clusters corresponding to these populations, with some additional splitting of populations. However, the separation and matching is not perfect; some true populations (red rows) group together before matching to any detected clusters. For this data set, <monospace>FLOCK</monospace>, <monospace>immunoClust</monospace>, and <monospace>immunoClust_all</monospace> achieve the smallest number of mismatches (Supp Figs S18 and S22&#x2013;S23). For data set <monospace>Levine_2015_marrow_13</monospace>, which contains a greater number of true populations, <monospace>FlowSOM</monospace> achieves the smallest number of mismatches (Supp Fig S34). Additional figures for all clustering methods and both data sets are provided in Supp Figs S15&#x2013;S42.</p>
<fig id="fig3" position="float" orientation="portrait" fig-type="figure">
<label>Figure 3</label>
<caption><p><bold>Median expression intensities of clusters detected by <monospace>FlowSOM_meta</monospace> and true (manually gated) populations, data set <monospace>Levine_2015_marrow_32</monospace></bold>. Heatmap shows median expression intensities of each protein marker (columns), for each detected cluster or true population (rows). Values are arcsinh-transformed, and scaled between 0 and 1 for each protein marker. Rows and columns are sorted by hierarchical clustering (Euclidean distance, average linkage). Cluster and population indices are included in the row headings. Red labels indicate rows representing true (manually gated) populations, and blue labels indicate rows representing clusters detected by <monospace>FlowSOM_meta</monospace>. Additional figures for all other clustering methods as well as the second data set are provided in Supp Figs S15&#x2013;S42.</p></caption>
<graphic xlink:href="047613_fig3.tif"/>
</fig>
</sec>
<sec id="s4b">
<title>Detection of a single rare cell population</title>
<p>In <xref ref-type="fig" rid="fig4">Fig 4</xref>, we present results for data set <monospace>Nilsson_2013_HSC</monospace>. This is a 13-dimensional flow cytometry data set, where we are interested in the ability to detect a single rare cell population. The rare population consists of hematopoietic stem cells (HSCs), and contains 358 manually gated cells, or around 0.8&#x0025; of total cells in the data set (see Methods and <xref ref-type="table" rid="tbl2">Table 2</xref>). Our main evaluation criteria are the F1 score, precision, and recall for the rare cell population. These results are displayed in Panel A, with clustering methods ordered by decreasing F1 score. The best-performing methods in terms of F1 score are <monospace>ACCENSE</monospace> and <monospace>k-means</monospace>, followed by <monospace>FlowSOM_meta</monospace> and <monospace>FlowSOM</monospace>. Several of the lower-ranked methods achieve high recall (sensitivity) but low precision. Runtimes are summarized in Panel B; for this data set, <monospace>DensVM</monospace> is considerably slower than all other methods. Panel C plots runtime against F1 score, with methods that achieve both high F1 scores and fast runtimes shown toward the bottom-right.</p>
<fig id="fig4" position="float" orientation="portrait" fig-type="figure">
<label>Figure 4</label>
<caption><p><bold>Results of comparison of clustering methods for data set <monospace>Nilsson_2013_HSC</monospace></bold>. (A) F1 score, precision, and recall for the rare cell population of interest. Clustering methods are ordered by decreasing F1 score. The rare cell population consists of hematopoi-etic stem cells (HSCs), and contains 358 manually gated cells, or around 0.8&#x0025; of total cells in the data set. (B) Run-times, with methods that make use of multiple processor cores indicated in gray. (C) Runtime vs. F1 score, where the best-performing methods combining fast runtimes with high F1 scores are seen toward the bottom-right.</p></caption>
<graphic xlink:href="047613_fig4.tif"/>
</fig>
<p><xref ref-type="fig" rid="fig5">Fig 5</xref> displays the results for data set <monospace>Mosmann_2014_activ</monospace>. This is a 14-dimensional flow cytometry data set, where the interest is again in detecting a single rare cell population. Here, the rare population consists of activated (cytokine-producing) memory CD4 T cells, from a sample of healthy human peripheral blood mononuclear cells (PBMCs) exposed to influenza antigens. Compared to the previous data set, the rare population represents a much smaller proportion (109 manually gated cells, or around 0.03&#x0025;), and the data set contains a greater total number of cells (see Methods and <xref ref-type="table" rid="tbl2">Table 2</xref>). Panel A displays the F1 score, precision, and recall for the rare population, with methods ordered by decreasing F1 score. For this data set, the best-performing methods in terms of F1 score are <monospace>SamSPECTRAL</monospace> and <monospace>Rclusterpp</monospace>, followed by <monospace>FlowSOM_meta</monospace> and <monospace>FlowSOM</monospace>. <monospace>PhenoGraph</monospace> and <monospace>SWIFT</monospace> also perform well; after these, there is a distinct drop-off in performance for the remaining methods. <monospace>SWIFT</monospace> achieves the highest precision, but relatively low recall. Panel B reveals that the two top-performing methods (<monospace>SamSPECTRAL</monospace> and <monospace>Rclusterpp</monospace>) have very slow runtimes, with <monospace>Rclusterpp</monospace> also requiring multiple processor cores; by contrast, <monospace>FlowSOM_meta</monospace> and <monospace>FlowSOM</monospace> have among the fastest runtimes. In Panel C, methods that combine high F1 scores with fast runtimes can again be seen toward the bottom-right.</p>
<fig id="fig5" position="float" orientation="portrait" fig-type="figure">
<label>Figure 5</label>
<caption><p><bold>Results of comparison of clustering methods for data set <monospace>Mosmann_2014_activ</monospace></bold>. (A) F1 score, precision, and recall for the rare cell population of interest. Clustering meth-ods are ordered by decreasing F1 score. The rare cell population consists of acti-vated (cytokine-producing) memory CD4 T cells, from a sample of healthy human peripheral blood mononuclear cells (PBMCs) exposed to influenza antigens. The rare population contains manually gated 109 cells, or around 0.03&#x0025; of total cells in the data set. (B) Runtimes, with methods that make use of multiple processor cores indicated in gray. (C) Runtime vs. F1 score, where the best-performing methods combining fast runtimes with high F1 scores are seen toward the bottom-right.</p></caption>
<graphic xlink:href="047613_fig5.tif"/>
</fig>
</sec>
<sec id="s4c">
<title>Optimal number of clusters</title>
<p>For methods where a manual selection of the number of clusters was required, we used 40 clusters for each data set (see Methods and <xref ref-type="table" rid="tbl3">Table 3</xref>). To confirm that this was an appropriate choice, we performed additional analysis to calculate results over a range of values for the number of clusters, using <monospace>FlowSOM_meta</monospace>. <xref ref-type="fig" rid="fig6">Figure 6</xref> displays the mean F1 score (data sets with multiple populations) or F1 score (data sets with a single rare population), across a range of values for the number of clusters. The results confirm that 40 clusters (marked in red) is an optimal choice for this method across all data sets.</p>
<fig id="fig6" position="float" orientation="portrait" fig-type="figure">
<label>Figure 6</label>
<caption><p><bold>Optimal choice of number of clusters for <monospace>FlowSOM_meta</monospace></bold>. Mean F1 scores (data sets with multiple populations; <monospace>Levine_2015_marrow_32</monospace> and <monospace>Levine_2015_marrow_13</monospace>) and F1 scores (data sets with a single rare population; <monospace>Nilsson_2013_HSC</monospace> and <monospace>Mosmann_2014_activ</monospace>) across a range of values for the number of clusters k. The number of clusters was varied between 5 and 80, in steps of 5. The optimal choice of 40 clusters for this method is indicated with a red vertical line.</p></caption>
<graphic xlink:href="047613_fig6.tif"/>
</fig>
</sec>
<sec id="s4d">
<title>Ensemble clustering</title>
<p>Results of the ensemble (consensus) clustering are displayed in Supp Figs S7&#x2013;S10. Unlike previous studies (for example, the FlowCAP challenges [<xref ref-type="bibr" rid="c10">10</xref>]), ensemble clustering did not give any improvements in performance compared to the best-performing individual methods. For each data set, the top individual method achieves a higher mean F1 score across populations (<monospace>Levine_2015_marrow_32</monospace> and <monospace>Levine_2015_marrow_13</monospace>) or F1 score for the rare population (<monospace>Nilsson_2013_HSC</monospace> and <monospace>Mosmann_2014_activ</monospace>) than the ensemble clustering.</p>
</sec>
<sec id="s4e">
<title>Stability across random starts</title>
<p>Results of the stability analysis are displayed in <xref ref-type="fig" rid="fig7">Fig 7</xref> (<monospace>Mosmann_2014_activ</monospace>) and Supp Figs S11&#x2013;S14 (all data sets; including runtimes). Each clustering method was run 30 times with dif-ferent random starts to generate distributions of the evaluation criteria (see Methods). For the data sets with multiple populations (<monospace>Levine_2015_marrow_32</monospace> and <monospace>Levine_2015_marrow_13</monospace>; Supp Figs S11&#x2013;S12), the variation in mean F1 scores, mean precision, and mean recall is relatively small for all methods. Several methods show zero variation, which in some cases is due to the methods automatically assigning fixed random seeds. The variation in runtimes is small for all methods.</p>
<fig id="fig7" position="float" orientation="portrait" fig-type="figure">
<label>Figure 7</label>
<caption><p><bold>Stability of clustering results across random starts for data set <monospace>Mosmann_2014_activ</monospace></bold>. Distributions of F1 scores, precision, and recall for the rare cell population in data set <monospace>Mosmann_2014_activ</monospace>, generated by running each clustering method 30 times with different random starts. The box plots show medians, upper and lower quartiles, whiskers extending to 1.5 times the interquartile range, and outliers. Additional results for all data sets (including runtimes) are provided in Supp Figs S11&#x2013;S14.</p></caption>
<graphic xlink:href="047613_fig7.tif"/>
</fig>
<p>However, for the data sets with a single rare population (<monospace>Nilsson_2013_HSC</monospace> and <monospace>Mosmann_2014_activ</monospace>; <xref ref-type="fig" rid="fig7">Fig 7</xref> and Supp Figs S13&#x2013;S14), we observe significant variation in F1 scores, precision, and recall. This includes several of the top-performing methods for these data sets, including <monospace>SamSPECTRAL</monospace>, <monospace>FlowSOM_meta</monospace>, <monospace>FlowSOM</monospace>, <monospace>PhenoGraph</monospace>, and <monospace>k-means</monospace>. In particular, there are a number of outlier runs for these methods, where performance is considerably better or worse than average. Some methods again show zero variation. The variation in runtimes is highest for <monospace>PhenoGraph</monospace> and <monospace>SamSPECTRAL</monospace> (for the <monospace>Nilsson_2013_HSC</monospace> data set), and small for all other methods.</p>
</sec>
</sec>
<sec id="s5">
<title>Discussion</title>
<p>The automated detection of clusters representing cell populations in high-dimensional flow and mass cytometry data sets is a difficult computational task, since standard clustering techniques generally do not perform well in high-dimensional data spaces. In this study, we have compared the performance of a range of leading clustering methods for high-dimensional cytometry data (<xref ref-type="table" rid="tbl1">Table 1</xref>). We evaluated the methods using four publicly available data sets from experiments in immunology (<xref ref-type="table" rid="tbl2">Table 2</xref>). The data sets were selected to test two distinct clustering tasks: detection of all major cell populations, and detection of individual rare populations. The clustering methods include several new methods that were not yet available at the time of earlier comparisons, such as the FlowCAP challenges [<xref ref-type="bibr" rid="c10">10</xref>].</p>
<sec id="s5a">
<title><monospace>FlowSOM</monospace> (with meta-clustering but without automatic number of clusters) gives superior performance and fast runtimes</title>
<p>Our comparisons showed that <monospace>FlowSOM_meta</monospace> was the best-performing method in terms of mean F1 score for the data sets with multiple cell populations (<monospace>Levine_2015_marrow_32</monospace> and <monospace>Levine_2015_marrow_13</monospace>; <xref ref-type="fig" rid="fig1">Fig. 1</xref>&#x2013;<xref ref-type="fig" rid="fig2">2</xref>). <monospace>FlowSOM_meta</monospace> also achieved a good separation and matching between detected clusters and true populations (<xref ref-type="fig" rid="fig3">Fig 3</xref>). For the data sets with a single rare cell population of interest (<monospace>Nilsson_2013_HSC</monospace> and <monospace>Mosmann_2014_activ</monospace>), <monospace>FlowSOM_meta</monospace> was the third-best performing method in terms of F1 score for both data sets (<xref ref-type="fig" rid="fig4">Fig. 4</xref>&#x2013;<xref ref-type="fig" rid="fig5">5</xref>).</p>
<p>In addition, <monospace>FlowSOM_meta</monospace> had extremely fast runtimes, running in less than one minute for each of the first three data sets and less than four minutes for <monospace>Mosmann_2014_activ</monospace>; and required only a single processor core (<xref ref-type="fig" rid="fig1">Fig. 1</xref>&#x2013;<xref ref-type="fig" rid="fig2">2</xref> and <xref ref-type="fig" rid="fig4">4</xref>&#x2013;<xref ref-type="fig" rid="fig5">5</xref>). This placed <monospace>FlowSOM_meta</monospace> among the fastest methods overall. By contrast, the slowest methods for each data set took several hours to complete. In particular, for <monospace>Mosmann_2014_activ</monospace>, the two methods that outperformed <monospace>FlowSOM_meta</monospace> in terms of F1 score (<monospace>SamSPECTRAL</monospace> and <monospace>Rclusterpp</monospace>) were extremely slow; <monospace>Rclusterpp</monospace> also required multiple processor cores and subsampling (see below) to complete in a reasonable amount of time.</p>
<p>The modeling approach taken by <monospace>FlowSOM</monospace> and <monospace>FlowSOM_meta</monospace> is based on self-organizing maps, followed by an optional &#x201C;meta-clustering&#x201D; step using hierarchical clustering to merge clusters. In this study, we have used the name <monospace>FlowSOM_meta</monospace> to indicate that the meta-clustering step is included (<xref ref-type="table" rid="tbl1">Table 1</xref>). The implementation of the meta-clustering includes an option to select the final number of clusters automatically; however, we found that this performed relatively poorly. Since it was also possible to select the number manually, we instead used 40 clusters for each data set, the same number as for the methods where no automatic option was available (<xref ref-type="table" rid="tbl3">Table 3</xref>). We confirmed that the default choice of 40 clusters was appropriate by calculating additional results over a range of alternative values (<xref ref-type="fig" rid="fig6">Fig 6</xref>).</p>
<p>Based on these results, we recommend the use of <monospace>FlowSOM</monospace> with meta-clustering (but without automatic selection of the number of clusters) as a first choice for analyzing data sets from high-dimensional flow and mass cytometry experiments. In particular, the fast runtimes and minimal computational requirements make this method well-suited for analyzing large data sets, and make it possible to perform interactive, exploratory analyses on a standard laptop. The availability as an R/Bioconductor package (<xref ref-type="table" rid="tbl1">Table 1</xref>) also enables easy integration into analysis pipelines, including downstream statistical analysis and plotting.</p>
</sec>
<sec id="s5b">
<title>Other high-performing methods</title>
<p>Several other clustering methods also performed well for these data sets. For the data sets with multiple cell populations, <monospace>flowMeans</monospace>, <monospace>FLOCK</monospace>, and <monospace>PhenoGraph</monospace> consistently performed well. However, runtimes for <monospace>flowMeans</monospace> and <monospace>PhenoGraph</monospace> were significantly slower than <monospace>FlowSOM_meta</monospace>. Among these, flowMeans is available as an R/Bioconductor package, while <monospace>PhenoGraph</monospace> includes a graphical user interface and convenient visualization tools within its associated MATLAB tool cyt, making it accessible for users without command-line or programming expertise. A Python command-line implementation of <monospace>PhenoGraph</monospace> is also available. <monospace>FLOCK</monospace> requires compilation from C source code, which is a difficult procedure for most users; however, an online implementation is also available in the ImmPort analysis platform (<xref ref-type="table" rid="tbl1">Table 1</xref>).</p>
<p>For the data sets with a single rare cell population, the sets of top methods differed between the two data sets. For <monospace>Nilsson_2013_HSC</monospace>, the two best-performing methods were <monospace>ACCENSE</monospace> and <monospace>k-means</monospace>; but these methods performed poorly for <monospace>Mosmann_2014_activ</monospace>. The two top methods for <monospace>Mosmann_2014_activ</monospace> were <monospace>SamSPECTRAL</monospace> and <monospace>Rclusterpp</monospace>, but these suffered from slow runtimes and heavy computational requirements, as mentioned above. <monospace>FlowSOM_meta</monospace> and <monospace>FlowSOM</monospace> were the third and fourth-ranked methods for both data sets. <monospace>PhenoGraph</monospace> and <monospace>SWIFT</monospace> also performed well for <monospace>Mosmann_2014_activ</monospace>; in particular, <monospace>SWIFT</monospace> achieved the highest precision for this data set. This may be an important consideration for some applications if precision (avoiding false positives) is judged to be more important than recall (sensitivity, or avoiding false negatives). The difference in rankings between these two data sets may be related to the relative sizes of the rare populations. For <monospace>Nilsson_2013_HSC</monospace>, the rare population of hematopoietic stem cells accounted for 0.8&#x0025; of total cells, while for <monospace>Mosmann_2014_activ</monospace>, the activated memory CD4 T cells represented only 0.03&#x0025; (<xref ref-type="table" rid="tbl2">Table 2</xref>). In many cases, detecting a smaller proportion is a more difficult computational task, making the rankings for <monospace>Mosmann_2014_activ</monospace> more informative in practice.</p>
<p>Unlike previous comparisons (for example, the FlowCAP challenges [<xref ref-type="bibr" rid="c10">10</xref>]), ensemble clustering did not give any improvements in performance compared to the best-performing individual methods for each data set (Supp Figs S7&#x2013;S10).</p>
</sec>
<sec id="s5c">
<title>Parameter inputs to manually select the number of clusters are more important than automatic options</title>
<p>In many applications of clustering, the expected number of clusters is unknown in advance. Several clustering methods in this study included options to determine the number of clusters automatically, while others left it as an input for the user. We used the automatic numbers where available, and a consistent choice of 40 clusters for each data set if a manual selection was required. If the automatic choice did not perform well, we also attempted to use 40 clusters; however, for some methods, it was not possible to change the number, while for others it was only possible to adjust an indirect parameter (see Methods and <xref ref-type="table" rid="tbl3">Table 3</xref>).</p>
<p>We found that the automatic options frequently performed poorly. Several methods selected too few clusters, tending to merge important clusters, which negatively affected performance as well as the interpretability of the results. Overall, considerable fine-tuning was required to ensure that each method selected an adequate number of clusters. In general, while the ability to select the number of clusters automatically is an appealing theoretical feature of clustering algorithms, our experiences indicate that its absence is not a severe limitation for studies of this type. On the contrary, an inability to easily adjust the number of clusters was a significant limitation for several methods where the automatic options performed poorly (for example, <monospace>DensVM</monospace> and <monospace>FLOCK</monospace>; see <xref ref-type="table" rid="tbl3">Table 3</xref>).</p>
<p>In practice, it is often straightforward for experienced immunological researchers to make a reasonable initial choice for the number of clusters, and to merge multiple clusters from a known cell population during later computational analysis. An optimal strategy may be to generate somewhat too many clusters, to ensure that small populations are not merged into larger clusters; and subsequently merge some of the excess clusters manually. However, this strategy is only feasible if it is possible to manually specify the desired number of clusters. For studies of this type, a simple, direct parameter input to manually select the number of clusters is a highly desirable feature of clustering algorithms.</p>
</sec>
<sec id="s5d">
<title>Unweighted averages ensure equal representation of large and small populations</title>
<p>For the data sets with multiple cell populations, we used unweighted means of the F1 score, precision, and recall across populations as our evaluation criteria. The use of unweighted averages ensures that large and small populations are represented equally. The relative population sizes in these data sets span several orders of magnitude (<xref ref-type="fig" rid="fig1">Fig. 1D</xref> and <xref ref-type="fig" rid="fig2">2D</xref>), so calculating averages weighted by population size would largely ignore the contribution of the smaller populations. This was especially a concern since we observed that, for many clustering methods, the F1 scores for individual populations were considerably worse for smaller populations than larger ones (Supp Figs S5&#x2013;S6). Additional results with averages weighted by population size showed that, for many methods, the weighted mean F1 scores were higher than the unweighted ones, as expected due to the better performance among larger populations; this also influenced the final rankings of the methods (Supp Figs S3&#x2013;S4).</p>
</sec>
<sec id="s5e">
<title>Several clustering methods are sensitive to random starts when detecting rare cell populations</title>
<p>To investigate the stability of the clustering algorithms across random starts, we ran methods multiple times with different random seeds. For the data sets with a single rare population of interest, this revealed significant variability for several methods. In particular, we observed a number of outlier runs, where performance was considerably better or worse than average. The variability was large enough that the rankings of the top methods for these data sets would change significantly for certain random seeds. The strongly affected methods included several of the best-performing methods for these data sets, including <monospace>FlowSOM_meta</monospace>, <monospace>PhenoGraph</monospace>, and <monospace>SamSPECTRAL</monospace> (<xref ref-type="fig" rid="fig7">Fig 7</xref> and Supp Figs S13&#x2013;S14). By contrast, for the data sets with multiple populations of interest, variability was relatively minor (Supp Figs S11&#x2013;S12). These results indicate that the sensitivity of clustering algorithms to random starts can be an important consideration, especially when the aim is to detect rare cell populations. In these cases, we recommend running clustering methods multiple times with different random starts.</p>
</sec>
<sec id="s5f">
<title>Results depend on the choice of benchmark data sets</title>
<p>Throughout this study, we have used manually gated cell population labels as the &#x201C;truth&#x201D; against which the clustering methods were evaluated. All of the data sets we used are from well-understood biological systems, where manual gating is likely to be reliable despite the high dimensionality. However, the effectiveness of this evaluation strategy clearly depends on the accuracy and completeness of the manual gating. If the manually gated populations are poorly defined, it will be difficult to accurately determine clustering performance. In fact, the authors of the data sets <monospace>Levine_2015_marrow_32</monospace> and <monospace>Levine_2015_marrow_13</monospace> noted that 61&#x0025; and 51&#x0025; of cells in these data sets were not assigned to any of the manually gated populations (see Methods and <xref ref-type="table" rid="tbl2">Table 2</xref>); [<xref ref-type="bibr" rid="c9">9</xref>]. For each data set, we ran clustering methods on all cells (including unassigned cells), to approximate typical analysis settings where prior knowledge about cell population identities is unavailable. Subsequently, we evaluated performance using the subset of cells with manually gated population labels. Potentially, inaccuracies in these labels, such as missing or incomplete populations or incorrectly labeled cells, could significantly affect the results. Despite this, the analysis for these data sets seems reliable, since the biological samples were sourced from healthy individuals and all major immune cell populations were present.</p>
<p>All four data sets used in this study were derived from real, experimental data sets. We did not include any synthetic data sets, due to the difficulty of designing accurate simulations in high-dimensional settings. Accurate synthetic data sets can be highly informative since the exact &#x201C;truth&#x201D; is known for every data point, allowing precise calculations of evaluation criteria such as the F1 score. Conversely, the advantage of real data sets is that they fully reflect the high-dimensional complexity of actual experimental settings. Since manually gated cell population labels are an accurate proxy for true labels in well-understood biological systems such as those considered here, we have chosen to focus on real data sets only. These four benchmark data sets cover a range of possible study designs in high-dimensional flow and mass cytometry, making our results generalizable for future experiments.</p>
</sec>
<sec id="s5g">
<title>Some methods are designed for different or complementary analysis tasks</title>
<p>Throughout this study, we have compared methods by evaluating their performance on the task of fully automated detection of high-dimensional clusters representing cell populations. However, some methods are not strictly intended for performing fully automated analysis in this manner, or include additional or complementary analysis capabilities that we have not tested. For example, the authors of <monospace>SWIFT</monospace> describe a semi-automated analysis pipeline, where <monospace>SWIFT</monospace> is initially used to group cells into a large number of small clusters, and these clusters are then further analyzed by gating. This strategy is intended to be particularly effective for detecting rare populations [<xref ref-type="bibr" rid="c19">19</xref>], which is consistent with our results (<xref ref-type="fig" rid="fig5">Fig 5</xref>). Similarly, <monospace>immunoClust</monospace> is designed to return a relatively large number of clusters [<xref ref-type="bibr" rid="c16">16</xref>]. In our evaluations, <monospace>immunoClust</monospace> and <monospace>immunoClust_all</monospace> split large populations into multiple clusters, which negatively affects performance for these populations (Supp Figs S5&#x2013;S6) as well as overall performance (<xref ref-type="fig" rid="fig1">Fig. 1</xref>&#x2013;<xref ref-type="fig" rid="fig2">2</xref>; see Supp Figs S22&#x2013;S23 and S36&#x2013;S37 for illustrations of the cluster splitting). In addition, <monospace>immunoClust</monospace> includes further analysis capabilities to compare cell populations between different biological samples, which is a central task in many experimental settings [<xref ref-type="bibr" rid="c16">16</xref>].</p>
<p>Three methods (<monospace>ACCENSE</monospace>, <monospace>DensVM</monospace>, and <monospace>Rclusterpp</monospace>) required the use of subsampling. For <monospace>ACCENSE</monospace> and <monospace>DensVM</monospace>, this is recommended by the authors [<xref ref-type="bibr" rid="c11">11</xref>,<xref ref-type="bibr" rid="c12">12</xref>]; for <monospace>Rclusterpp</monospace>, it is not recommended directly but was required due to the heavy computational requirements (<xref ref-type="fig" rid="fig1">Fig. 1</xref>&#x2013;<xref ref-type="fig" rid="fig2">2</xref> and <xref ref-type="fig" rid="fig4">4</xref>&#x2013;<xref ref-type="fig" rid="fig5">5</xref>). The numbers of subsampled cells we used for each data set are indicated in Supp Table S1. Although subsampling can be performed in a density-dependent manner to preserve smaller populations (as in <monospace>ACCENSE</monospace>, [<xref ref-type="bibr" rid="c11">11</xref>]), there remains a risk that for extremely rare populations, a significant proportion of cells may be discarded. Therefore, we do not recommend using these methods for detecting rare cell populations.</p>
<p>Similarly, several methods removed outliers or cells with uncertain cluster assignments (<monospace>ACCENSE</monospace>, <monospace>immunoClust</monospace>, and <monospace>SamSPECTRAL</monospace>). In the case of <monospace>immunoClust</monospace>, uncertain cells are removed by default, but can be classified in an additional step, which we have labeled as the separate method <monospace>immunoClust</monospace> all (<xref ref-type="table" rid="tbl1">Table 1</xref>). This behavior explains why the F1 score for <monospace>immunoClust</monospace> is zero for the data sets with rare cell populations (<xref ref-type="fig" rid="fig4">Fig. 4</xref>&#x2013;<xref ref-type="fig" rid="fig5">5</xref>); the rare populations of interest are completely removed as uncertain cells. The additional classification step in <monospace>immunoClust</monospace> all then assigns them to other populations. In general, as for subsampling, we do not recommend using these methods to detect rare cell populations. Despite this, we observed that <monospace>ACCENSE</monospace> performed very well for the <monospace>Nilsson_2013_HSC</monospace> data set (<xref ref-type="fig" rid="fig4">Fig 4</xref>), and SamSPECTRAL for the <monospace>Mosmann_2014_activ</monospace> data set (<xref ref-type="fig" rid="fig5">Fig 5</xref>), so there may be some cases where the removal of outliers does not significantly harm performance.</p>
<p>We also note that <monospace>ACCENSE</monospace> and <monospace>DensVM</monospace> rely on an initial nonlinear dimensionality reduction to two dimensions (using the t-SNE algorithm [<xref ref-type="bibr" rid="c24">24</xref>]), followed by the use of a density-based peak-finding algorithm to detect clusters in the projected space. Since the clustering effectively occurs in the two-dimensional projected space, this methodology may discard a significant amount of information, which could explain why these methods generally did not perform as well as some of the other approaches.</p>
</sec>
<sec id="s5h">
<title>Recommendations</title>
<p>We have performed an up-to-date, comprehensive, extensible comparison of clustering methods for automated detection of cell populations in high-dimensional flow and mass cytometry data. We compared 13 clustering methods (11 distinct methods and two variations), using four publicly available data sets from experiments in immunology. Based on our results, we recommend the use of <monospace>FlowSOM</monospace> (with the optional meta-clustering step but without automatic selection of the number of clusters) as a first choice for analyzing data sets from mass cytometry and high-dimensional flow cytometry experiments. This method gave the best performance for the data sets with multiple cell populations, and was ranked third for the data sets with a single rare cell population of interest. In addition, runtimes were extremely fast and computational requirements minimal, making <monospace>FlowSOM</monospace> well-suited for analyzing large data sets and performing interactive, exploratory analyses on a standard laptop. Other methods that performed well across several data sets, with reasonable runtimes, included <monospace>PhenoGraph</monospace>, <monospace>flowMeans</monospace>, and <monospace>FLOCK</monospace>. We also found that several clustering methods were sensitive to random starts when detecting rare cell populations, so for these data sets we recommend the use of multiple random starts to investigate variability. R scripts and preprocessed data files to reproduce our analyses are available from GitHub (<ext-link ext-link-type="uri" xlink:href="https://github.com/lmweber/cytometry-clustering-comparison">https://github.com/lmweber/cytometry-clustering-comparison</ext-link>) and FlowRepository (repository FR-FCM-ZZPH), allowing our comparisons to be extended to include new clustering methods and reference data sets.</p>
</sec>
</sec>
</body>
<back>
<sec id="s6">
<title>Supporting Information</title>
<p>S1 Supplementary Information</p>
<p><bold>Supplementary Figures S1&#x2013;S42</bold>. Document containing all supplementary figures referenced in the text.</p>
<p>S1 Table</p>
<p><bold>Supplementary Table S1</bold>. Spreadsheet containing additional details on clustering methods.</p>
</sec>
<ack>
<title>Acknowledgments</title>
<p>We thank Charlotte Soneson, St&#x00B4;ephane Chevrier, Vito Zanotelli, Bernd Bodenmiller, Felix Hartmann, and members of the Robinson, Baudis, and von Mering labs at the University of Zurich for helpful discussions and feedback on earlier drafts of the manuscript. Figures were generated using the R packages <monospace>ggplot2</monospace>, <monospace>reshape2</monospace>, <monospace>ggrepel</monospace>, <monospace>cowplot</monospace>, <monospace>pheatmap</monospace>, <monospace>RColorBrewer</monospace>, and <monospace>colorspace</monospace>.</p>
</ack>
<ref-list>
<title>References</title>
<ref id="c1"><label>1</label><mixed-citation publication-type="journal"><string-name><surname>Orkin</surname> <given-names>SH</given-names></string-name>, <string-name><surname>Zon</surname> <given-names>LI.</given-names></string-name> <article-title>Hematopoiesis: An evolving paradigm for stem cell biology</article-title>. <source>Cell</source>. <year>2008</year>;<volume>132</volume>(<issue>4</issue>):<fpage>631</fpage>&#x2013;<lpage>644</lpage>.</mixed-citation></ref>
<ref id="c2"><label>2</label><mixed-citation publication-type="journal"><string-name><surname>Bendall</surname> <given-names>SC</given-names></string-name>, <string-name><surname>Nolan</surname> <given-names>GP</given-names></string-name>, <string-name><surname>Roederer</surname> <given-names>M</given-names></string-name>, <string-name><surname>Chattopadhyay</surname> <given-names>PK.</given-names></string-name> <article-title>A deep profiler&#x0027;s guide to cytometry</article-title>. <source>Trends in Immunology</source>. <year>2012</year>;<volume>33</volume>(<issue>7</issue>):<fpage>323</fpage>&#x2013;<lpage>332</lpage>.</mixed-citation></ref>
<ref id="c3"><label>3</label><mixed-citation publication-type="journal"><string-name><surname>Bendall</surname> <given-names>SC</given-names></string-name>, <string-name><surname>Simonds</surname> <given-names>EF</given-names></string-name>, <string-name><surname>Qiu</surname> <given-names>P</given-names></string-name>, <string-name><surname>Amir</surname> <given-names>ED</given-names></string-name>, <string-name><surname>Krutzik</surname> <given-names>PO</given-names></string-name>, <string-name><surname>Finck</surname> <given-names>R</given-names></string-name>, <etal>et al.</etal> <article-title>Single-cell mass cytometry of differential immune and drug responses across a human hematopoietic continuum</article-title>. <source>Science</source>. <year>2011</year>;<volume>332</volume>:<fpage>687</fpage>&#x2013;<lpage>696</lpage>.</mixed-citation></ref>
<ref id="c4"><label>4</label><mixed-citation publication-type="journal"><string-name><surname>Finak</surname> <given-names>G</given-names></string-name>, <string-name><surname>Frelinger</surname> <given-names>J</given-names></string-name>, <string-name><surname>Jiang</surname> <given-names>W</given-names></string-name>, <string-name><surname>Newell</surname> <given-names>EW</given-names></string-name>, <string-name><surname>Ramey</surname> <given-names>J</given-names></string-name>, <string-name><surname>Davis</surname> <given-names>MM</given-names></string-name>, <etal>et al.</etal> <article-title>OpenCyto: An open source infrastructure for scalable, robust, reproducible, and automated, end-to-end flow cytometry data analysis</article-title>. <source>PLOS Computational Biology</source>. <year>2014</year>;<volume>10</volume>(<issue>8</issue>):<fpage>e1003806</fpage>.</mixed-citation></ref>
<ref id="c5"><label>5</label><mixed-citation publication-type="journal"><string-name><surname>Kriegel</surname> <given-names>HP</given-names></string-name>, <string-name><surname>Kr&#x00A8;oger</surname> <given-names>P</given-names></string-name>, <article-title>Zimek A. Clustering high-dimensional data: A survey on subspace clustering, pattern-based clustering, and correlation clustering</article-title>. <source>ACM Transactions on Knowledge Discovery from Data</source>. <year>2009</year>;<volume>3</volume>(<issue>1</issue>):<fpage>1</fpage>&#x2013;<lpage>58</lpage>.</mixed-citation></ref>
<ref id="c6"><label>6</label><mixed-citation publication-type="journal"><string-name><surname>Chester</surname> <given-names>C</given-names></string-name>, <string-name><surname>Maecker</surname> <given-names>HT.</given-names></string-name> <article-title>Algorithmic tools for mining high-dimensional cytometry data</article-title>. <source>Journal of Immunology</source>. <year>2015</year>;<volume>195</volume>:<fpage>773</fpage>&#x2013;<lpage>779</lpage>.</mixed-citation></ref>
<ref id="c7"><label>7</label><mixed-citation publication-type="journal"><string-name><surname>Diggins</surname> <given-names>KE</given-names></string-name>, <string-name><surname>Ferrell</surname> <given-names>PBJ</given-names></string-name>, <string-name><surname>Irish</surname> <given-names>JM.</given-names></string-name> <article-title>Methods for discovery and characterization of cell subsets in high dimensional mass cytometry data</article-title>. <source>Methods</source>. <year>2015</year>;<volume>82</volume>:<fpage>55</fpage>&#x2013;<lpage>63</lpage>.</mixed-citation></ref>
<ref id="c8"><label>8</label><mixed-citation publication-type="journal"><string-name><surname>Wiwie</surname> <given-names>C</given-names></string-name>, <string-name><surname>Baumbach</surname> <given-names>J</given-names></string-name>, <article-title>R&#x00A8;ottger R. Comparing the performance of biomedical clustering methods</article-title>. <source>Nature Methods</source>. <year>2015</year>;<volume>12</volume>(<issue>11</issue>):<fpage>1033</fpage>&#x2013;<lpage>1038</lpage>.</mixed-citation></ref>
<ref id="c9"><label>9</label><mixed-citation publication-type="journal"><string-name><surname>Levine</surname> <given-names>JH</given-names></string-name>, <string-name><surname>Simonds</surname> <given-names>EF</given-names></string-name>, <string-name><surname>Bendall</surname> <given-names>SC</given-names></string-name>, <string-name><surname>Davis</surname> <given-names>KL</given-names></string-name>, <string-name><surname>Amir</surname> <given-names>ED</given-names></string-name>, <string-name><surname>Tadmor</surname> <given-names>MD</given-names></string-name>, <etal>et al.</etal> <article-title>Datadriven phenotypic dissection of AML reveals progenitor-like cells that correlate with prognosis</article-title>. <source>Cell</source>. <year>2015</year>;<volume>162</volume>:<fpage>184</fpage>&#x2013;<lpage>197</lpage>.</mixed-citation></ref>
<ref id="c10"><label>10</label><mixed-citation publication-type="journal"><string-name><surname>Aghaeepour</surname> <given-names>N</given-names></string-name>, <string-name><surname>Finak</surname> <given-names>G</given-names></string-name>, <string-name><surname>Hoos</surname> <given-names>H</given-names></string-name>, <string-name><surname>Mosmann</surname> <given-names>TR</given-names></string-name>, <string-name><surname>Brinkman</surname> <given-names>R</given-names></string-name>, <string-name><surname>Gottardo</surname> <given-names>R</given-names></string-name>, <etal>et al.</etal> <article-title>Critical assessment of automated flow cytometry data analysis techniques</article-title>. <source>Nature Methods</source>. <year>2013</year>;<volume>10</volume>(<issue>3</issue>):<fpage>228</fpage>&#x2013;<lpage>238</lpage>.</mixed-citation></ref>
<ref id="c11"><label>11</label><mixed-citation publication-type="journal"><string-name><surname>Shekhar</surname> <given-names>K</given-names></string-name>, <string-name><surname>Brodin</surname> <given-names>P</given-names></string-name>, <string-name><surname>Davis</surname> <given-names>MM</given-names></string-name>, <string-name><surname>Chakraborty</surname> <given-names>AK.</given-names></string-name> <article-title>Automatic classification of cellular expression by nonlinear stochastic embedding (ACCENSE)</article-title>. <source>Proceedings of the National Academy of Sciences of the United States of America</source>. <year>2014</year>;<volume>111</volume>(<issue>1</issue>):<fpage>202</fpage>&#x2013;<lpage>207</lpage>.</mixed-citation></ref>
<ref id="c12"><label>12</label><mixed-citation publication-type="journal"><string-name><surname>Becher</surname> <given-names>B</given-names></string-name>, <string-name><surname>Schlitzer</surname> <given-names>A</given-names></string-name>, <string-name><surname>Chen</surname> <given-names>J</given-names></string-name>, <string-name><surname>Mair</surname> <given-names>F</given-names></string-name>, <string-name><surname>Sumatoh</surname> <given-names>HR</given-names></string-name>, <string-name><surname>Wei</surname> <given-names>K</given-names></string-name>, <etal>et al.</etal> <article-title>High-dimensional analysis of the murine myeloid cell system</article-title>. <source>Nature Immunology</source>. <year>2014</year>;<volume>15</volume>(<issue>12</issue>):<fpage>1181</fpage>&#x2013;<lpage>1189</lpage>.</mixed-citation></ref>
<ref id="c13"><label>13</label><mixed-citation publication-type="journal"><string-name><surname>Qian</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Wei</surname> <given-names>C</given-names></string-name>, <string-name><surname>Lee</surname> <given-names>FEH</given-names></string-name>, <string-name><surname>Campbell</surname> <given-names>J</given-names></string-name>, <string-name><surname>Halliley</surname> <given-names>J</given-names></string-name>, <string-name><given-names>Lee</given-names> <surname>Ja</surname></string-name>, <etal>et al.</etal> <article-title>Elucidation of seventeen human peripheral blood B-cell subsets and quantification of the tetanus response using a density-based method for the automated identification of cell populations in multidimensional flow cytometry data</article-title>. <source>Cytometry Part B</source>. <year>2010</year>;<volume>78B</volume>(<issue>Suppl. 1</issue>):<fpage>S69</fpage>&#x2013;<lpage>S82</lpage>.</mixed-citation></ref>
<ref id="c14"><label>14</label><mixed-citation publication-type="journal"><string-name><surname>Aghaeepour</surname> <given-names>N</given-names></string-name>, <string-name><surname>Nikolic</surname> <given-names>R</given-names></string-name>, <string-name><surname>Hoos</surname> <given-names>HH</given-names></string-name>, <string-name><surname>Brinkman</surname> <given-names>RR.</given-names></string-name> <article-title>Rapid cell population identification in flow cytometry data</article-title>. <source>Cytometry Part A</source>. <year>2011</year>;<volume>79A</volume>:<fpage>6</fpage>&#x2013;<lpage>13</lpage>.</mixed-citation></ref>
<ref id="c15"><label>15</label><mixed-citation publication-type="journal"><string-name><surname>Van Gassen</surname> <given-names>S</given-names></string-name>, <string-name><surname>Callebaut</surname> <given-names>B</given-names></string-name>, <string-name><surname>Van Helden</surname> <given-names>MJ</given-names></string-name>, <string-name><surname>Lambrecht</surname> <given-names>BN</given-names></string-name>, <string-name><surname>Demeester</surname> <given-names>P</given-names></string-name>, <string-name><surname>Dhaene</surname> <given-names>T</given-names></string-name>, <etal>et al.</etal> <article-title>FlowSOM: Using self-organizing maps for visualization and interpretation of cytometry data</article-title>. <source>Cytometry Part A</source>. <year>2015</year>;<volume>87A</volume>:<fpage>636</fpage>&#x2013;<lpage>645</lpage>.</mixed-citation></ref>
<ref id="c16"><label>16</label><mixed-citation publication-type="journal"><string-name><surname>S&#x00F6;rensen</surname> <given-names>T</given-names></string-name>, <string-name><surname>Baumgart</surname> <given-names>S</given-names></string-name>, <string-name><surname>Durek</surname> <given-names>P</given-names></string-name>, <string-name><surname>Gr&#x00FC;tzkau</surname> <given-names>A</given-names></string-name>, <article-title>H&#x00E4;upl T. immunoClust - An automated analysis pipeline for the identification of immunophenotypic signatures in high-dimensional cytometric datasets</article-title>. <source>Cytometry Part A</source>. <year>2015</year>;<volume>87A</volume>:<fpage>603</fpage>&#x2013;<lpage>615</lpage>.</mixed-citation></ref>
<ref id="c17"><label>17</label><mixed-citation publication-type="journal"><string-name><surname>Linderman</surname> <given-names>M.</given-names></string-name> <source>Rclusterpp: Linkable C&#x002B;&#x002B; clustering. R package version 0.2.3.</source>; <year>2013</year>.</mixed-citation></ref>
<ref id="c18"><label>18</label><mixed-citation publication-type="journal"><string-name><surname>Zare</surname> <given-names>H</given-names></string-name>, <string-name><surname>Shooshtari</surname> <given-names>P</given-names></string-name>, <string-name><surname>Gupta</surname> <given-names>A</given-names></string-name>, <string-name><surname>Brinkman</surname> <given-names>RR.</given-names></string-name> <article-title>Data reduction for spectral clustering to analyze high throughput flow cytometry data</article-title>. <source>BMC Bioinformatics</source>. <year>2010</year>;<volume>11</volume>:<fpage>403</fpage>.</mixed-citation></ref>
<ref id="c19"><label>19</label><mixed-citation publication-type="journal"><string-name><surname>Mosmann</surname> <given-names>TR</given-names></string-name>, <string-name><surname>Naim</surname> <given-names>I</given-names></string-name>, <string-name><surname>Rebhahn</surname> <given-names>J</given-names></string-name>, <string-name><surname>Datta</surname> <given-names>S</given-names></string-name>, <string-name><surname>Cavenaugh</surname> <given-names>JS</given-names></string-name>, <string-name><surname>Weaver</surname> <given-names>JM</given-names></string-name>, <etal>et al.</etal> <article-title>SWIFT - Scalable clustering for automated identification of rare cell populations in large, high-dimensional flow cytometry datasets, Part 2: Biological evaluation</article-title>. <source>Cytometry Part A</source>. <year>2014</year>;<volume>85A</volume>:<fpage>422</fpage>&#x2013;<lpage>433</lpage>.</mixed-citation></ref>
<ref id="c20"><label>20</label><mixed-citation publication-type="journal"><string-name><surname>Nilsson</surname> <given-names>AR</given-names></string-name>, <string-name><surname>Bryder</surname> <given-names>D</given-names></string-name>, <article-title>Pronk CJH. Frequency determination of rare populations by flow cytometry: A hematopoietic stem cell perspective</article-title>. <source>Cytometry Part A</source>. <year>2013</year>;<volume>83A</volume>:<fpage>721</fpage>&#x2013;<lpage>727</lpage>.</mixed-citation></ref>
<ref id="c21"><label>21</label><mixed-citation publication-type="journal"><string-name><surname>Spidlen</surname> <given-names>J</given-names></string-name>, <string-name><surname>Breuer</surname> <given-names>K</given-names></string-name>, <string-name><surname>Rosenberg</surname> <given-names>C</given-names></string-name>, <string-name><surname>Kotecha</surname> <given-names>N</given-names></string-name>, <string-name><surname>Brinkman</surname> <given-names>RR.</given-names></string-name> <article-title>FlowRepository: A re-source of annotated flow cytometry datasets associated with peer-reviewed publications</article-title>. <source>Cytometry Part A</source>. <year>2012</year>;<volume>81A</volume>:<fpage>727</fpage>&#x2013;<lpage>731</lpage>.</mixed-citation></ref>
<ref id="c22"><label>22</label><mixed-citation publication-type="journal"><string-name><surname>Kotecha</surname> <given-names>N</given-names></string-name>, <string-name><surname>Krutzik</surname> <given-names>PO</given-names></string-name>, <string-name><surname>Irish</surname> <given-names>JM.</given-names></string-name> <article-title>Web-based analysis and publication of flow cytometry experiments</article-title>. <source>Current Protocols in Cytometry</source>. <year>2010;(July)</year>:<fpage>10.17.1</fpage>&#x2013;<lpage>10.17.24</lpage>.</mixed-citation></ref>
<ref id="c23"><label>23</label><mixed-citation publication-type="journal"><string-name><surname>Hornik</surname> <given-names>K.</given-names></string-name> <article-title>A CLUE for CLUster Ensembles</article-title>. <source>Journal of Statistical Software</source>. <year>2005</year>;<volume>14</volume>(<issue>12</issue>).</mixed-citation></ref>
<ref id="c24"><label>24</label><mixed-citation publication-type="journal"><string-name><surname>van der Maaten</surname> <given-names>L.</given-names></string-name> <article-title>Accelerating t-SNE using tree-based algorithms</article-title>. <source>Journal of Machine Learning Research</source>. <year>2014</year>;<volume>15</volume>:<fpage>1</fpage>&#x2013;<lpage>21</lpage>.</mixed-citation></ref>
</ref-list>
</back>
</article>

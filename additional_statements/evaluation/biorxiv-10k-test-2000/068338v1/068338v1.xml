<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.2d1 20170631//EN" "JATS-archivearticle1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" article-type="article" dtd-version="1.2d1" specific-use="production" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">BIORXIV</journal-id>
<journal-title-group>
<journal-title>bioRxiv</journal-title>
<abbrev-journal-title abbrev-type="publisher">bioRxiv</abbrev-journal-title>
</journal-title-group>
<publisher>
<publisher-name>Cold Spring Harbor Laboratory</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1101/068338</article-id>
<article-version>1.1</article-version>
<article-categories>
<subj-group subj-group-type="author-type">
<subject>Regular Article</subject>
</subj-group>
<subj-group subj-group-type="heading">
<subject>New Results</subject>
</subj-group>
<subj-group subj-group-type="hwp-journal-coll">
<subject>Bioinformatics</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>ABySS 2.0: Resource-Efficient Assembly of Large Genomes using a Bloom Filter</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name><surname>Jackman</surname><given-names>Shaun D</given-names></name>
<xref ref-type="author-notes" rid="n1">&#x002A;</xref>
</contrib>
<contrib contrib-type="author">
<name><surname>Vandervalk</surname><given-names>Benjamin P</given-names></name>
<xref ref-type="author-notes" rid="n1">&#x002A;</xref>
</contrib>
<contrib contrib-type="author">
<name><surname>Mohamadi</surname><given-names>Hamid</given-names></name>
</contrib>
<contrib contrib-type="author">
<name><surname>Chu</surname><given-names>Justin</given-names></name>
</contrib>
<contrib contrib-type="author">
<name><surname>Yeo</surname><given-names>Sarah</given-names></name>
</contrib>
<contrib contrib-type="author">
<name><surname>Hammond</surname><given-names>S Austin</given-names></name>
</contrib>
<contrib contrib-type="author">
<name><surname>Jahesh</surname><given-names>Golnaz</given-names></name>
</contrib>
<contrib contrib-type="author">
<name><surname>Khan</surname><given-names>Hamza</given-names></name>
</contrib>
<contrib contrib-type="author">
<name><surname>Coombe</surname><given-names>Lauren</given-names></name>
</contrib>
<contrib contrib-type="author">
<name><surname>Warren</surname><given-names>Rene L</given-names></name>
</contrib>
<contrib contrib-type="author">
<name><surname>Birol</surname><given-names>Inanc</given-names></name>
</contrib>
</contrib-group>
<author-notes>
<fn id="n1"><label>&#x002A;</label><p>SDJ and BPV are joint first authors and are listed in alphabetical order.</p></fn>
</author-notes>
<pub-date pub-type="epub"><year>2016</year></pub-date>
<elocation-id>068338</elocation-id>
<history>
<date date-type="received">
<day>07</day>
<month>8</month>
<year>2016</year>
</date>
<date date-type="accepted">
<day>07</day>
<month>8</month>
<year>2016</year>
</date>
</history>
<permissions>
<copyright-statement>&#x00A9; 2016, Posted by Cold Spring Harbor Laboratory</copyright-statement>
<copyright-year>2016</copyright-year>
<license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by/4.0/"><license-p>This pre-print is available under a Creative Commons License (Attribution 4.0 International), CC BY 4.0, as described at <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link></license-p></license>
</permissions>
<self-uri xlink:href="068338.pdf" content-type="pdf" xlink:role="full-text"/>
<abstract><title>Abstract</title><p>The assembly of DNA sequences <italic>de novo</italic> is fundamental to genomics research. It is the first of many steps towards elucidating and characterizing whole genomes. Downstream applications, including analysis of genomic variation between species, between or within individuals critically depends on robustly assembled sequences. In the span of a single decade, the sequence throughput of leading DNA sequencing instruments has increased drastically, and coupled with established and planned large-scale, personalized medicine initiatives to sequence genomes in the thousands and even millions, the development of efficient, scalable and accurate bioinformatics tools for producing high-quality reference draft genomes is timely.</p>
<p>With ABySS 1.0, we originally showed that assembling the human genome using short 50 bp sequencing reads was possible by aggregating the half terabyte of compute memory needed over several computers using a standardized message-passing system (MPI). We present here its re-design, which departs from MPI and instead implements algorithms that employ a Bloom filter, a probabilistic data structure, to represent a de Bruijn graph and reduce memory requirements.</p>
<p>We present assembly benchmarks of human Genome in a Bottle 250 bp Illumina paired-end and 6 kbp mate-pair libraries from a single individual, yielding a NG50 (NGA50) scaffold contiguity of 3.5 (3.0) Mbp using less than 35 GB of RAM, a modest memory requirement by today&#x2019;s standard that is often available on a single computer. We also investigate the use of BioNano Genomics and 10x Genomics&#x2019; Chromium data to further improve the scaffold contiguity of this assembly to 42 (15) Mbp.</p>
</abstract>
<counts>
<page-count count="24"/>
</counts>
</article-meta>
</front>
<body>
<sec id="s1"><title>Introduction</title>
<p><italic>De novo</italic> genome assembly remains a challenging problem, especially for large and complex genomes. The problem refers to identifying partial and unambiguous overlaps between sequencing reads (which are orders of magnitude shorter than the target genome) to build longer, contiguous sequences (contigs) (<xref ref-type="bibr" rid="c20">Nagarajan and Pop 2013</xref>). If further linkage information is available, such as in the form of paired end reads or physical maps, these contigs may be ordered and oriented with respect to each other and reported as scaffolds, where there may be undetermined sequences (represented as &#x2018;N&#x2019;s) between contigs. It is practically accepted that assembly algorithms almost never reconstruct genomes in their full chromosomes (<xref ref-type="bibr" rid="c22">Paulino et al. 2015</xref>), and the quality of returned contigs and scaffolds are conventionally measured by the contiguity of the assembled sequences. Often assembly algorithms are also validated using data from resequencing experiments, where assembled sequences are compared against a reference genome for their correctness in addition to their contiguity (<xref ref-type="bibr" rid="c9">Gurevich et al. 2013</xref>).</p>
<p>Of particular interest in this study is resequencing data from human genome studies. The unbiased approach of <italic>de novo</italic> assembly of data from these experiments prior to comparison to a reference sequence is a valuable approach in detecting structural variants between individuals or between tumor and normal genomes (<xref ref-type="bibr" rid="c14">Li 2015</xref>; <xref ref-type="bibr" rid="c18">Mose et al. 2014</xref>). Even though it is substantially more computationally intensive to analyze sequencing data by assembling the reads first, gained specificity and the resulting savings in event verification efforts may justify the choice, but its heavy resource use also points to an area for improvement.</p>
<p>In this domain ABySS v1 was the first scalable <italic>de novo</italic> assembly tool that could assemble a human genome, using short reads from a high-throughput sequencing platform (<xref ref-type="bibr" rid="c30">Simpson et al. 2009</xref>). However, the feat required aggregating a large amount of memory distributed across a number of compute nodes communicating through a Message Passing Interface protocol. Although this enabling technology found applications in many large cancer cohort studies (<xref ref-type="bibr" rid="c34">Yip et al. 2011</xref>; <xref ref-type="bibr" rid="c27">Roberts et al. 2012</xref>; <xref ref-type="bibr" rid="c25">Pugh et al. 2013</xref>; <xref ref-type="bibr" rid="c13">Ley et al. 2013</xref>; <xref ref-type="bibr" rid="c17">Morin et al. 2013</xref>), its large memory footprint constituted a substantial bottleneck.</p>
<p>Of course this large memory footprint issue was not unique to ABySS v1, with many algorithms that can scale to assemble the human genome, including SOAP-denovo (<xref ref-type="bibr" rid="c15">Luo et al. 2012</xref>), SGA (<xref ref-type="bibr" rid="c29">Simpson and Durbin 2011</xref>), ALLPATHS_LG (<xref ref-type="bibr" rid="c8">Gnerre et al. 2010</xref>), MaSuRCA (<xref ref-type="bibr" rid="c35">Zimin et al. 2013</xref>) and DISCOVAR (<xref ref-type="bibr" rid="c33">Weisenfeld et al. 2014</xref>) all requiring around 1 TB of RAM, if not more, to accomplish this. To alleviate this bottleneck, Minia (<xref ref-type="bibr" rid="c5">Chikhi and Rizk 2013</xref>) and BCALM2 (<xref ref-type="bibr" rid="c4">Chikhi et al. 2016</xref>) algorithms introduce probabilistic data structures using Bloom filters (<xref ref-type="bibr" rid="c1">Bloom 1970</xref>) and minimizer hashing (<xref ref-type="bibr" rid="c3">Chikhi et al. 2014</xref>), respectively.</p>
<p>In ABySS v2, we follow the model of Minia, where sequence overlaps are inferred from a de Bruijn graph (<xref ref-type="bibr" rid="c24">Pevzner et al. 2001</xref>) representing an implicit Bloom filter.</p>
<p>As in ABySS v1, we catalogue all observed sequences of length k (k-mers, with k less than the read length), and store them in a Bloom filter. This representation of the k-mer spectrum of the input reads lends itself naturally to identify k-1 base pair overlaps, hence describe a de Bruijn graph.</p>
<p>Performance of sequence assembly algorithms is closely coupled with the sequencing technology used and the quality of the data they generate, with highly accurate long reads always being desirable. However, the genomics research landscape, especially cancer genomics studies, has been heavily dominated by the high throughput sequencing platforms from Illumina (San Diego, CA). Although longer (albeit noisier) sequences from Pacific Biosciences (Menlo Park, CA) instruments are proven to yield high quality <italic>de novo</italic> human genome assemblies (<xref ref-type="bibr" rid="c2">Chaisson et al. 2014</xref>; <xref ref-type="bibr" rid="c23">Pendleton et al. 2015</xref>), they come at a higher price relative to Illumina reads. The newer long read instruments from Oxford Nanopore Technologies (Oxford, UK) do not yet have the necessary throughput or data quality to be of utility in human genomics studies. As a result, most large cohort projects, as well as price-sensitive personalized medicine applications still use the Illumina platforms.</p>
<p>Another new technology, Chromium from 10X Genomics (Pleasanton, CA), generates sequencing libraries that localize sequence information on DNA fragments that are over 100 kb long. The technology employs microfluidics to isolate large fragments, which are sheared and barcoded separately, and prepared to sequencing libraries compatible with Illumina paired end sequencing. The barcodes can then be used to reconstruct the sequence of the long fragments from which they originate, providing valuable linkage information for assembly and scaffolding problems.</p>
<p>Further on the scaffolding problem, it was demonstrated in the original Human Genome Project (<xref ref-type="bibr" rid="c12">Lander et al. 2001</xref>) and other pioneering <italic>de novo</italic> sequencing projects that used Sanger sequencing data that linkage information from a physical map is very valuable in building highly contiguous assemblies. Although the approach is not favored in many studies, presumably for the additional cost that it brings, new optical mapping technologies, such as that from BioNano Genomics (San Diego, CA) represent intriguing opportunities.</p>
<p>In this paper we describe the details of the Bloom filter implementation in ABySS v2, and compare its performance with respect to the latest version of ABySS v1, as well as other scalable assembly pipelines, SOAPdenovo and SGA. We note that there are other algorithms that can build contigs from high throughput sequencing datasets, and we include comparison to DISCOVARdenovo, Minia and BCALM2 in that category, further contiguating their results using third party scaffolding algorithms, BESST (<xref ref-type="bibr" rid="c28">Sahlin et al. 2016</xref>), LINKS (<xref ref-type="bibr" rid="c32">Warren et al. 2015</xref>) and the scaffolding algorithm within the ABySS package. We further demonstrate how long range linkage information from Chromium reads and BioNano maps may improve scaffold contiguity of draft assemblies.</p>
</sec>
<sec id="s2"><title>Results</title>
<sec id="s2a"><title>ABySS 2.0.0 Assembly Algorithm</title>
<p>In ABySS 2.0.0, we have implemented a multi-stage <italic>de novo</italic> assembly pipeline consisting of unitig, contig, and scaffold stages. In the unitig stage, we perform the initial assembly of sequences according to the de Bruijn graph assembly paradigm (<xref ref-type="bibr" rid="c24">Pevzner et al. 2001</xref>). In the contig stage, we align the paired-end reads to the unitigs and use the pairing information to orient and merge overlapping unitigs. In the scaffold stage, we align the mate-pair reads to the contigs to orient and join them into scaffolds, inserting gaps of &#x2018;N&#x2019; characters at gaps in coverage and unresolved repeats.</p>
<p>The main innovation of ABySS 2.0.0 is a Bloom filter-based implementation of the de Bruijn graph assembly algorithm that reduces the overall memory requirements of ABySS by an order of magnitude. While the original ABySS publication (<xref ref-type="bibr" rid="c30">Simpson et al. 2009</xref>) introduced a novel distributed approach for assembling large genomes on a cluster, the Bloom filter approach we describe here enables large genome assemblies to be run on a single machine with modest memory and achieves comparable results.</p>
</sec>
<sec id="s2b"><title>Effect of Bloom Filter False Positive Rate</title>
<p>While a Bloom filter can be used to implement a highly compact representation of the de Bruijn graph, it comes with the caveat that it is a probabilistic data structure. In particular, a Bloom filter may return <italic>false positives</italic> when queried for the presence of particular <italic>k</italic>-mers in the graph. The false positive rate of a Bloom filter is determined by the size of the Bloom filter <italic>m</italic>, the number of elements inserted into the Bloom filter <italic>n</italic>, and the number of hash functions <italic>h</italic>, as first derived in <xref ref-type="bibr" rid="c1">Bloom (1970)</xref>:
<disp-formula><alternatives><graphic xlink:href="068338_ueqn1.gif"/></alternatives></disp-formula></p>
<p>In the context of de Bruijn graph assembly, Bloom filter false positives have the effect of adding <italic>k</italic>-mers to the graph that are not present in the input sequencing reads. To address this issue, we have implemented a look-ahead mechanism to remove such <italic>k</italic>-mers from the graph. However, in order to confirm that Bloom filter false positives do not cause assembly artifacts, and to better understand the relationship between Bloom filter false positive rate, RAM usage, and running time, we conducted the following experiment.</p>
<p>Using the <italic>C. elegans</italic> dataset DRR008444, we assessed the effect of Bloom filter false positive rate on the NG50, number of misassemblies, run time, and peak memory usage of ABySS 2.0.0 (<xref rid="fig1" ref-type="fig">Fig. 1</xref>). As we increased the false positive rate from 1.9&#x0025; to 20.7&#x0025;, the NG50 remained roughly the same at 9600 bp, decreasing slightly as FPR reached 20&#x0025; (<xref rid="fig1" ref-type="fig">Fig. 1A</xref>). Similarly, the number of misassemblies (9) remained constant across FPR values (<xref rid="fig1" ref-type="fig">Fig. 1B</xref>). As FPR was increased, the run time of ABySS 2.0.0 increased rapidly (<xref rid="fig1" ref-type="fig">Fig. 1C</xref>) while the peak memory usage decreased rapidly (<xref rid="fig1" ref-type="fig">Fig. 1D</xref>). These plots demonstrate that for this dataset we can trade off between memory usage and run time, with a FPR in the range of 5&#x0025; - 12&#x0025; giving both good memory and time performance. It also indicates that any FPR below 20&#x0025; has no adverse effects on assembly quality in terms of contiguity or correctness.</p>
<fig id="fig1" position="float" orientation="portrait" fig-type="figure"><label>Figure 1:</label>
<caption><p>Effect of Bloom filter false positive rate (FPR) on ABySS 2.0.0 assemblies of the <italic>C. elegans</italic> DRR008444 dataset. (A) The assembly contiguity (NG50) is stable up to an FPR of 20&#x0025;. (B) The number of misassemblies reported by QUAST (9) is stable with respect to FPR. (C) The assembly wallclock time increases with FPR and rises quickly when FPR exceeds 12&#x0025;. (D) Peak memory usage drops quickly as FPR increases and levels out as FPR reaches 7.5&#x0025;. From these results we conclude that a Bloom filter FPR in the range of 5-12&#x0025; provides a good balance between assembly time and memory usage, without any detrimental effect on assembly quality.</p></caption>
<graphic xlink:href="068338_fig1.tif"/>
</fig>
</sec>
<sec id="s2c"><title>Assembler Comparison</title>
<p>To assess the performance of ABySS 2.0.0, we compared it with other leading assemblers for large genomes: ABySS 1.9.0 (<xref ref-type="bibr" rid="c30">Simpson et al. 2009</xref>), BCALM2 (<xref ref-type="bibr" rid="c4">Chikhi et al. 2016</xref>), DISCOVAR <italic>de novo</italic> 52488 (<xref ref-type="bibr" rid="c33">Weisenfeld et al. 2014</xref>), Minia 3.0 beta (<xref ref-type="bibr" rid="c5">Chikhi and Rizk 2013</xref>), SGA 0.10.14 (<xref ref-type="bibr" rid="c29">Simpson and Durbin 2011</xref>) and SOAPdenovo 2.04 (<xref ref-type="bibr" rid="c15">Luo et al. 2012</xref>). We conducted our comparison using a recent, publicly available human short read data set provided by the Genome in a Bottle (<xref ref-type="bibr" rid="c36">Zook et al. 2016</xref>) project. The Genome in a Bottle HG004 data was chosen for its deep 70X coverage of current (paired-end 250 bp) Illumina short read data and the availability of sequences from other platforms, including a 175X physical coverage jumping library (mate-pair) dataset (after trimming), 10X genomics Chromium data, and BioNano optical mapping data. Each of the assemblers included in the comparison was chosen due to its significant contributions towards the goal of scalable <italic>de novo</italic> assembly. ABySS facilitates large genome assemblies by distributing the de Bruijn graph across cluster nodes, and was the first software to assemble a human genome from short reads. The BCALM2 assembler introduces a novel method for partitioning the de Bruijn graph using minimizer hashing, which enables subsets of the graph to be assembled iteratively or in parallel. DISCOVAR <italic>de novo</italic> is a recent de Bruijn graph assembler for large genomes. Minia is the first assembler to employ a Bloom filter representation of the de Bruijn graph and uses a novel algorithm for eliminating Bloom filter false positives. SGA demonstrates the use of an FM-index (<xref ref-type="bibr" rid="c29">Simpson and Durbin 2011</xref>) as the core data structure for assembly, enabling detection of variable-length overlaps between reads with a low memory footprint. In addition to the aforementioned assemblers, we also attempted to include ALLPATHS-LG 52488 (<xref ref-type="bibr" rid="c8">Gnerre et al. 2010</xref>) and MaSuRCA 3.1.3 (<xref ref-type="bibr" rid="c35">Zimin et al. 2013</xref>) in our comparison. However, these assemblers did not run to completion on the target data set. ALLPATHS-LG 52488 (<xref ref-type="bibr" rid="c8">Gnerre et al. 2010</xref>) ran for one month and did not complete in that time. MaSuRCA 3.1.3 (<xref ref-type="bibr" rid="c35">Zimin et al. 2013</xref>) ran for five days and failed with a segmentation fault in the program <monospace>gatekeeper</monospace>.</p>
<p>We first compared the resource-efficiency of the assemblers by measuring their peak RAM and wallclock time (<xref rid="fig2" ref-type="fig">Fig. 2D</xref>, <xref rid="tbl4" ref-type="table">Table 4</xref>). Memory usage and run time varied wildly from 5 GB to 1.8 TB and 9 hours to 8 days. As expected given the succinct representation of the de Bruijn graph using Bloom filters, both Minia and ABySS 2.0.0 had memory footprints that were an order of magnitude smaller than other assemblers, with the exception of BCALM2, which both achieved the smallest memory footprint, by virtue of its novel partitioning strategy to constructing the de Bruijn graph, and completed the assembly in 9 hours, 8 hours of which was spent counting <italic>k</italic>-mers with DSK (<xref ref-type="bibr" rid="c26">Rizk et al. 2013</xref>). In contrast, DISCOVAR <italic>de novo</italic>, which achieves the best sequence contiguity, required 1.8 TB of memory and 8 days to complete.</p>
<fig id="fig2" position="float" orientation="portrait" fig-type="figure"><label>Figure 2:</label>
<caption><p><italic>De novo</italic> assembly results for Genome in a Bottle HG004 human genome short read data with ABySS 1.9.0, ABySS 2.0.0, BCALM2, DISCOVAR, Minia, SOAPdenovo, and SGA. For panels A-C, on the Y axes we show the range of NGA50 to NG50 to indicate uncertainty caused by real genomic variants between individual HG004 and the reference genome (GRCh38). On the X axes, we show the number of breakpoints that occurred when aligning the sequences to the reference genome. Breakpoints are an indicator for the number of miassemblies but are also subject to uncertainty due to genomic variation between HG004 and the reference genome. (A) Contiguity and correctness metrics for contig sequences. For assemblies with scaffolding stages, the contigs were extracted by splitting the sequences at &#x2018;N&#x2019; characters. (B) Contiguity and correctness metrics after scaffolding with mate pair (MPET) reads. The SOAPdenovo result for this plot was excluded as an outlier with an NGA50 (NG50) value of 103 kbp (172 kbp) and 10,610 breakpoints (C) Contiguity and correctness metrics after further scaffolding with BioNano optical mapping data, using BioNano&#x2019;s IrysSolve software. (D) Peak memory usage and wallclock time for the assemblers. These wallclock times do not include the BioNano scaffolding stage, which was approximately 2 hours and did not affect peak RAM usage. The DISCOVAR wallclock time does not include the additional time for scaffolding with LINKS / BESST / ABySS-Scaffold.</p></caption>
<graphic xlink:href="068338_fig2.tif"/>
</fig>
<table-wrap id="tbl4" orientation="portrait" position="float"><label>Table 4:</label>
<caption><p>The peak memory usage and wall clock run time with 64 threads of the assemblies of GIAB HG004.</p></caption>
<graphic xlink:href="068338_tbl4.tif"/>
</table-wrap>
<p>We next compared the assemblies in terms of their contiguity and correctness (<xref rid="fig2" ref-type="fig">Fig. 2A</xref>-C, Tables <xref rid="tbl1" ref-type="table">1</xref>-3). For contiguity assessment we calculated both NG50 and NGA50 using a genome size of 3,088,269,832 bp, whereas for correctness we aligned the contigs to the primary chromosome sequences of the human reference GRCh38 using BWA MEM 0.7.13 and counted the number of resulting break-points using <monospace>abyss-samtobreak -l500 -G3088269832</monospace>. As some assemblers such as BCALM2 and Minia only implement the first (de Bruijn graph) stage of assembly, we included comparisons for both the contig (<xref rid="fig2" ref-type="fig">Fig. 2A</xref>) and scaffold (<xref rid="fig2" ref-type="fig">Fig. 2B</xref>) stages, as applicable. To extract contig sequences from scaffolded assemblies, we split the sequences at occurrences of one or more &#x2018;N&#x2019; characters. From the contig comparison, we observe that DISCOVAR achieves the highest sequence contiguity by a factor of approximately two (DISCOVAR NG50 of 82 kbp vs. ABySS &#x002B; Sealer NG50 of 38 kbp). However, we also note that this result comes at the expense of an order of magnitude more time (8 days) and memory (1.8 TB) than the other assemblers, as shown in <xref rid="fig2" ref-type="fig">Fig. 2D</xref>. The NG50 of the ABySS 1.9.0 (30 kbp) and ABySS 2.0.0 (21 kbp) contigs noticeably exceeds those of BCALM2 (1 kbp) and Minia (5 kbp), primarily due to the additional use of paired-end information in ABySS. Comparing the contig results of the two ABySS assemblies, we note that the ABySS 2.0.0 assembly has slightly lower contiguity than ABySS 1.9.0 (21 kbp vs. 30 kbp). Upon investigation, we have observed that the main cause of this difference is the handling of low coverage regions. Whereas ABySS 1.9.0 retains all <italic>k</italic>-mers in the de Bruijn graph along with their counts, ABySS 2.0.0 discards <italic>k</italic>-mers with counts below a user-specified threshold, as discussed in Methods.</p>
<table-wrap id="tbl1" orientation="portrait" position="float"><label>Table 1:</label>
<caption><p>The scaffold contiguity and number of breakpoints when aligned to GRCh38 using BWA MEM 0.7.13 of the assemblies of GIAB HG004 with BioNano scaffolding.</p></caption>
<graphic xlink:href="068338_tbl1.tif"/>
</table-wrap>
<table-wrap id="tbl2" orientation="portrait" position="float"><label>Table 2:</label>
<caption><p>The scaffold contiguity and number of breakpoints when aligned to GRCh38 using BWA MEM 0.7.13 of the assemblies of GIAB HG004.</p></caption>
<graphic xlink:href="068338_tbl2.tif"/>
</table-wrap>
<table-wrap id="tbl3" orientation="portrait" position="float"><label>Table 3:</label>
<caption><p>The sequence contiguity and number of breakpoints when aligned to GRCh38 using BWA MEM 0.7.13 of the assemblies of GIAB HG004.</p></caption>
<graphic xlink:href="068338_tbl3.tif"/>
</table-wrap>
<p>To further improve the contiguity of the ABySS contigs, we closed gaps in the assembly scaffolds with Sealer (<xref ref-type="bibr" rid="c22">Paulino et al. 2015</xref>). Sealer fills gaps by searching for a connecting path between gap flanks in the de Bruijn graph, and uses multiple <italic>k</italic>-mer sizes to maximize the probability of successfully finding a path. For the ABySS 1.9.0 assembly, Sealer closed 33,380 of 148,795 (22.4&#x0025;) of scaffold gaps and increased the contig NG50 from 30 kbp to 38 kbp. For the ABySS 2.0.0 assembly, Sealer closed 33,533 of 213,480 (15.7&#x0025;) scaffolds and increased the contig NG50 from 21 kbp to 25 kbp.</p>
<p>Comparing the contiguity/correctness of the scaffolded assemblies (<xref rid="fig2" ref-type="fig">Fig. 2B</xref>), we observe that the results of ABySS and DISCOVAR begin to converge, as do the results between the two versions of ABySS compared. As DISCOVAR does not provide its own mate-pair scaffolding algorithm, we augmented its assembly with three third-party scaffolders, ABySS-Scaffold, LINKS (<xref ref-type="bibr" rid="c32">Warren et al. 2015</xref>) and BESST (<xref ref-type="bibr" rid="c28">Sahlin et al. 2016</xref>), to enable a more direct comparison with ABySS. We note that there are significant differences between NG50 and NGA50 metrics in the scaffold plot, particularly in the case of the DISCOVAR &#x002B; BESST assembly (3.9 Mbp vs. 6.9 Mbp). The NG50 is calculated under the assumption that all sequences are correctly assembled, whereas the NGA50 metric penalizes breakpoints when aligning the sequences to the reference genome. While on one hand the NG50 is an overly optimistic metric, on the other hand the NGA50 is an overly pessimistic metric because certain breakpoints may be attributed to real structural variation between the sequenced individual and the reference genome. For this reason, we show contiguity of the assemblies as a range between NGA50 and NG50, with the true unknown value lying somewhere in between.</p>
<p>After scaffolding the assemblies with Illumina mate-pair data, we performed an additional round of scaffolding using the BioNano optical mapping data and BioNano&#x2019;s hybrid scaffolding tool hybridScaffold.pl. BioNano generates an optical map of the genome by fluorescently tagging occurrences of a particular endonuclease motif within long DNA molecules, resulting in a barcode-like pattern for each molecule. To perform the scaffolding, BioNano generates an analogous set of barcode patterns in silico for the sequences of the input assembly, and then aligns the two sets of bar codes. Applying BioNano scaffolding to the mate-pair-scaffolded sequences improves the NG50 and NGA50 contiguity metrics by roughly a factor of five across all assemblies (<xref rid="fig2" ref-type="fig">Fig. 2C</xref>), with NG50 reaching 52 Mbp with DISCOVAR &#x002B; ABySS-Scaffold &#x002B; BioNano. The distance between the NG50 and NGA50 values grows much larger at this stage of scaffolding, which we surmise is caused by a greater likelihood of encountering real sequence variation between the sequenced individual and the reference genome.</p>
<p>Our breakpoints metric of relative correctness between assemblies may be con-founded by smaller real structural variations, especially as the assemblies become more contiguous. To this end, we investigated large-scale misassemblies (&#x003E;10MB) and found only 2 major events within our ABySS 2.0.0 &#x002B; BioNano scaffolds. One of these large scale events between chromosome 1 and 16 was identified in every assembly (Supplementary Fig. S1-S6), which indicates that the event may be real structural variant. The other large scale event is between chromosome 6 and 8 and is interestingly also found in the DISCOVAR &#x002B; BESST &#x002B; BioNano assembly (despite having fewer breakpoints and using an independent methodology), hence the relative correctness of the ABySS2 &#x002B; BioNano assembly is still on par with the other assemblies.</p>
</sec>
<sec id="s2d"><title>Scaffolding with Chromium Data</title>
<p>As the final step of our ABySS 2.0.0 assembly, we used the 10X Genomics Chromium data available for individual HG004 to further scaffold the Bionano assembly. The Chromium sequencing platform augments existing short read technologies by labeling reads that originate from the same long DNA molecule with a shared barcode sequence, also referred to as a read index. This labeling is achieved during library preparation by isolating long DNA molecules into droplets alongside gel beads containing the barcoding oligos. The read indices added by the Chromium protocol provide additional long-range grouping information for the short reads, which can be leveraged for scaffolding and other bioinformatics applications, such as phasing sequence variants.</p>
<p>To scaffold our assembly with the Chromium data, we aligned the Chromium reads to the input BioNano scaffolds with BWA MEM 0.7.13 and recorded the indices of the reads that aligned to each scaffold. As we were only interested in the read indices that joined scaffolds, we reduced noise by masking the interior portions of the input BioNano scaffolds with &#x2018;N&#x2019; characters, preserving only the first/last 30 kbp of sequence in each scaffold, prior to aligning the Chromium reads. Using the information obtained from the read alignments, we constructed a graph representation of the relationships between scaffolds, using nodes to represent scaffolds and edge weights to represent the number of shared read indices between scaffolds. Finally, we supplied this graph as input to the LINKS (<xref ref-type="bibr" rid="c32">Warren et al. 2015</xref>) scaffolding algorithm to identify high-confidence paths within the graph and to output the corresponding scaffolds.</p>
<p>The Chromium scaffolding increased the scaffold NG50 of our ABySS 2.0.0 assembly from 26.9 Mbp to 41.9 Mbp. At this scale of contiguity, the largest scaffolds represent significant fractions of chromosome arms. In <xref rid="fig3" ref-type="fig">Fig. 3</xref>, we show the positions on the chromosomes of the 90 scaffolds larger than 3.2 Mbp that compose 90&#x0025; of the genome. We note that many chromosome arms are reconstructed by 1 to 4 large scaffolds.</p>
<fig id="fig3" position="float" orientation="portrait" fig-type="figure"><label>Figure 3:</label>
<caption><p>Contigs from the 90 scaffolds larger than 3.2 Mbp that compose 90&#x0025; of the genome are aligned to GRCh38 using BWA-MEM 0.7.13. Contigs from the same scaffold are shown in the same shade of blue, and alternating shades of blue are used to distinguish between contigs from different scaffolds. Two translocations, t(1;16) and t(6;8), are shown in orange and pink. The segments of the genome that are not covered by alignments of the largest 90 scaffolds are shown in grey. Gaps in the reference genome, including centromeres and other heterochromatin, are shown in red.</p></caption>
<graphic xlink:href="068338_fig3.tif"/>
</fig>
<fig id="fig4" position="float" orientation="portrait" fig-type="figure"><label>Figure 4:</label>
<caption><p>A Circos (<xref ref-type="bibr" rid="c11">Krzywinski et al. 2009</xref>) Assembly Consistency Plot. Scaftigs from the largest 89 scaffolds that compose 90&#x0025; of the genome are aligned to GRCh38 using BWA-MEM 0.7.13. GRCh38 chromosomes are displayed on the left and the scaffolds on the right. Connections show the aligned regions between the genome and scaffolds. Contigs are included as a part of the same region if the are within 1Mbp of on either side of the connection, and regions shorter than 100Kbp are not shown. The black regions on the chromosomes indicate gaps in the reference and the circles indicate the centromere location on each chromosome.</p></caption>
<graphic xlink:href="068338_fig4.tif"/>
</fig>
</sec>
</sec>
<sec id="s3"><title>Discussion</title>
<p>The idiogram of <xref rid="fig3" ref-type="fig">Fig. 3</xref> demonstrates that correct and highly-contiguous <italic>de novo</italic> assembly of human genomes is possible using current short read sequencing technologies combined with long range scaffolding techniques. While each of the scaffolding data types used here (mate-pair, BioNano, Chromium) are capable of increasing assembly contiguity by orders of magnitude on their own, our results demonstrate that these data are even more powerful when used in combination, also demonstrated by <xref ref-type="bibr" rid="c19">Mostovoy et al. (2016)</xref>. In the human assembly we have described here, each scaffolding step feeds on the success of the previous assembly stages. Longer contig sequences improve the results of mate-pair scaffolding by allowing more mate-pairs to map to the contigs. Longer mate-pair scaffolds improve the BioNano scaffolding by allowing the optical map to align unambiguously to the mate-pair scaffolds; for this reason, BioNano recommends that the input assembly contains sequences of at least 100 kbp. Finally, longer BioNano scaffolds improve the Chromium scaffolding by resolving ambiguities in ordering and orientation of the scaffolds that are difficult to resolve using Chromium data alone.</p>
<p>Another observation that can be made from our assembler comparison is that, in spite of more than a decade of research and development related to de Bruijn graph assemblers, the memory and runtime efficiency of short read assemblers can still be greatly improved. This issue is particularly important for downstream studies that involve large numbers of <italic>de novo</italic> assemblies, such as human population studies, cancer genome studies, and clinical applications. The opportunity for improving the throughput of <italic>de novo</italic> assemblies is evident when comparing novel de Bruijn graph implementations such as Minia and BCALM2 against more mature assembly pipelines such as ABySS 1.9.0 and DISCOVAR (<xref rid="fig2" ref-type="fig">Fig. 2D</xref>). For example, the Minia assembler used only 137 GB RAM and required less than a day to run, whereas the equivalent DISCOVAR assembly used nearly 2 TB RAM and required more than a week to run. While Minia and BCALM2 did not match the results of ABySS and DISCOVAR in terms of assembly contiguity (<xref rid="fig2" ref-type="fig">Fig. 2A</xref>), we posit that this is due to the limited error removal of the implementations and not a fundamental limitation of the algorithms themselves. In the case of Minia, this hypothesis is borne out by the results of ABySS 2.0.0 (<xref rid="fig2" ref-type="fig">Fig. 2C</xref>), which employs a Bloom filter-based assembly approach similar to Minia, but achieves contiguity results that are on par with DISCOVAR and ABySS 1.9.0.</p>
<p>The assembly of long reads has yielded highly contiguous genome assemblies of human (<xref ref-type="bibr" rid="c23">Pendleton et al. 2015</xref>; <xref ref-type="bibr" rid="c6">Chin et al. 2016</xref>) and other organisms with sequence contiguity in the megabase range. Long read sequencing comes however at a cost premium. For applications that are cost sensitive, such as sequencing for diagnostic medicine, algorithms that exploit high-throughput short-read sequencing are valuable. We show that megabase scaffolds are achievable using short-read sequencing with one paired-end and one mate-pair library, and scaf-folds approaching the size of entire chromosome arms are possible with additional BioNano scaffolding. A remaining challenge is to improve the sequence contiguity of assemblies of short reads sequencing, which remain in the range of tens of kilobases, significantly shorter than the megabases achieved with the assembly of long read sequencing.</p>
</sec>
<sec id="s4"><title>Methods</title>
<sec id="s4a"><title>Bloom filter de Bruijn Graph Assembly</title>
<p>The first stage of the ABySS 2.0.0 assembly pipeline is a de Bruijn graph assembler that uses a compact, Bloom filter-based representation of the graph. The use of Bloom filters for <italic>de novo</italic> assembly was first demonstrated in Minia (<xref ref-type="bibr" rid="c5">Chikhi and Rizk 2013</xref>), and ABySS 2.0.0 builds on many aspects of that approach. The parts of our assembly algorithm that are novel with respect to Minia are: (i) the use of perfect reads to seed contig traversals, (ii) the use of look-ahead for error correction and elimination of Bloom filter false positives rather than a separate data structure, and (iii) the use of a new hashing algorithm, ntHash (<xref ref-type="bibr" rid="c16">Mohamadi et al. 2016</xref>), designed for processing DNA/RNA sequences efficiently. We describe these aspects of the algorithm in the course of our overall description below.</p>
<p>In the first step of the assembly, we load <italic>k</italic>-mers from the sequencing reads into a Bloom filter. These <italic>k</italic>-mers represent the set of nodes in a de Bruijn graph, even though we do not explicitly store the edges connecting the nodes. Instead, we discover edges at runtime by querying the Bloom filter for all four possible predecessors/successors of the current <italic>k</italic>-mer during the course of a graph traversal. Each possible successor (predecessor) corresponds to a single-base extension of the current <italic>k</italic>-mer to the right (left) by &#x201C;A&#x201D;, &#x201C;C&#x201D;, &#x201C;G&#x201D;, or &#x201C;T&#x201D;. To eliminate the majority of <italic>k</italic>-mers resulting from sequencing errors, we discard all <italic>k</italic>-mers with an occurrence count that is less than a user-specified threshold. We utilize a cascading Bloom filter to implement the filtering by <italic>k</italic>-mer count, as described in our previous work on Konnector (<xref ref-type="bibr" rid="c31">Vandervalk et al. 2014</xref>). Briefly, a cascading Bloom filter is a chained array of Bloom filters where each Bloom filter stores <italic>k</italic>-mers with a count that is one higher than the preceding Bloom filter. The procedure for inserting a <italic>k</italic>-mer into a cascading Bloom filter is to check for the presence of the <italic>k</italic>-mer in each Bloom filter in succession and to add the <italic>k</italic>-mer to the first Bloom filter where it is not already present. After all <italic>k</italic>-mers from the reads have been inserted, the last Bloom filter in the chain is then kept as the set of solid <italic>k</italic>-mers and the preceding Bloom filters are discarded.</p>
<p>In the second step of the assembly, we generate the unitig sequences by extending perfect reads left and right within the Bloom filter de Bruijn graph, where a read is considered to be perfect if it consists entirely of solid <italic>k</italic>-mers. The extension of the sequence continues left and right within the graph until either a dead end or a branching point is encountered. One complication of this approach is that Bloom filter false positives and recurrent sequencing errors will create branches in the graph that cause the sequence extension to end prematurely. To address this issue, we invoke an additional look-ahead step at each branching point, up to a distance of <italic>k</italic> nodes (<xref rid="fig5" ref-type="fig">Fig. 5</xref>). If the look-ahead step reveals that a branch is less than or equal to <italic>k</italic> nodes, it is considered to be a false branch and its existence is ignored. If, on the other hand, the branch point has two or more branches that are longer than <italic>k</italic> nodes then the extension is halted. The use of look-ahead incurs an additional computational cost to the graph traversal, but obviates the requirement for additional data structures to track false positives and error <italic>k</italic>-mers.</p>
<fig id="fig5" position="float" orientation="portrait" fig-type="figure"><label>Figure 5:</label>
<caption><p>Extension of reads during Bloom filter de Bruijn graph assembly. A &#x201C;perfect&#x201D; read consisting only of solid <italic>k</italic>-mers is extended left and right within the de Bruijn graph until a branching point or dead-end is encountered. A look-ahead algorithm is employed to detect and ignore short branches due to Bloom filter false positives and/or recurrent read errors.</p></caption>
<graphic xlink:href="068338_fig5.tif"/>
</fig>
<p>In the above steps, we use ntHash algorithm while working with the Bloom filter data structure. ntHash is an efficient hash method that computes the hash values for all consecutive <italic>k</italic>-mers in a DNA sequence recursively, in which the hash value for a <italic>k</italic>-mer is derived from the hash value of the previous <italic>k</italic>-mer. It is an adapted version of cyclic polynomial hashing to compute normal or canonical hash values for <italic>k</italic>-mers in DNA sequences efficiently. Further, ntHash provides a fast way to compute multiple hash values for a given <italic>k</italic>-mer, without repeating the whole hashing procedure for each value by few more operations. This is very useful for certain bioinformatics applications such as ABySS 2.0.0 that employs the Bloom filter data structure.</p>
</sec>
<sec id="s4b"><title>Effect of Bloom Filter False Positive Rate</title>
<p>To assess the effects of the Bloom filter false positive rate on ABySS 2.0.0 assemblies, we ran multiple assemblies of the <italic>C. elegans</italic> N2 strain DRR008444 dataset (Illumina GA IIx sequencing of 2 &#x00D7; 100 bp reads of 300 bp fragments to 75 fold coverage) while varying the Bloom filter size from 250M to 3G with a step size of 250M. For example, the ABySS 2.0.0 assembly for a Bloom filter size of 250M was run with the command <monospace>abyss-pe c &#x003D; 4 k &#x003D; 64 H &#x003D; 1 B &#x003D; 250M in &#x003D; 1 DRR008444_1.fastq DRR008444_2.fastq&#x2032;</monospace>, where <monospace>c&#x003D;4</monospace> specifies a minimum <italic>k</italic>-mer count threshold of 4, k &#x003D; 64 specifies a <italic>k</italic>-mer size of 64, <monospace>H&#x003D;1</monospace> specifies that the Bloom filter should use a single hash function. The runs for other Bloom filter sizes used the same parameter values with the exception of B (Bloom filter size).</p>
<p>For each assembly, we measured the wallclock time, peak memory usage, NG50, and number of misassemblies (<xref rid="fig1" ref-type="fig">Fig. 1</xref>). Wallclock time was measured with <monospace>/usr/bin/time</monospace>, while peak memory usage was determined by running the command <monospace>ps -eo pid,rss,vsz,cmd --width 100 --sort -vsz &#x007C; awk &#x2032;NR&#x003D;&#x003D;2&#x2032;</monospace> in the background every 10 seconds to sample the top virtual-memory-consuming process. We used QUAST 3.2 (<xref ref-type="bibr" rid="c9">Gurevich et al. 2013</xref>) to calculate the NG50 length and number of major misassemblies, using the <italic>C. elegans</italic> Bristol N2 strain as the reference genome (NCBI BioProject PRJNA158). The false positive rates corresponding to each Bloom filter size were obtained from the ABySS log files. All assemblies were run with 12 threads on an isolated machine with 48GB RAM and two Xeon X5650 CPUs.</p>
</sec>
<sec id="s4c"><title>Assembler Comparison</title>
<sec id="s4c1"><title>Experimental Sequencing Data</title>
<p>The Genome in a Bottle (GIAB) project (<xref ref-type="bibr" rid="c36">Zook et al. 2016</xref>) sequenced seven individuals using a large variety of sequencing technologies. We downloaded the Illumina WGS 2 &#x00D7; 250 bp paired-end sequencing data and the Illumina 6 kbp mate-pair sequencing data of the Ashkenazi mother (HG004).</p>
<p>We removed adapters from the mate-pair reads using NxTrim 0.4.0 (<xref ref-type="bibr" rid="c21">O&#x2019;Connell et al. 2014</xref>) with parameters <monospace>--norc --joinreads --preserve-mp</monospace>, which also classifies the reads as mate-pair, paired-end, single-end or unknown. We discarded the reads classified as either paired-end or single-end, and used the reads classified as mate-pair and unknown for scaffolding, which are comprised primarily of mate-pair reads originating from large fragments.</p>
<p>We corrected sequencing errors in the reads using the tool BFC (<xref ref-type="bibr" rid="c14">Li 2015</xref>) with the parameter <monospace>-s3G</monospace>. We constructed the hash table of trusted <italic>k</italic>-mers using the paired-end reads and used this hash table to correct both the paired-end and mate-pair reads.</p>
</sec>
<sec id="s4c2"><title>Human Assemblies</title>
<p>We assembled the GIAB HG004 data set using ABySS 1.9.0 (<xref ref-type="bibr" rid="c30">Simpson et al. 2009</xref>), ABySS 2.0.0, ALLPATHS-LG 52488 (<xref ref-type="bibr" rid="c8">Gnerre et al. 2010</xref>), BCALM 2.0.0 (<xref ref-type="bibr" rid="c4">Chikhi et al. 2016</xref>), DISCOVARdenovo 52488 (<xref ref-type="bibr" rid="c33">Weisenfeld et al. 2014</xref>), MaSuRCA</p>
<p>3.1.3 (<xref ref-type="bibr" rid="c35">Zimin et al. 2013</xref>), Minia 3.0 beta (<xref ref-type="bibr" rid="c5">Chikhi and Rizk 2013</xref>), SGA 0.10.14 (<xref ref-type="bibr" rid="c29">Simpson and Durbin 2011</xref>), SOAPdenovo 2.0.4 (<xref ref-type="bibr" rid="c15">Luo et al. 2012</xref>). We assembled with each tool the paired-end reads corrected by BFC. The mate-pair reads categorized by NxTrim and corrected by BFC and were used for scaffolding when applicable for that assembler. We scaffolded the DISCOVARdenovo assembly using both BESST 2.2.4 (<xref ref-type="bibr" rid="c28">Sahlin et al. 2016</xref>) and LINKS 1.6.1 (<xref ref-type="bibr" rid="c32">Warren et al. 2015</xref>).</p>
<p>Most software used in these analyses was installed from the Homebrew-Science software collection using Linuxbrew (<xref ref-type="bibr" rid="c10">Jackman and Birol 2016</xref>) with the command <monospace>brew install abyss allpaths-lg bcalm bfc bwa discovardenovo masurca nxtrim samtools seqtk sga soapdenovo</monospace>. The development version of ABySS-2.0.0 used in the comparison was compiled from the <monospace>bloom-abyss-preview</monospace> tag: <ext-link ext-link-type="uri" xlink:href="https://github.com/bcgsc/abyss/tree/">https://github.com/bcgsc/abyss/tree/</ext-link> bloom-abyss-preview. Minia 3.0 beta and LINKS 1.6.1 were installed manually, as the versions currently available in Linuxbrew are 2.0.3 and 1.5.1 respectively. The Python package <monospace>besst</monospace> was installed using <monospace>pip install besst</monospace>. The script used to assemble and analyze the data is a Makefile script available online at <ext-link ext-link-type="uri" xlink:href="https://github.com/sjackman/giab/blob/1.0/Makefile">https://github.com/sjackman/giab/blob/1.0/Makefile</ext-link>.</p>
<p>We assembled the paired-end and mate-pair reads using ABySS 1.9.0 (<xref ref-type="bibr" rid="c30">Simpson et al. 2009</xref>) with the command <monospace>abyss-pe name&#x003D;hsapiens np&#x003D;64 k&#x003D;144 q&#x003D;15 v&#x003D;-v l&#x003D;40 s&#x003D;1000 n&#x003D;10 S&#x003D;1000-10000 N&#x003D;15 mp6k_de&#x003D;--mean mp6k_n&#x003D;1 lib&#x003D;pe400 pe400&#x003D;&#x0024;(&#x003C;pe400.in)</monospace> mp&#x003D;mp6k mp6k&#x003D;&#x0024;(mp6k &#x002B; unknown.in) where the files pe400.in and mp6k &#x002B; unknown. in are lists of the locations of compressed FASTQ files.</p>
<p>We assembled the paired-end and mate-pair reads using ABySS 2.0.0 with the command abyss-pe name&#x003D;hsapiens np&#x003D;64 k&#x003D;144 q&#x003D;15 v&#x003D;-v l&#x003D;40 s&#x003D;1000 n&#x003D;10 S&#x003D;1000-10000 N&#x003D;15 B&#x003D;26G H&#x003D;4 c&#x003D;3 mp6k_de&#x003D;--mean mp6k_n&#x003D;1 lib&#x003D;pe400 pe400&#x003D;&#x0024;(&#x003C;pe400.in) mp&#x003D;mp6k mp6k&#x003D;&#x0024;(mp6k &#x002B; unknown.in). The parameters for ABySS-2.0.0 were identical to those for ABySS-1.9.0, with the exception of the Bloom filter specific parameters <monospace>B&#x003D;26G H&#x003D;4 c&#x003D;3</monospace>, which specify the total memory allocated to the Bloom filters, the number of Bloom filter hash functions, and the number of cascading Bloom filter levels, respectively. We determined the values for total memory size (B) and number of hash functions (H) by counting distinct 144-mers with KMC2 (<xref ref-type="bibr" rid="c7">Deorowicz et al. 2015</xref>) and targeting a false positive rate of 5&#x0025; for the first level of the cascading Bloom filter. We deemed 5&#x0025; to be a suitable upper bound for Bloom filter FPR based on the results of our <italic>C. elegans</italic> experiment above, which indicated good performance in the range of 5-12&#x0025; FPR. We determined the optimal number of cascading Bloom filter levels by running assemblies with <monospace>c&#x003D;2, c&#x003D;3</monospace>, and <monospace>c&#x003D;4</monospace>, and choosing the assembly with highest NG50 and lowest number of breakpoints.</p>
<p>We assembled the paired-end and mate-pair reads using ALLPATHS-LG 52488 (<xref ref-type="bibr" rid="c8">Gnerre et al. 2010</xref>) with the command <monospace>PrepareAllPathsInputs.pl DATA_DIR&#x003D;&#x0024;&#x007B;PWD&#x007D; PLOIDY&#x003D;2 HOSTS&#x003D;32; RunAllPathsLG PRE&#x003D;. REFERENCE_NAME&#x003D;. DATA_SUBDIR&#x003D;. RUN&#x003D;allpaths SUBDIR&#x003D;run</monospace> and the configuration files in_libs.csv and in_groups.csv shown in supplementary material and online at <ext-link ext-link-type="uri" xlink:href="https://github.com/sjackman/giab/tree/1.0/allpaths-lg">https://github.com/sjackman/giab/tree/1.0/allpaths-lg</ext-link>.</p>
<p>We assembled the paired-end reads using BCALM 2.0.0 (<xref ref-type="bibr" rid="c4">Chikhi et al. 2016</xref>) with the commands <monospace>bcalm -in pe400.in -out hsapiens-unitigs -k 63-abundance 5 -nb-cores 64; bglue -in hsapiens-unitigs.h5 -out hsapiens-unitigs -k 63</monospace>. The largest value of <italic>k</italic> supported by BCALM 2.0.0 is 63.</p>
<p>We assembled the paired-end reads using DISCOVARdenovo 52488 (Weisen-feld et al. 2014) with the command <monospace>DiscovarDeNovo MAX_MEM_GB&#x003D;2500 READS&#x003D;@pe600.in OUT_DIR&#x003D;./hsapiens</monospace> and scaffolded this assembly using three standalone scaffolding tools: ABySS-Scaffold 1.9.0 with the command abyss-pe <monospace>name&#x003D;hsapiens mp&#x003D;mp6k j&#x003D;64 k&#x003D;200 l&#x003D;40 s&#x003D;500 S&#x003D;500-5000 N&#x003D;15 mp6k_de&#x003D;--mean mp6k_n&#x003D;1 mp6k&#x003D;&#x0024;(mp6k &#x002B; unknown.in)</monospace> scaffolds, BESST 2.2.4 (<xref ref-type="bibr" rid="c28">Sahlin et al. 2016</xref>) with the command <monospace>runBESST --orientation rf -c hsapiens-scaffolds.fa -f mp6k.bam -o .</monospace>, and LINKS 1.6.1 (<xref ref-type="bibr" rid="c32">Warren et al. 2015</xref>) with the command <bold><italic>todo</italic></bold> @rwarren.</p>
<p>We assembled the paired-end and mate-pair reads using MaSuRCA 3.1.3 (<xref ref-type="bibr" rid="c35">Zimin et al. 2013</xref>) with the command <monospace>./masurca config.txt; ./assemble.sh</monospace> and the configuration file <monospace>config.txt</monospace> shown in supplementary material and online at <ext-link ext-link-type="uri" xlink:href="https://github.com/sjackman/giab/blob/1.0/masurca/config.txt">https://github.com/sjackman/giab/blob/1.0/masurca/config.txt</ext-link>. The script <monospace>assemble.sh</monospace> is generated by <monospace>masurca</monospace> itself.</p>
<p>We assembled the paired-end reads using Minia 3.0 beta (<xref ref-type="bibr" rid="c5">Chikhi and Rizk 2013</xref>) with the command <monospace>minia -in pe400.in -abundance-min &#x201C;auto&#x201D;-kmer-size 128 -nb-cores 64</monospace>. The largest value of <italic>k</italic> supported by this pre-release version was 128.</p>
<p>We assembled the paired-end reads using SGA 0.10.14 (<xref ref-type="bibr" rid="c29">Simpson and Durbin 2011</xref>) with the commands <monospace>sga preprocess --pe-mode&#x003D;2 hsapiens.fa.gz &#x003E; hsapiens.preprocess.fa; sga index -t 64 -a ropebwt hsapiens.preprocess.fa; sga filter -t 64 hsapiens.preprocess.fa; sga overlap -t 64 hsapiens.preprocess.filter.pass. -m 125; sga assemble -o hsapiens hsapiens.preprocess.filter.pass.asqg.gz</monospace>.</p>
<p>We assembled the paired-end and mate-pair reads using SOAPdenovo 2.0.4 (<xref ref-type="bibr" rid="c15">Luo et al. 2012</xref>) with the command <monospace>SOAPdenovo-127mer all -K 95 -R &#x2013;p 63 -s hsapiens.config</monospace> and the configuration file <monospace>hsapiens.config</monospace> shown in supplementary material and online at <ext-link ext-link-type="uri" xlink:href="https://github.com/sjackman/giab/blob/">https://github.com/sjackman/giab/blob/</ext-link> 1.0/soapdenovo/hsapiens.config.</p>
<p>We used the BioNano optical map to scaffold the ABySS 1.9.0, ABySS 2.0.0 and DISCOVARdenovo 52488 assemblies, scaffolded with ABySS-Scaffold, BESST and LINKS, using IrysSolve 2.1.5063 with the command line <monospace>hybridScaffold.pl -n hsapiens-scaffolds.fa -b EXP_REFINEFINAL1_q.cmap -c hybridScaffold_config_aggressive.xml -B2 -N2 -o bionano -x -y -m all.bnx -q optArguments_human.xml -e AJmother_autoNoise1.err</monospace> according to the document &#x201C;Theory Of Operation: Hybrid Scaffolding&#x201D; available online at <ext-link ext-link-type="uri" xlink:href="http://bionanogenomics.com/wp-content/">http://bionanogenomics.com/wp-content/</ext-link> uploads/2016/04/30073-Rev-A-Hybrid-Scaffolding-Theory-of-Operations.pdf. The configuration files are used unmodified as distributed by BioNano Genomics and available online at <ext-link ext-link-type="uri" xlink:href="https://github.com/sjackman/giab/tree/1.0/bionano">https://github.com/sjackman/giab/tree/1.0/bionano</ext-link>.</p>
<p>We used 10x Genomics Chromium data to scaffold the ABySS 2.0.0 &#x002B; BioNano scaffolds with ARCS (unpublished) and LINKS (<xref ref-type="bibr" rid="c32">Warren et al. 2015</xref>). The version of ARCS used in the paper is available from: https:</p>
<p>//github.com/bcgsc/arcs/tree/arcs-prerelease. First we aligned the Chromium reads to the ABySS 2.0.0 &#x002B; BioNano scaffolds using bwa mem with default settings. Next we ran ARCS with the command <monospace>arcs -f hsapiens-scaffolds.fa -a human-alignments.fof -s 98 -g 50000 -c 5 -l 5 -m 50-1000 -d 0 -e 30000 -i 16 -v 1</monospace> where <monospace>hsapiens-scaffolds.fa</monospace> contained the sequences to further scaffold and <monospace>human-alignments.fof</monospace> was a file of alignment file filenames. Lastly we ran the commands <monospace>python makeTSVfile.py hsapiens-scaffolds.fa.scaff_s98_c5_original.gv human_c5.tigpair_checkpoint.tsv hsapiens-scaffolds.fa; LINKS -f hsapiens-scaffolds.fa -s empty.fof -b human_c5 -l 5 -a 0.3</monospace> to order and orient the scaffolds. The script <monospace>makeTSVfile.py</monospace> can be found at <ext-link ext-link-type="uri" xlink:href="https://github.com/sarahyeo/giab">https://github.com/sarahyeo/giab</ext-link>.</p>
</sec>
</sec>
</sec>
<sec id="s5"><title>Data Access</title>
<p>The accession number of the Ashkenazi mother is NIST HG004 NA24143 SRS823307.</p>
<p>The Illumina WGS 2 &#x00D7; 250 bp paired-end sequencing data may be downloaded from <ext-link ext-link-type="uri" xlink:href="https://github.com/genome-in-a-bottle/giab_data_indexes/blob/master/">https://github.com/genome-in-a-bottle/giab_data_indexes/blob/master/</ext-link> AshkenazimTrio/sequence.index.AJtrio_Illumina_2 &#x00D7; 250bps_06012016. The 35 experiment accession numbers are SRX1726894 through SRX1726928, and the 35 sequencing run accession numbers are SRR3440461 through SRR3440495.</p>
<p>The Illumina 6 kbp mate-pair sequencing data may be downloaded from <ext-link ext-link-type="uri" xlink:href="https://github.com/genome-in-a-bottle/giab_data_indexes/blob/master/">https://github.com/genome-in-a-bottle/giab_data_indexes/blob/master/</ext-link> AshkenazimTrio/sequence.index.AJtrio_Illumina_6kb_matepair_wgs_ 08032015. The two experiment accession numbers are SRX1388736 and SRX1388737, and the two sequencing run accession numbers are SRR2832452 and SRR2832453.</p>
<p>The BioNano optical map <monospace>EXP_REFINEFINAL1_q.cmap</monospace> may be downloaded from <ext-link ext-link-type="uri" xlink:href="https://github.com/genome-in-a-bottle/giab_data_indexes/blob/master/">https://github.com/genome-in-a-bottle/giab_data_indexes/blob/master/</ext-link></p>
<p>AshkenazimTrio/alignment.index.AJtrio_BioNano_xmap_cmap_GRC37_ 10012015.</p>
<p>The 10x Genomics Chromium data may be downloaded from <ext-link ext-link-type="uri" xlink:href="https://github">https://github</ext-link>. com/genome-in-a-bottle/giab_data_indexes/blob/master/AshkenazimTrio/ alignment.index.AJtrio_10Xgenomics_ChromiumGenome_GRCh37_ GRCh38_06202016.</p>
</sec>
</body>
<back>
<ack><title>Acknowledgements</title>
<p>The research presented here was funded by the National Human Genome Research Institute of the National Institutes of Health (under award number R01HG007182), with additional support provided by Intel, Genome Canada, Genome British Columbia, and the British Columbia Cancer Foundation. The content is solely the responsibility of the authors and does not necessarily represent the official views of the National Institutes of Health or other funding organizations. We would also like to thank Martin Krzywinski for his help with the data visualization in the idiogram and Circos figures.</p></ack>
<sec>
<title>Disclosure Declaration</title>
<p>The authors declare that they have no conflicts of interest with respect to this work.</p>
</sec>
<ref-list><title>References</title>
<ref id="c1"><mixed-citation publication-type="journal"><string-name><surname>Bloom</surname> <given-names>BH</given-names></string-name>. <year>1970</year>. <article-title>Space/time trade-offs in hash coding with allowable errors</article-title>. <source>Communications of the ACM</source> <volume>13</volume>: <fpage>422</fpage>&#x2013;<lpage>426</lpage>.</mixed-citation></ref>
<ref id="c2"><mixed-citation publication-type="website"><string-name><surname>Chaisson</surname> <given-names>MJP</given-names></string-name>, <string-name><surname>Huddleston</surname> <given-names>J</given-names></string-name>, <string-name><surname>Dennis</surname> <given-names>MY</given-names></string-name>, <string-name><surname>Sudmant</surname> <given-names>PH</given-names></string-name>, <string-name><surname>Malig</surname> <given-names>M</given-names></string-name>, <string-name><surname>Hormozdiari</surname> <given-names>F</given-names></string-name>, <string-name><surname>Antonacci</surname> <given-names>F</given-names></string-name>, <string-name><surname>Surti</surname> <given-names>U</given-names></string-name>, <string-name><surname>Sandstrom</surname> <given-names>R</given-names></string-name>, <string-name><surname>Boitano</surname> <given-names>M</given-names></string-name>, <etal>et al.</etal> <year>2014</year>. <article-title>Resolving the complexity of the human genome using single-molecule sequencing</article-title>. <source>Nature</source> <volume>517</volume>: <fpage>608</fpage>&#x2013;<lpage>611</lpage>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1038/nature13907">http://dx.doi.org/10.1038/nature13907</ext-link>.</mixed-citation></ref>
<ref id="c3"><mixed-citation publication-type="website"><string-name><surname>Chikhi</surname> <given-names>R</given-names></string-name>, <string-name><surname>Limasset</surname> <given-names>A</given-names></string-name>, <string-name><surname>Jackman</surname> <given-names>S</given-names></string-name>, <string-name><surname>Simpson</surname> <given-names>JT</given-names></string-name>, <string-name><surname>Medvedev</surname> <given-names>P</given-names></string-name>. <year>2014</year>. <article-title>On the representation of de bruijn graphs</article-title>. <source>Research in Computational Molecular Biology</source> <fpage>35</fpage>&#x2013;<lpage>55</lpage>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1007/978-3-319-05269-4_4">http://dx.doi.org/10.1007/978-3-319-05269-4_4</ext-link>.</mixed-citation></ref>
<ref id="c4"><mixed-citation publication-type="website"><string-name><surname>Chikhi</surname> <given-names>R</given-names></string-name>, <string-name><surname>Limasset</surname> <given-names>A</given-names></string-name>, <string-name><surname>Medvedev</surname> <given-names>P</given-names></string-name>. <year>2016</year>. <article-title>Compacting de bruijn graphs from sequencing data quickly and in low memory</article-title>. <source>Bioinformatics</source> <volume>32</volume>: <fpage>i201</fpage>&#x2013;<lpage>i208</lpage>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1093/bioinformatics/btw279">http://dx.doi.org/10.1093/bioinformatics/btw279</ext-link>.</mixed-citation></ref>
<ref id="c5"><mixed-citation publication-type="journal"><string-name><surname>Chikhi</surname> <given-names>R</given-names></string-name>, <string-name><surname>Rizk</surname> <given-names>G</given-names></string-name>. <year>2013</year>. <article-title>Space-efficient and exact de bruijn graph representation based on a bloom filter</article-title>. <source>Algorithms for Molecular Biology</source> <volume>8</volume>: <fpage>1</fpage>.</mixed-citation></ref>
<ref id="c6"><mixed-citation publication-type="website"><string-name><surname>Chin</surname> <given-names>C-S</given-names></string-name>, <string-name><surname>Peluso</surname> <given-names>P</given-names></string-name>, <string-name><surname>Sedlazeck</surname> <given-names>FJ</given-names></string-name>, <string-name><surname>Nattestad</surname> <given-names>M</given-names></string-name>, <string-name><surname>Concepcion</surname> <given-names>GT</given-names></string-name>, <string-name><surname>Clum</surname> <given-names>A</given-names></string-name>, <string-name><surname>Dunn</surname> <given-names>C</given-names></string-name>, <string-name><surname>O&#x2019;Malley</surname> <given-names>R</given-names></string-name>, <string-name><surname>Figueroa-Balderas</surname> <given-names>R</given-names></string-name>, <string-name><surname>Morales-Cruz</surname> <given-names>A</given-names></string-name>, <etal>et al.</etal> <year>2016</year>. <article-title>Phased diploid genome assembly with single molecule real-time sequencing</article-title>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1101/056887">http://dx.doi.org/10.1101/056887</ext-link>.</mixed-citation></ref>
<ref id="c7"><mixed-citation publication-type="journal"><string-name><surname>Deorowicz</surname> <given-names>S</given-names></string-name>, <string-name><surname>Kokot</surname> <given-names>M</given-names></string-name>, <string-name><surname>Grabowski</surname> <given-names>S</given-names></string-name>, <string-name><surname>Debudaj-Grabysz</surname> <given-names>A</given-names></string-name>. <year>2015</year>. <article-title>KMC 2: Fast and resource-frugal k-mer counting</article-title>. <source>Bioinformatics</source> <volume>31</volume>: <fpage>1569</fpage>&#x2013;<lpage>1576</lpage>.</mixed-citation></ref>
<ref id="c8"><mixed-citation publication-type="website"><string-name><surname>Gnerre</surname> <given-names>S</given-names></string-name>, <string-name><surname>MacCallum</surname> <given-names>I</given-names></string-name>, <string-name><surname>Przybylski</surname> <given-names>D</given-names></string-name>, <string-name><surname>Ribeiro</surname> <given-names>FJ</given-names></string-name>, <string-name><surname>Burton</surname> <given-names>JN</given-names></string-name>, <string-name><surname>Walker</surname> <given-names>BJ</given-names></string-name>, <string-name><surname>Sharpe</surname> <given-names>T</given-names></string-name>, <string-name><surname>Hall</surname> <given-names>G</given-names></string-name>, <string-name><surname>Shea</surname> <given-names>TP</given-names></string-name>, <string-name><surname>Sykes</surname> <given-names>S</given-names></string-name>, <etal>et al.</etal> <year>2010</year>. <article-title>High-quality draft assemblies of mammalian genomes from massively parallel sequence data</article-title>. <source>Proceedings of the National Academy of Sciences</source> <volume>108</volume>: <fpage>1513</fpage>&#x2013;<lpage>1518</lpage>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1073/pnas.1017351108">http://dx.doi.org/10.1073/pnas.1017351108</ext-link>.</mixed-citation></ref>
<ref id="c9"><mixed-citation publication-type="website"><string-name><surname>Gurevich</surname> <given-names>A</given-names></string-name>, <string-name><surname>Saveliev</surname> <given-names>V</given-names></string-name>, <string-name><surname>Vyahhi</surname> <given-names>N</given-names></string-name>, <string-name><surname>Tesler</surname> <given-names>G</given-names></string-name>. <year>2013</year>. <article-title>QUAST: Quality assessment tool for genome assemblies</article-title>. <source>Bioinformatics</source> <volume>29</volume>: <fpage>1072</fpage>&#x2013;<lpage>1075</lpage>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1093/bioinformatics/btt086">http://dx.doi.org/10.1093/bioinformatics/btt086</ext-link>.</mixed-citation></ref>
<ref id="c10"><mixed-citation publication-type="website"><string-name><surname>Jackman</surname> <given-names>SD</given-names></string-name>, <string-name><surname>Birol</surname> <given-names>I</given-names></string-name>. <year>2016</year>. <article-title>Linuxbrew and homebrew for cross-platform package management [v1; not peer reviewed]</article-title>. F1000 Research 5(ISCB Comm J): 1795 (poster). <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.7490/f1000research.1112681.1">http://dx.doi.org/10.7490/f1000research.1112681.1</ext-link>.</mixed-citation></ref>
<ref id="c11"><mixed-citation publication-type="journal"><string-name><surname>Krzywinski</surname> <given-names>M</given-names></string-name>, <string-name><surname>Schein</surname> <given-names>J</given-names></string-name>, <string-name><surname>Birol</surname> <given-names>I</given-names></string-name>, <string-name><surname>Connors</surname> <given-names>J</given-names></string-name>, <string-name><surname>Gascoyne</surname> <given-names>R</given-names></string-name>, <string-name><surname>Horsman</surname> <given-names>D</given-names></string-name>, <string-name><surname>Jones</surname> <given-names>SJ</given-names></string-name>, <string-name><surname>Marra</surname> <given-names>MA</given-names></string-name>. <year>2009</year>. <article-title>Circos: An information aesthetic for comparative genomics</article-title>. <source>Genome research</source> <volume>19</volume>: <fpage>1639</fpage>&#x2013;<lpage>1645</lpage>.</mixed-citation></ref>
<ref id="c12"><mixed-citation publication-type="journal"><string-name><surname>Lander</surname> <given-names>ES</given-names></string-name>, <string-name><surname>Linton</surname> <given-names>LM</given-names></string-name>, <string-name><surname>Birren</surname> <given-names>B</given-names></string-name>, <string-name><surname>Nusbaum</surname> <given-names>C</given-names></string-name>, <string-name><surname>Zody</surname> <given-names>MC</given-names></string-name>, <string-name><surname>Baldwin</surname> <given-names>J</given-names></string-name>, <string-name><surname>Devon</surname> <given-names>K</given-names></string-name>, <string-name><surname>Dewar</surname> <given-names>K</given-names></string-name>, <string-name><surname>Doyle</surname> <given-names>M</given-names></string-name>, <string-name><surname>FitzHugh</surname> <given-names>W</given-names></string-name>, <etal>et al.</etal> <year>2001</year>. <article-title>Initial sequencing and analysis of the human genome</article-title>. <source>Nature</source> <volume>409</volume>: <fpage>860</fpage>&#x2013;<lpage>921</lpage>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1038/35057062">http://dx.doi.org/10.1038/35057062</ext-link>.</mixed-citation></ref>
<ref id="c13"><mixed-citation publication-type="journal"><string-name><surname>Ley</surname> <given-names>T</given-names></string-name>, <string-name><surname>Miller</surname> <given-names>C</given-names></string-name>, <string-name><surname>Ding</surname> <given-names>L</given-names></string-name>, <string-name><surname>Raphael</surname> <given-names>B</given-names></string-name>, <string-name><surname>Mungall</surname> <given-names>A</given-names></string-name>, <string-name><surname>Robertson</surname> <given-names>A</given-names></string-name>, <string-name><surname>Hoadley</surname> <given-names>K</given-names></string-name>, <string-name><surname>Triche</surname> <given-names>TJ</given-names></string-name>, <string-name><surname>Laird</surname> <given-names>P</given-names></string-name>, <string-name><surname>Baty</surname> <given-names>J</given-names></string-name>, <etal>et al.</etal> <year>2013</year>. <article-title>Genomic and epigenomic landscapes of adult de novo acute myeloid leukemia</article-title>. <source>N Engl J Med</source> <volume>368</volume>: <fpage>2059</fpage>&#x2013;<lpage>2074</lpage>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1056/NEJMoa1301689">http://dx.doi.org/10.1056/NEJMoa1301689</ext-link>.</mixed-citation></ref>
<ref id="c14"><mixed-citation publication-type="journal"><string-name><surname>Li</surname> <given-names>H</given-names></string-name>. <year>2015</year>. <article-title>BFC: Correcting illumina sequencing errors</article-title>. <source>Bioinformatics</source> <volume>32</volume>: <fpage>2885</fpage>&#x2013;<lpage>2887</lpage>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1093/bioinformatics/btv290">http://dx.doi.org/10.1093/bioinformatics/btv290</ext-link>.</mixed-citation></ref>
<ref id="c15"><mixed-citation publication-type="journal"><string-name><surname>Luo</surname> <given-names>R</given-names></string-name>, <string-name><surname>Liu</surname> <given-names>B</given-names></string-name>, <string-name><surname>Xie</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Li</surname> <given-names>Z</given-names></string-name>, <string-name><surname>Huang</surname> <given-names>W</given-names></string-name>, <string-name><surname>Yuan</surname> <given-names>J</given-names></string-name>, <string-name><surname>He</surname> <given-names>G</given-names></string-name>, <string-name><surname>Chen</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Pan</surname> <given-names>Q</given-names></string-name>, <string-name><surname>Liu</surname> <given-names>Y</given-names></string-name>, <etal>et al.</etal> <year>2012</year>. <article-title>SOAPdenovo2: An empirically improved memory-efficient short-read de novo assembler</article-title>. <source>GigaSci</source> <volume>1</volume>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1186/2047-217X-1-18">http://dx.doi.org/10.1186/2047-217X-1-18</ext-link>.</mixed-citation></ref>
<ref id="c16"><mixed-citation publication-type="website"><string-name><surname>Mohamadi</surname> <given-names>H</given-names></string-name>, <string-name><surname>Chu</surname> <given-names>J</given-names></string-name>, <string-name><surname>Vandervalk</surname> <given-names>BP</given-names></string-name>, <string-name><surname>Birol</surname> <given-names>I</given-names></string-name>. <year>2016</year>. <article-title>NtHash: Recursive nucleotide hashing</article-title>. <source>Bioinformatics</source>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1093/bioinformatics/btw397">http://dx.doi.org/10.1093/bioinformatics/btw397</ext-link>.</mixed-citation></ref>
<ref id="c17"><mixed-citation publication-type="journal"><string-name><surname>Morin</surname> <given-names>RD</given-names></string-name>, <string-name><surname>Mungall</surname> <given-names>K</given-names></string-name>, <string-name><surname>Pleasance</surname> <given-names>E</given-names></string-name>, <string-name><surname>Mungall</surname> <given-names>AJ</given-names></string-name>, <string-name><surname>Goya</surname> <given-names>R</given-names></string-name>, <string-name><surname>Huff</surname> <given-names>RD</given-names></string-name>, <string-name><surname>Scott</surname> <given-names>DW</given-names></string-name>, <string-name><surname>Ding</surname> <given-names>J</given-names></string-name>, <string-name><surname>Roth</surname> <given-names>A</given-names></string-name>, <string-name><surname>Chiu</surname> <given-names>R</given-names></string-name>, <etal>et al.</etal> <year>2013</year>. <article-title>Mutational and structural analysis of diffuse large b-cell lymphoma using whole-genome sequencing</article-title>. <source>Blood</source> <volume>122</volume>: <fpage>1256</fpage>&#x2013;<lpage>1265</lpage>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1182/blood-2013-02-483727">http://dx.doi.org/10.1182/blood-2013-02-483727</ext-link>.</mixed-citation></ref>
<ref id="c18"><mixed-citation publication-type="journal"><string-name><surname>Mose</surname> <given-names>LE</given-names></string-name>, <string-name><surname>Wilkerson</surname> <given-names>MD</given-names></string-name>, <string-name><surname>Hayes</surname> <given-names>DN</given-names></string-name>, <string-name><surname>Perou</surname> <given-names>CM</given-names></string-name>, <string-name><surname>Parker</surname> <given-names>JS</given-names></string-name>. <year>2014</year>. <article-title>ABRA: Improved coding indel detection via assembly-based realignment</article-title>. <source>Bioinformatics</source> <volume>30</volume>: <fpage>2813</fpage>&#x2013;<lpage>2815</lpage>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1093/bioinformatics/btu376">http://dx.doi.org/10.1093/bioinformatics/btu376</ext-link>.</mixed-citation></ref>
<ref id="c19"><mixed-citation publication-type="journal"><string-name><surname>Mostovoy</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Levy-Sakin</surname> <given-names>M</given-names></string-name>, <string-name><surname>Lam</surname> <given-names>J</given-names></string-name>, <string-name><surname>Lam</surname> <given-names>ET</given-names></string-name>, <string-name><surname>Hastie</surname> <given-names>AR</given-names></string-name>, <string-name><surname>Marks</surname> <given-names>P</given-names></string-name>, <string-name><surname>Lee</surname> <given-names>J</given-names></string-name>, <string-name><surname>Chu</surname> <given-names>C</given-names></string-name>, <string-name><surname>Lin</surname> <given-names>C</given-names></string-name>, <string-name><surname>D&#x017E;akula</surname> <given-names>&#x017D;</given-names></string-name>, <etal>et al.</etal> <year>2016</year>. <article-title>A hybrid approach for de novo human genome sequence assembly and phasing</article-title>. <source>Nat Meth</source> <volume>13</volume>: <fpage>587</fpage>&#x2013;<lpage>590</lpage>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1038/nmeth.3865">http://dx.doi.org/10.1038/nmeth.3865</ext-link>.</mixed-citation></ref>
<ref id="c20"><mixed-citation publication-type="website"><string-name><surname>Nagarajan</surname> <given-names>N</given-names></string-name>, <string-name><surname>Pop</surname> <given-names>M</given-names></string-name>. <year>2013</year>. <article-title>Sequence assembly demystified</article-title>. <source>Nature Reviews Genetics</source> <volume>14</volume>: <fpage>157</fpage>&#x2013;<lpage>167</lpage>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1038/nrg3367">http://dx.doi.org/10.1038/nrg3367</ext-link>.</mixed-citation></ref>
<ref id="c21"><mixed-citation publication-type="website"><string-name><surname>O&#x2019;Connell</surname> <given-names>J</given-names></string-name>, <string-name><surname>Schulz-Trieglaff</surname> <given-names>O</given-names></string-name>, <string-name><surname>Carlson</surname> <given-names>E</given-names></string-name>, <string-name><surname>Hims</surname> <given-names>MM</given-names></string-name>, <string-name><surname>Gormley</surname> <given-names>NA</given-names></string-name>, <string-name><surname>Cox</surname> <given-names>AJ</given-names></string-name>. <year>2014</year>. <article-title>NxTrim: Optimized trimming of illumina mate pair reads</article-title>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1101/007666">http://dx.doi.org/10.1101/007666</ext-link>.</mixed-citation></ref>
<ref id="c22"><mixed-citation publication-type="journal"><string-name><surname>Paulino</surname> <given-names>D</given-names></string-name>, <string-name><surname>Warren</surname> <given-names>RL</given-names></string-name>, <string-name><surname>Vandervalk</surname> <given-names>BP</given-names></string-name>, <string-name><surname>Raymond</surname> <given-names>A</given-names></string-name>, <string-name><surname>Jackman</surname> <given-names>SD</given-names></string-name>, <string-name><surname>Birol</surname> <given-names>I</given-names></string-name>. <year>2015</year>. <article-title>Sealer: A scalable gap-closing application for finishing draft genomes</article-title>. <source>BMC bioinformatics</source> <volume>16</volume>: <fpage>230</fpage>.</mixed-citation></ref>
<ref id="c23"><mixed-citation publication-type="journal"><string-name><surname>Pendleton</surname> <given-names>M</given-names></string-name>, <string-name><surname>Sebra</surname> <given-names>R</given-names></string-name>, <string-name><surname>Pang</surname> <given-names>AWC</given-names></string-name>, <string-name><surname>Ummat</surname> <given-names>A</given-names></string-name>, <string-name><surname>Franzen</surname> <given-names>O</given-names></string-name>, <string-name><surname>Rausch</surname> <given-names>T</given-names></string-name>, <string-name><surname>St&#x00FC;tz</surname> <given-names>AM</given-names></string-name>, <string-name><surname>Stedman</surname> <given-names>W</given-names></string-name>, <string-name><surname>Anantharaman</surname> <given-names>T</given-names></string-name>, <string-name><surname>Hastie</surname> <given-names>A</given-names></string-name>, <etal>et al.</etal> <year>2015</year>. <article-title>Assembly and diploid architecture of an individual human genome via single-molecule technologies</article-title>. <source>Nat Meth</source> <volume>12</volume>: <fpage>780</fpage>&#x2013;<lpage>786</lpage>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1038/nmeth.3454">http://dx.doi.org/10.1038/nmeth.3454</ext-link>.</mixed-citation></ref>
<ref id="c24"><mixed-citation publication-type="journal"><string-name><surname>Pevzner</surname> <given-names>PA</given-names></string-name>, <string-name><surname>Tang</surname> <given-names>H</given-names></string-name>, <string-name><surname>Waterman</surname> <given-names>MS</given-names></string-name>. <year>2001</year>. <article-title>An eulerian path approach to dna fragment assembly</article-title>. <source>Proceedings of the National Academy of Sciences</source> <volume>98</volume>: <fpage>9748</fpage>&#x2013;<lpage>9753</lpage>.</mixed-citation></ref>
<ref id="c25"><mixed-citation publication-type="journal"><string-name><surname>Pugh</surname> <given-names>TJ</given-names></string-name>, <string-name><surname>Morozova</surname> <given-names>O</given-names></string-name>, <string-name><surname>Attiyeh</surname> <given-names>EF</given-names></string-name>, <string-name><surname>Asgharzadeh</surname> <given-names>S</given-names></string-name>, <string-name><surname>Wei</surname> <given-names>JS</given-names></string-name>, <string-name><surname>Auclair</surname> <given-names>D</given-names></string-name>, <string-name><surname>Carter</surname> <given-names>SL</given-names></string-name>, <string-name><surname>Cibulskis</surname> <given-names>K</given-names></string-name>, <string-name><surname>Hanna</surname> <given-names>M</given-names></string-name>, <string-name><surname>Kiezun</surname> <given-names>A</given-names></string-name>, <etal>et al.</etal> <year>2013</year>. <article-title>The genetic landscape of high-risk neuroblastoma</article-title>. <source>Nat Genet</source> <volume>45</volume>: <fpage>279</fpage>&#x2013;<lpage>284</lpage>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1038/ng.2529">http://dx.doi.org/10.1038/ng.2529</ext-link>.</mixed-citation></ref>
<ref id="c26"><mixed-citation publication-type="journal"><string-name><surname>Rizk</surname> <given-names>G</given-names></string-name>, <string-name><surname>Lavenier</surname> <given-names>D</given-names></string-name>, <string-name><surname>Chikhi</surname> <given-names>R</given-names></string-name>. <year>2013</year>. <article-title>DSK: K-mer counting with very low memory usage</article-title>. <source>Bioinformatics</source> <volume>29</volume>: <fpage>652</fpage>&#x2013;<lpage>653</lpage>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1093/bioinformatics/btt020">http://dx.doi.org/10.1093/bioinformatics/btt020</ext-link>.</mixed-citation></ref>
<ref id="c27"><mixed-citation publication-type="journal"><string-name><surname>Roberts</surname> <given-names>KG</given-names></string-name>, <string-name><surname>Morin</surname> <given-names>RD</given-names></string-name>, <string-name><surname>Zhang</surname> <given-names>J</given-names></string-name>, <string-name><surname>Hirst</surname> <given-names>M</given-names></string-name>, <string-name><surname>Zhao</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Su</surname> <given-names>X</given-names></string-name>, <string-name><surname>Chen</surname> <given-names>S-C</given-names></string-name>, <string-name><surname>Payne-Turner</surname> <given-names>D</given-names></string-name>, <string-name><surname>Churchman</surname> <given-names>ML</given-names></string-name>, <string-name><surname>Harvey</surname> <given-names>RC</given-names></string-name>, <etal>et al.</etal> <year>2012</year>. <article-title>Genetic alterations activating kinase and cytokine receptor signaling in high-risk acute lymphoblastic leukemia</article-title>. <source>Cancer Cell</source> <volume>22</volume>: <fpage>153</fpage>&#x2013;<lpage>166</lpage>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1016/j.ccr.2012.06.005">http://dx.doi.org/10.1016/j.ccr.2012.06.005</ext-link>.</mixed-citation></ref>
<ref id="c28"><mixed-citation publication-type="journal"><string-name><surname>Sahlin</surname> <given-names>K</given-names></string-name>, <string-name><surname>Chikhi</surname> <given-names>R</given-names></string-name>, <string-name><surname>Arvestad</surname> <given-names>L</given-names></string-name>. <year>2016</year>. <article-title>Assembly scaffolding with pe-contaminated mate-pair libraries</article-title>. <source>Bioinformatics</source> <volume>32</volume>: <fpage>1925</fpage>&#x2013;<lpage>1932</lpage>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1093/bioinformatics/btw064">http://dx.doi.org/10.1093/bioinformatics/btw064</ext-link>.</mixed-citation></ref>
<ref id="c29"><mixed-citation publication-type="journal"><string-name><surname>Simpson</surname> <given-names>JT</given-names></string-name>, <string-name><surname>Durbin</surname> <given-names>R</given-names></string-name>. <year>2011</year>. <article-title>Efficient de novo assembly of large genomes using compressed data structures</article-title>. <source>Genome Research</source> <volume>22</volume>: <fpage>549</fpage>&#x2013;<lpage>556</lpage>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1101/gr.126953.111">http://dx.doi.org/10.1101/gr.126953.111</ext-link>.</mixed-citation></ref>
<ref id="c30"><mixed-citation publication-type="journal"><string-name><surname>Simpson</surname> <given-names>JT</given-names></string-name>, <string-name><surname>Wong</surname> <given-names>K</given-names></string-name>, <string-name><surname>Jackman</surname> <given-names>SD</given-names></string-name>, <string-name><surname>Schein</surname> <given-names>JE</given-names></string-name>, <string-name><surname>Jones</surname> <given-names>SJ</given-names></string-name>, <string-name><surname>Birol</surname> <given-names>I</given-names></string-name>. <year>2009</year>. <article-title>ABySS: A parallel assembler for short read sequence data</article-title>. <source>Genome Research</source> <volume>19</volume>: <fpage>1117</fpage>&#x2013;<lpage>1123</lpage>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1101/gr.089532.108">http://dx.doi.org/10.1101/gr.089532.108</ext-link>.</mixed-citation></ref>
<ref id="c31"><mixed-citation publication-type="other"><string-name><surname>Vandervalk</surname> <given-names>BP</given-names></string-name>, <string-name><surname>Jackman</surname> <given-names>SD</given-names></string-name>, <string-name><surname>Raymond</surname> <given-names>A</given-names></string-name>, <string-name><surname>Mohamadi</surname> <given-names>H</given-names></string-name>, <string-name><surname>Yang</surname> <given-names>C</given-names></string-name>, <string-name><surname>Attali</surname> <given-names>DA</given-names></string-name>, <string-name><surname>Chu</surname> <given-names>J</given-names></string-name>, <string-name><surname>Warren</surname> <given-names>RL</given-names></string-name>, <string-name><surname>Birol</surname> <given-names>I</given-names></string-name>. <year>2014</year>. <article-title>Konnector: Connecting paired-end reads using a bloom filter de bruijn graph</article-title>. <source>Bioinformatics and Biomedicine (BIBM)</source>, 2014 IEEE International Conference on <fpage>51</fpage>&#x2013;<lpage>58</lpage>.</mixed-citation></ref>
<ref id="c32"><mixed-citation publication-type="journal"><string-name><surname>Warren</surname> <given-names>RL</given-names></string-name>, <string-name><surname>Yang</surname> <given-names>C</given-names></string-name>, <string-name><surname>Vandervalk</surname> <given-names>BP</given-names></string-name>, <string-name><surname>Behsaz</surname> <given-names>B</given-names></string-name>, <string-name><surname>Lagman</surname> <given-names>A</given-names></string-name>, <string-name><surname>Jones</surname> <given-names>SJM</given-names></string-name>, <string-name><surname>Birol</surname> <given-names>I</given-names></string-name>. <year>2015</year>. <article-title>LINKS: Scalable, alignment-free scaffolding of draft genomes with long reads</article-title>. <source>GigaSci</source> <volume>4</volume>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1186/s13742-015-0076-3">http://dx.doi.org/10.1186/s13742-015-0076-3</ext-link>.</mixed-citation></ref>
<ref id="c33"><mixed-citation publication-type="journal"><string-name><surname>Weisenfeld</surname> <given-names>NI</given-names></string-name>, <string-name><surname>Yin</surname> <given-names>S</given-names></string-name>, <string-name><surname>Sharpe</surname> <given-names>T</given-names></string-name>, <string-name><surname>Lau</surname> <given-names>B</given-names></string-name>, <string-name><surname>Hegarty</surname> <given-names>R</given-names></string-name>, <string-name><surname>Holmes</surname> <given-names>L</given-names></string-name>, <string-name><surname>Sogoloff</surname> <given-names>B</given-names></string-name>, <string-name><surname>Tabbaa</surname> <given-names>D</given-names></string-name>, <string-name><surname>Williams</surname> <given-names>L</given-names></string-name>, <string-name><surname>Russ</surname> <given-names>C</given-names></string-name>, <etal>et al.</etal> <year>2014</year>. <article-title>Comprehensive variation discovery in single human genomes</article-title>. <source>Nat Genet</source> <volume>46</volume>: <fpage>1350</fpage>&#x2013;<lpage>1355</lpage>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1038/ng.3121">http://dx.doi.org/10.1038/ng.3121</ext-link>.</mixed-citation></ref>
<ref id="c34"><mixed-citation publication-type="journal"><string-name><surname>Yip</surname> <given-names>S</given-names></string-name>, <string-name><surname>Butterfield</surname> <given-names>YS</given-names></string-name>, <string-name><surname>Morozova</surname> <given-names>O</given-names></string-name>, <string-name><surname>Chittaranjan</surname> <given-names>S</given-names></string-name>, <string-name><surname>Blough</surname> <given-names>MD</given-names></string-name>, <string-name><surname>An</surname> <given-names>J</given-names></string-name>, <string-name><surname>Birol</surname> <given-names>I</given-names></string-name>, <string-name><surname>Chesnelong</surname> <given-names>C</given-names></string-name>, <string-name><surname>Chiu</surname> <given-names>R</given-names></string-name>, <string-name><surname>Chuah</surname> <given-names>E</given-names></string-name>, <etal>et al.</etal> <year>2011</year>. <article-title>Concurrent cic mutations, idh mutations, and 1p/19q loss distinguish oligodendrogliomas from other cancers</article-title>. <source>The Journal of Pathology</source> <volume>226</volume>: <fpage>7</fpage>&#x2013;<lpage>16</lpage>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1002/path.2995">http://dx.doi.org/10.1002/path.2995</ext-link>.</mixed-citation></ref>
<ref id="c35"><mixed-citation publication-type="journal"><string-name><surname>Zimin</surname> <given-names>AV</given-names></string-name>, <string-name><surname>Marcais</surname> <given-names>G</given-names></string-name>, <string-name><surname>Puiu</surname> <given-names>D</given-names></string-name>, <string-name><surname>Roberts</surname> <given-names>M</given-names></string-name>, <string-name><surname>Salzberg</surname> <given-names>SL</given-names></string-name>, <string-name><surname>Yorke</surname> <given-names>JA</given-names></string-name>. <year>2013</year>. <article-title>The masurca genome assembler</article-title>. <source>Bioinformatics</source> <volume>29</volume>: <fpage>2669</fpage>&#x2013;<lpage>2677</lpage>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1093/bioinformatics/btt476">http://dx.doi.org/10.1093/bioinformatics/btt476</ext-link>.</mixed-citation></ref>
<ref id="c36"><mixed-citation publication-type="journal"><string-name><surname>Zook</surname> <given-names>JM</given-names></string-name>, <string-name><surname>Catoe</surname> <given-names>D</given-names></string-name>, <string-name><surname>McDaniel</surname> <given-names>J</given-names></string-name>, <string-name><surname>Vang</surname> <given-names>L</given-names></string-name>, <string-name><surname>Spies</surname> <given-names>N</given-names></string-name>, <string-name><surname>Sidow</surname> <given-names>A</given-names></string-name>, <string-name><surname>Weng</surname> <given-names>Z</given-names></string-name>, <string-name><surname>Liu</surname> <given-names>Y</given-names></string-name>, <string-name><surname>Mason</surname> <given-names>CE</given-names></string-name>, <string-name><surname>Alexander</surname> <given-names>N</given-names></string-name>, <etal>et al.</etal> <year>2016</year>. <article-title>Extensive sequencing of seven human genomes to characterize benchmark reference materials</article-title>. <source>Sci Data</source> <volume>3</volume>: <fpage>160025</fpage>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1038/sdata.2016.25">http://dx.doi.org/10.1038/sdata.2016.25</ext-link>.</mixed-citation></ref>
</ref-list>
</back>
</article>
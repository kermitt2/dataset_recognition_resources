<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.2d1 20170631//EN" "JATS-archivearticle1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" article-type="article" dtd-version="1.2d1" specific-use="production" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">BIORXIV</journal-id>
<journal-title-group>
<journal-title>bioRxiv</journal-title>
<abbrev-journal-title abbrev-type="publisher">bioRxiv</abbrev-journal-title>
</journal-title-group>
<publisher>
<publisher-name>Cold Spring Harbor Laboratory</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1101/227520</article-id>
<article-version>1.1</article-version>
<article-categories>
<subj-group subj-group-type="author-type">
<subject>Regular Article</subject>
</subj-group>
<subj-group subj-group-type="heading">
<subject>New Results</subject>
</subj-group>
<subj-group subj-group-type="hwp-journal-coll">
<subject>Bioinformatics</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>RIFRAF: a frame-resolving consensus algorithm</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Eren</surname>
<given-names>Kemal</given-names>
</name>
</contrib>
<contrib contrib-type="author" corresp="yes">
<name>
<surname>Murrell</surname>
<given-names>Ben</given-names>
</name>
<xref ref-type="corresp" rid="cor1">&#x002A;</xref>
</contrib>
<aff id="a1"><institution>Bioinformatics and Systems Biology, University of California San Diego</institution>, <email>keren@ucsd.edu</email></aff>
<aff id="a2"><institution>Department of Medicine, University of California San Diego</institution>, <email>bmurrell@ucsd.edu</email></aff>
</contrib-group>
<author-notes>
<corresp id="cor1"><label>&#x002A;</label> Corresponding author</corresp>
</author-notes>
<pub-date pub-type="epub">
<year>2017</year>
</pub-date>
<elocation-id>227520</elocation-id>
<history>
<date date-type="received">
<day>01</day>
<month>12</month>
<year>2017</year>
</date>
<date date-type="rev-recd">
<day>01</day>
<month>12</month>
<year>2017</year>
</date>
<date date-type="accepted">
<day>03</day>
<month>12</month>
<year>2017</year>
</date>
</history>
<permissions>
<copyright-statement>&#x00A9; 2017, Posted by Cold Spring Harbor Laboratory</copyright-statement>
<copyright-year>2017</copyright-year>
<license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by/4.0/"><license-p>This pre-print is available under a Creative Commons License (Attribution 4.0 International), CC BY 4.0, as described at <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link></license-p></license>
</permissions>
<self-uri xlink:href="227520.pdf" content-type="pdf" xlink:role="full-text"/>
<abstract>
<title>Abstract</title>
<sec>
<title>Motivation</title>
<p>Protein coding genes can be studied using long-read next generation sequencing. However, high rates of indel sequencing errors are problematic, corrupting the reading frame. Even the consensus of multiple independent sequence reads retains indel errors. To solve this problem, we introduce <monospace>RIFRAF</monospace>, a sequence consensus algorithm that takes a set of error-prone reads and a reference sequence and infers an accurate in-frame consensus. <monospace>RIFRAF</monospace> uses a novel structure, analogous to a two-layer hidden Markov model: the consensus is optimized to maximize alignment scores with both the set of noisy reads and with a reference. The template-to-reads component of the model encodes the preponderance of indels, and is sensitive to the per-base quality scores, giving greater weight to more accurate bases. The reference-to-template component of the model penalizes frame-destroying indels. A local search algorithm proceeds in stages to find the best consensus sequence for both objectives.</p>
</sec>
<sec>
<title>Results</title>
<p>Using Pacific Biosciences SMRT sequences of NL4-3 env, we compare our approach to other consensus and frame correction methods. <monospace>RIFRAF</monospace> consistently finds a consensus sequence that is more accurate and in-frame, especially with small numbers of reads. It was able to perfectly reconstruct over 80&#x0025; of consensus sequences from as few as three reads, whereas the best alternative required twice as many. <monospace>RIFRAF</monospace> is able to achieve these results and keep the consensus in-frame even with a distantly related reference sequence. Moreover, unlike other frame correction methods, <monospace>RIFRAF</monospace> can detect and keep true indels while removing erroneous ones.</p>
</sec>
<sec sec-type="availability">
<title>Availability</title>
<p><monospace>RIFRAF</monospace> is implemented in Julia, and source code is publicly available at <ext-link ext-link-type="uri" xlink:href="https://github.com/MurrellGroup/Rifraf.jl">https://github.com/MurrellGroup/Rifraf.jl</ext-link></p>
</sec>
<sec>
<title>Contact</title>
<p><email>bmurrell@ucsd.edu</email></p>
</sec>
</abstract>
<counts>
<page-count count="13"/>
</counts>
</article-meta>
</front>
<body>
<sec id="s1"><label>I.</label>
<title>Introduction</title>
<p>The problem of finding the consensus of a set of sequences is fundamental to bioinformatics, especially in the age of high-throughput sequencing. This paper addresses the task of re-constructing an unknown true sequence from a set of error-prone reads. Many algorithms that solve this task focus on <italic>de-novo</italic> or reference-guided assembly of short reads [<xref ref-type="bibr" rid="c17">17</xref>, <xref ref-type="bibr" rid="c18">18</xref>, <xref ref-type="bibr" rid="c15">15</xref>]. However, with the advent of third-generation single-molecule sequencing technologies, such as Pacific Biosciences&#x2032; SMRT sequencing protocol [<xref ref-type="bibr" rid="c6">6</xref>], it is now possible to perform full-length sequencing of entire genes or small genomes. Here we will focus on finding the consensus of a set of <italic>amplicon</italic> sequences - where the sequences have the same start and end points. An example application would be targeted sequencing of an entire gene from a viral population (eg. [<xref ref-type="bibr" rid="c11">11</xref>]). We focus just on the consensus reconstruction problem, assuming that reads have first been grouped by genetic identity, either using primer ID barcodes [<xref ref-type="bibr" rid="c7">7</xref>, <xref ref-type="bibr" rid="c22">22</xref>], or some form of clustering.</p>
<p>Consensus sequences found via multiple sequence alignment may be inaccurate when there are few reads available, or when the reads contain many errors. SMRT sequencing in particular is known to contain mostly indel errors, especially in homopolymer runs. For example, in [<xref ref-type="bibr" rid="c11">11</xref>], we discovered that 80&#x0025; of the sequencing errors were indels. If these indels carry over into the consensus sequence, they cause frameshift errors which corrupt the reading frame, and render the amino acid sequence uninterpretable. If a reference sequence with a trusted reading frame is available, it can be exploited to inform the consensus.</p>
<p>Current approaches that attempt to reconstruct in-frame consensus sequences consider these problems separately. There are approaches to infer the consensus of multiple reads, and there are approaches to correct the reading frame of an already-inferred consensus sequence. Here, we solve these problems jointly, simultaneously considering evidence from the reads and the reference sequence.</p>
<p>One common approach to inferring consensus sequences is from multiple sequence alignments (MSAs), from which the consensus is calculated by taking the most common base in each column. A myriad of multiple alignment algorithms are available [<xref ref-type="bibr" rid="c19">19</xref>], any of which may be used for this task. This paper uses <monospace>MAFFT</monospace> [<xref ref-type="bibr" rid="c9">9</xref>, <xref ref-type="bibr" rid="c8">8</xref>] as an example of this strategy when comparing alternatives. A multitude of tools, such as the <monospace>cons</monospace> command in <monospace>EMBOSS</monospace> [<xref ref-type="bibr" rid="c20">20</xref>], are available for computing the consensus of these alignments. Another approach is to use a partial order alignment [<xref ref-type="bibr" rid="c13">13</xref>] representation of the set of sequences, and find the consensus sequence using dynamic programming to extract the heaviest bundles [<xref ref-type="bibr" rid="c12">12</xref>]. This paper uses <monospace>poaV</monospace><sup><xref ref-type="fn" rid="fn1">1</xref></sup> for comparison. Other implementations of this approach include <monospace>pbdagcon</monospace><sup><xref ref-type="fn" rid="fn2">2</xref></sup>, which was released by Pacific Biosciences specifically for raw SMRT sequence reads, and <monospace>nanopolish</monospace> [<xref ref-type="bibr" rid="c14">14</xref>], which wraps <monospace>poaV2</monospace> for Oxford Nanopore reads. Finally, specialized consensus methods are available for specific sequencing technologies; these methods model the specific behavior of their target protocol, such as read length and error model. In this domain, Pacific Biosciences developed the <monospace>Quiver</monospace> [<xref ref-type="bibr" rid="c4">4</xref>] and <monospace>Arrow</monospace> algorithms<sup><xref ref-type="fn" rid="fn3">3</xref></sup> for building circular consensus sequences from raw ZMW reads.</p>
<p>Existing approaches for reading frame correction (such as <monospace>FrameBot</monospace>, which we use here as a comparator) exploit frame-aware codon alignment to a protein reference, followed by inserting or deleting bases in the target sequence [<xref ref-type="bibr" rid="c24">24</xref>]. Related algorithms include <monospace>FALP</monospace> and <monospace>LAST</monospace> [<xref ref-type="bibr" rid="c21">21</xref>], <monospace>Frame-Pro</monospace> [<xref ref-type="bibr" rid="c5">5</xref>], <monospace>HMMFrame</monospace> [<xref ref-type="bibr" rid="c25">25</xref>], and others. Another approach is hybrid sequencing, which supplements long singlemolecule reads with short reads [<xref ref-type="bibr" rid="c19">19</xref>]. Methods such as <monospace>HGAP</monospace> [<xref ref-type="bibr" rid="c4">4</xref>] use hybrid sequence data to find and remove indels.</p>
<p>This paper introduces a new method for inferring consensus sequences of such reads: the Reference-Informed Frame-Resolving multiple-Alignment Free consensus algorithm (<monospace>RIFRAF</monospace>). <monospace>RIFRAF</monospace> considers evidence from both the reads and the reference simultaneously, allowing reads to inform the frame correction process, and is sensitive to the read quality scores to ensure that high-quality bases are more informative. These features allow <monospace>RIFRAF</monospace> to make highly accurate predictions, even for a small number of error-prone reads. Unlike other frame-correction methods, <monospace>RIFRAF</monospace> can detect true frameshift-causing indels and keep them while removing spurious indels.</p>
</sec>
<sec id="s2"><label>II.</label>
<title>Methods</title>
<p><monospace>RIFRAF</monospace> addresses the following sequence consensus problem. Let <italic>t</italic> be an unknown template sequence, which is sequenced <italic>N</italic> times to generate a set of <italic>N</italic> pairs of reads and quality scores <inline-formula><alternatives><inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="227520_inline1.gif"/></alternatives></inline-formula> Each read <italic>s<sup>i</sup></italic> is a noisy observation of <italic>t</italic>, and each <italic>p<sup>i</sup></italic> is a vector of error probabilities, one for each base in <italic>s<sup>i</sup></italic>. The <italic>i</italic>th character in read <italic>s</italic> is denoted <italic>s<sub>i</sub></italic>, and the substring from the <italic>i</italic>th to the <italic>j</italic>th character is denoted <italic>s<sub>i</sub>&#x2026;<sub>j</sub></italic>. <italic>p<sub>i</sub></italic> is the probability that <italic>si</italic> is an error; an error at a base is either a substitution, an insertion, or a deletion has occurred next to it. The task is to infer a consensus sequence <italic>c</italic> that matches the unknown <italic>t</italic>. Additionally, we also consider a reference sequence <italic>r</italic> and prefer that <italic>c</italic> not contain insertions or deletions that change its reading frame relative to <italic>r</italic>. This is especially useful when the template that generated the reads in &#x1D4E1; had an intact reading frame, but the reads themselves have a high indel rate.</p>
<p>The structure of the full <monospace>RIFRAF</monospace> model is shown in <xref ref-type="fig" rid="fig1">Figure 1</xref>. It infers the unknown template by optimizing two objectives: the quality-aware alignment to the reads, and a frame-aware alignment to the reference. The optimization procedure starts with an initial consensus sequence and proceeds in an iterative greedy manner, mutating the consensus sequence at every step to improve those objectives. <monospace>RIFRAF</monospace> uses a number of techniques to speed up convergence: filtering mutations, accepting multiple mutations, forward and backward alignments, banding, batching, increasing indel penalties, and multi-stage optimization.</p>
<fig id="fig1" position="float"><label>Figure 1:</label>
<caption><p><italic>Structure of the full model. The unknown template t (grey) has the same reading frame as known reference <italic>r</italic>. The sequencing process generates error-prone reads s</italic><sup>1</sup>&#x2026;<italic>s<sup>N</sup> with quality scores p</italic><sup>1</sup>&#x2026; <italic>p<sup>N</sup></italic>.</p></caption>
<graphic xlink:href="227520_fig1.tif"/>
</fig>
<p><monospace>RIFRAF</monospace> is implemented in Julia [<xref ref-type="bibr" rid="c1">1</xref>], a high-level scientific computing language.</p>
<sec id="s2a"><label>i.</label>
<title>Objective 1: pairwise alignment to reads</title>
<p>In order to find the optimal consensus, it is necessary to assign a score to candidates. <monospace>RIFRAF</monospace> scores consensus sequences by a global pairwise alignment [<xref ref-type="bibr" rid="c23">23</xref>, <xref ref-type="bibr" rid="c16">16</xref>] of each read <italic>s</italic> with the current values of <italic>c</italic>. Let <bold>A</bold> be the |<italic>s</italic>| &#x002B;1 &#x00D7; |<italic>c</italic>| &#x002B; 1 dynamic programming matrix for aligning <italic>c</italic> and <italic>s</italic>. Each <italic>a<sub>i,j</sub></italic> is the score of aligning prefix <italic>s</italic><sub>1&#x2026;<italic>i</italic></sub> to prefix <italic>c</italic><sub>1&#x2026;<italic>j</italic></sub>. <italic>a</italic><sub>0,0</sub> is initialized to 0, and the last cell <italic>a</italic><sub>|<italic>s</italic>|&#x002B;1,|<italic>c</italic>|&#x002B;1</sub> contains the score for the full alignment. The score function for <italic>c</italic> and <italic>s</italic> is defined as the full alignment score: <italic>S</italic>(<italic>c</italic>|<italic>s</italic>) &#x003D; <italic>a</italic><sub>|<italic>s</italic>|&#x002B;1,|<italic>c</italic>|&#x002B;1.</sub> The overall score of consensus sequence <italic>c</italic> is the sum over the alignment scores for all reads: <italic>S</italic>(<italic>c</italic>|&#x1D4E1;) &#x003D; &#x2211;<sub>(<italic>s,p</italic>)&#x2208;&#x1D4E1;</sub> <italic>S</italic>(<italic>c</italic>|<italic>s</italic>).</p>
<p>The sequencing process has an error rate <italic>&#x03C1;</italic>, which by assumption can can be partitioned into <italic>&#x03C1;</italic> = <italic>&#x03C1;<sub>mismatch</sub></italic> &#x002B; <italic>&#x03C1;<sub>insertion</sub></italic> &#x002B; <italic>&#x03C1;<sub>deletion</sub></italic>. These parameters account for the different error profiles of different sequencing technologies. For instance, in SMRT sequencing, indels are more likely than substitutions. The base move scores for the alignment are derived from these error probabilities.</p>
<p>Typical pairwise alignment uses fixed scores for moves. However, <monospace>RIFRAF</monospace> also incorporates sequence qualities into the move scores to generate more accurate alignments. The scores for match, insertion, and deletion moves depend on the error probabilities <italic>p</italic> in the following way. Let <italic>q</italic> &#x003D; log<sub>10</sub> <italic>p</italic> (base 10 is used instead of the usual natural logarithm for compatibility with quality scores such as Phred scores). Let <italic>q<sub>mismatch</sub></italic> &#x003D; log<sub>10<italic>&#x03C1;mismatch</italic></sub>, and Similarly for the others. Then move scores are calculated as follows
<list list-type="bullet">
<list-item><p>A diagonal move from <italic>a</italic><sub><italic>i</italic>&#x2013;1,<italic>j</italic>&#x2013;1</sub> to <italic>a<sub>i,j</sub></italic> has score log<sub>10</sub> (1 &#x2013; <italic>p<sub>i</sub></italic>) if <italic>s<sub>i</sub></italic> &#x003D; <italic>c<sub>j</sub></italic> (ie. a match), else <italic>q<sub>mismatch</sub></italic> &#x002B; <italic>q<sub>i</sub></italic> (ie. a mismatch).</p></list-item>
<list-item><p>A vertical move (insertion relative to <italic>c</italic>) from <italic>a</italic><sub><italic>i</italic>&#x2013;1,<italic>j</italic></sub> to <italic>a<sub>i,j</sub></italic> has score <italic>q<sub>insertion</sub></italic> &#x002B; <italic>q<sub>i</sub></italic>.</p></list-item>
<list-item><p>A horizontal move (deletion relative to <italic>c</italic>) from <italic>a</italic><sub><italic>i,j</italic>&#x2013;1</sub> to <italic>a<sub>i,j</sub></italic> has score <italic>q<sub>deletion</sub></italic> &#x002B; <italic>max</italic>(<italic>q<sub>i</sub></italic> &#x002B; <italic>q</italic><sub><italic>i</italic>&#x002B;1</sub>). If <italic>i</italic> &#x003D; 0, the score is just <italic>q<sub>deletion</sub></italic> &#x002B; <italic>q</italic><sub>1</sub>; similarly, <italic>i</italic> &#x003D; |<italic>s</italic>|, the score is just <italic>q<sub>deletion</sub></italic> &#x002B; <italic>q</italic><sub>|<italic>s</italic>|</sub>.</p></list-item>
</list>
</p>
<p>Intuitively, the penalties for mismatches, insertions, and deletions are more severe when the consensus does not match higher quality regions of the reads. PHRED values are capped at 30 because rarer sources of error that are not sequencing errors (eg. PCR errors) may have very confident PHRED scores, and we do not wish these to be overly informative. This cap can be adjusted if these sources of error can be ruled out (for example if PCR was not used to generate the amplicon library).</p>
<p>The best consensus <italic>c</italic>&#x002A; under Objective 1 (pairwise alignment to reads) is the one that maximizes <italic>S</italic>(<italic>c</italic>|&#x1D4E1;).</p>
</sec>
<sec id="s2b"><label>ii.</label>
<title>Objective 2: Frame-aware alignment to reference</title>
<p>To perform frame correction, <monospace>RIFRAF</monospace> requires a reference nucleotide sequence <italic>r</italic>, which is known to be in-frame. It models the reference sequence <italic>r</italic> as having diverged from the template <italic>t</italic>, where the differences between <italic>r</italic> and <italic>t</italic> represent evolutionary events, not sequencing error as in Objective 1. The score for the consensus-reference alignment is modified to reflect this difference. First, two new moves are allowed during alignment: codon insertion and codon deletion, each with their own penalty, as shown in <xref ref-type="fig" rid="fig2">Figure 2</xref>. Second, a new parameter <italic>t<sub>indel</sub></italic> is used as a multiplier for the non-codon insertion and deletion penalties. Together, these two modifications bias the alignment to prefer only codon indels, keeping the consensus in-frame. Because it uses nucleotide alignments, this method works may be expected to work better with more closely related reference sequences, where nucleotide similarity is preserved.</p>
<fig id="fig2" position="float"><label>Figure 2:</label>
<caption><p><italic>Codon moves in the reference alignment dynamic programming matrix. The goal is to favor a consensus that preserves the reading frame. Thus, in addition to the usual single match, insertion, and deletion moves, codon insertions and deletions are also allowed, with a lower penalty than single-base indels</italic>.</p></caption>
<graphic xlink:href="227520_fig2.tif"/>
</fig>
<p>We first let <monospace>RIFRAF</monospace> converge to a draft template <italic>c</italic> without the reference sequence. This draft template is used to approximate the divergence between the true template and the reference, taking the edit distance normalized by the max length <italic>d</italic>(<italic>r,c</italic>)/<italic>max</italic>(|<italic>r</italic>|, |<italic>c</italic>|) to obtain a per-base probability of template/reference disagreement (which is used in the same manner as the per-base quality scores <italic>p</italic> in Objective 1). Reference (mis)match, indel, and codon error rates are provided as parameters, and the scores for each move are computed from error rate <italic>&#x03C1;</italic> as log<sub>10</sub>(<italic>&#x03C1;</italic>), as before.</p>
<p>The insertion and deletion scores are multiplied by a penalty <italic>t<sub>indel</sub></italic>, which controls the influence of single insertions and deletions in the reference alignment. If <italic>t<sub>indel</sub></italic> is small, frame-destroying indels may appear in the consensus, but if it is large, the consensus will be forced into the reference reading frame, even if the unobserved template really did contain indels. As we show in <xref ref-type="sec" rid="s3">Section III</xref>, this penalty can be tuned to discard spurious indels while keeping true ones.</p>
<p><monospace>RIFRAF</monospace> combines both objectives into a single score, allowing the reads to inform the frame correction. The score of the consensus to reference alignment is denoted <italic>S<sub>r</sub></italic>(<italic>c</italic>|<italic>r</italic>), and the full score function is:
<disp-formula id="ueqn1">
<alternatives><graphic xlink:href="227520_ueqn1.gif"/></alternatives></disp-formula>
</p>
</sec>
<sec id="s2c"><label>iii.</label>
<title>Optimization procedure</title>
<p>An exhaustive search for the optimal consensus <italic>c</italic>&#x002A; would be intractable, so <monospace>RIFRAF</monospace> uses a variant of the following greedy search algorithm, with some optimizations to speed up convergence:
<list list-type="order">
<list-item><p>Start with a guess <italic>c</italic><sup>0</sup>. <monospace>RIFRAF</monospace> chooses the read with the lowest expected number of errors.</p></list-item>
<list-item><p>For the most recent guess <italic>c<sup>i</sup></italic>, examine a set of candidate single mutations, such as insertions, deletions, and substitutions. Note that these candidates vary at each optimization stage. Keep all that improve the score <italic>S</italic>(<italic>c<sup>i</sup></italic>|&#x1D4E1;, <italic>r</italic>). Call the set of candidate mutations &#x1D4D2;.</p></list-item>
<list-item><p>If &#x1D4D2; is empty, accept <italic>c<sup>i</sup></italic> and terminate. Otherwise, choose some subset of &#x1D4D2;, apply them to <italic>c<sup>i</sup></italic> to obtain <italic>c</italic><sup><italic>i</italic>&#x002B;1</sup>, and iterate.</p></list-item>
</list></p>
<p><monospace>RIFRAF</monospace> works in two stages, first optimizing just <italic>S</italic>(<italic>c</italic>|&#x1D4E1;), and then optimizing the full <italic>S</italic>(<italic>c</italic>|&#x1D4E1;, <italic>r</italic>).</p>
<sec id="s2c1"><label>111.1</label>
<title>Filtering mutations</title>
<p>When comparing the template to the reads, we need not consider all possible modifications to the current consensus. For example, if any candidate mutation to <italic>c</italic> does not appear in any pairwise alignment of c with a read, that mutation need not be scored. Since it has no support among any observed sequence, it is likely to hurt the alignment score. Similarly, during the frame correction stage, the model only proposes insertions or deletions that appear in the pairwise alignment to reference.</p>
</sec>
<sec id="s2c2"><label>111.2</label>
<title>Multiple mutations</title>
<p>Instead of accepting only the best mutation in &#x1D4D2;, <monospace>RIFRAF</monospace> accepts all the mutations that are separated by a certain number of positions: <italic>n<sub>separate</sub></italic> (the default value is 15, i.e. five codons). The candidates are accepted in order from best to worst score. This policy allows <monospace>RIFRAF</monospace> to converge in many fewer iterations than if it only accepted one mutation per iteration. <italic>n<sub>separate</sub></italic> ensures that the changes to the consensus are relatively independent of each other, and that the score of one is unlikely to be affected by the acceptance of another. After accepting mutations in &#x1D4D2;, <monospace>RIFRAF</monospace> also compares the new score to the score that would be obtained from accepting only the single best mutation in &#x1D4D2;, and optionally accepts that single mutation instead if it results in a better score.</p>
</sec>
<sec id="s2c3"><label>iii.3</label>
<title>Forward and backward alignments</title>
<p>Recomputing the full alignment matrix for each candidate mutation to <italic>c</italic> would be prohibitively expensive. For a sequence <italic>c</italic> from alphabet &#x007B;<italic>A, C, G, T</italic>&#x007D;, there are 4(|<italic>c</italic>| &#x002B; 1) insertions, 3|<italic>c</italic>| substitutions, and |<italic>c</italic>| deletions to consider. Computing the alignment matrix <bold>A</bold> for each candidate requires <italic>O</italic>(<italic>cs</italic>) operations, so each iteration of the proposed algorithm would require <italic>O</italic>(<italic>Nc</italic><sup>2</sup><italic>s</italic>) operations (we omit | &#x00B7; | in <italic>O</italic>(&#x00B7;) for clarity). Instead, <monospace>RIFRAF</monospace> uses forward and backward alignments to compute the new score for any single change to <italic>c</italic> by only recomputing a single column of <bold>A</bold> [<xref ref-type="bibr" rid="c4">4</xref>].</p>
<p>To achieve this, in addition to the prefix alignment matrix <bold>A</bold>, where <italic>a<sub>i,j</sub></italic> is the score for aligning prefix <italic>s</italic><sub>1&#x2026;<italic>i</italic></sub> to prefix <italic>c</italic><sub>1&#x2026;<italic>j</italic></sub>, <monospace>RIFRAF</monospace> also computes the suffix alignment matrix <bold>B</bold>, where <italic>b<sub>i,j</sub></italic> is the score for aligning suffix <italic>s</italic><sub><italic>i</italic>&#x002B;1&#x2026;|<italic>s</italic>|</sub> to suffix <italic>c</italic><sub><italic>j</italic>&#x002B;1&#x2026;|<italic>c</italic>|</sub>. Note that <italic>a</italic><sub>|<italic>s</italic>|,|<italic>c</italic>|</sub> &#x003D; <italic>b</italic><sub>0,0</sub> is the score for the full alignment. For any <italic>j</italic>, that alignment score can also be computed from columns <bold>A</bold>.,<sub><italic>j</italic></sub> and <bold>B</bold><sub>.,<italic>j</italic></sub>:
<disp-formula id="eqn1">
<alternatives><graphic xlink:href="227520_eqn1.gif"/></alternatives></disp-formula>
</p>
<p>Modifying <italic>c<italic>j</italic></italic> leaves unchanged columns 0&#x2026;<italic>j</italic> &#x2013; 1 of <bold>A</bold>, and also leaves unchanged columns <italic>j</italic>&#x2026; <italic>&#x03BD;</italic> of <bold>B</bold>. Therefore, for all three types of mutations, computing the new score requires that at most only a single new column of <bold>A</bold> must be recalculated.
<list list-type="order">
<list-item><p>substitution at <italic>c<sub>j</sub></italic>: compute <bold>A</bold><sub>.,<italic>j</italic></sub>; new score is <italic>max<sub>i</sub></italic> (<italic>a<sub>i,j</sub></italic> &#x002B; <italic>b<sub>i,j</sub></italic>).</p></list-item>
<list-item><p>insertion after <italic>c<sub>j</sub></italic>: compute <bold>A</bold><sub>.,<italic>j</italic>&#x002B;1</sub>; new score is <italic>max<sub>i</sub></italic>(<italic>a</italic><sub><italic>i,j</italic>&#x002B;1</sub> &#x002B; <italic>b<sub>i,j</sub></italic>).</p></list-item>
<list-item><p>deletion of <italic>c<sub>j</sub></italic>: no new column necessary; new score is <italic>max<sub>i</sub></italic>(<italic>a</italic><sub><italic>i,j</italic>&#x2013;1</sub> &#x002B; <italic>b<sub>i,j</sub></italic>).</p></list-item>
</list>
</p>
<p>Using the forward and backward alignments, all possible mutations to the consensus can be scored in <italic>O</italic>(<italic>Ncs</italic>) operations.</p>
<p>During the alignment of the template and reference, additional columns must be recomputed to account for codon insertion and deletion moves.</p>
</sec>
<sec id="s2c4"><label>iii.4</label>
<title>Banding</title>
<p>Despite the improvements from using forward and backward alignments, each iteration is still approximately quadratic in the length of the consensus, assuming |<italic>c</italic>| &#x2248; |<italic>s</italic>|. Alignment banding [<xref ref-type="bibr" rid="c2">2</xref>, <xref ref-type="bibr" rid="c3">3</xref>] further reduces the number of operations per iteration. For a given bandwidth parameter <italic>b</italic>, the maximum usable column size in <bold>A</bold> and <bold>B</bold> is 2<italic>b</italic> &#x002B; ||<italic>s</italic>| &#x2013; |<italic>c</italic>|| &#x226A; |<italic>s</italic>|, so evaluating a possible mutation requires many fewer operations than recomputing the full column. Alignment moves are only allowed to originate inside the band, so alignment paths must stay within the band boundaries (see <xref ref-type="fig" rid="fig3">Figure 3</xref>). With banding, the time complexity per iteration becomes <inline-formula><alternatives><inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="227520_inline2.gif"/></alternatives></inline-formula> since ||<italic>s</italic>| &#x2013; |<italic>c</italic>|| grows like <inline-formula><alternatives><inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="227520_inline3.gif"/></alternatives></inline-formula> under reasonable assumptions.</p>
<fig id="fig3" position="float"><label>Figure 3:</label>
<caption><p><italic>Banded alignment. Alignments must stay within the banded region of the dynamic programming matrix</italic>.</p></caption>
<graphic xlink:href="227520_fig3.tif"/>
</fig>
<p><monospace>RIFRAF</monospace> dynamically increases the bandwidth if the number of differences in the banded alignment is sufficiently larger than the expected number of differences implied by the read's quality scores, under the assumption that the difference between the template candidate <italic>c</italic> and the true template is much smaller than the number of sequencing errors in <italic>s</italic>. Let <italic>r</italic> be the observed number of differences between <italic>s</italic> and <italic>c</italic>, and <italic>e</italic> be the expected number of errors computed from the quality scores <italic>p</italic>. If the value of <italic>r</italic> is in the upper tail of a Poisson distribution with mean parameter <italic>e</italic>, then the bandwidth is doubled and the alignments are re-computed. <italic>&#x03B1;</italic> controls the size of this upper tail probability, with a default value of 0.1.</p>
</sec>
<sec id="s2c5"><label>iii.5</label>
<title>Batching</title>
<p><monospace>RIFRAF</monospace> uses a variety of batching strategies to speed up convergence. If the number of reads is greater than a threshold <italic>k</italic> (default 5), the best <italic>k</italic> reads by error rate are fixed as the initial batch, and <monospace>RIFRAF</monospace> runs to convergence. This ensures that <monospace>RIFRAF</monospace> first converges without considering the many spurious mutations presumably present in less accurate reads. The resulting initial guess is further refined at the refinement stage, this time with a different random batch of size <italic>n<sub>batch</sub></italic> (default 20) for each iteration. Sequences are chosen for inclusion in the batch by sampling from a multinomial distribution of their error rates, parameterized by parameter <italic>&#x03C1;</italic> between 0 and 1. When <italic>&#x03C1;</italic> &#x003D; 1, all the weight is evenly distributed among the top <italic>n<sub>batch</sub></italic> sequences. Interpolating from <italic>p</italic> &#x003D; 1.0 to <italic>&#x03C1;</italic> &#x003D; 0.5, the probabilities become proportional to the read error rates. Interpolating from <italic>&#x03C1;</italic> &#x003D; 0.5 to <italic>&#x03C1;</italic> &#x003D; 0, the probabilities become uniform. By default, <italic>&#x03C1;</italic> &#x003D; 0.9<sup><italic>i</italic></sup>, where <italic>i</italic> is the number of iterations since random batching activated. Like the fixed batch, this strategy speeds up convergence by initially avoiding inaccurate reads, then gradually letting them contribute to resolve uncertain bases if necessary.</p>
<p>Ideally, <italic>n<sub>batch</sub></italic> is small enough to make each iteration fast, but large enough that RIFRAF converges stably. RIFRAF tries to detect if <italic>n<sub>batch</sub></italic> is too small by monitoring the change in score after each iteration. If the new score is worse than the old score by more than a certain percent (10&#x0025; by default), <italic>n<sub>batch</sub></italic> is increased to 2<italic>n<sup>batch</sup></italic>, then 3<italic>n<sup>batch</sup></italic>, etc.</p>
<p>Combining all of the previous optimizations, a single iteration's time complexity is reduced from <inline-formula><alternatives><inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="227520_inline4.gif"/></alternatives></inline-formula></p>
</sec>
</sec>
<sec id="s2d"><label>iv.</label>
<title>Increasing indel penalties</title>
<p>Whenever the algorithm converges to a consensus <italic>c<sup>i</sup></italic>, if single indel moves were used in computing <italic>S<sub>r</sub></italic> (&#x00B7;), the single insertion and deletion scores are multiplied by a parameter <italic>t<sub>indel</sub></italic>, increasingly encouraging the alignment with the reference to use only codon indels, thereby keeping <italic>c</italic> in-frame. This process repeats up to <italic>m</italic> times, so the maximum multiplier is (<italic>t<sub>indel</sub></italic>)<sup><italic>m</italic></sup>. If the penalty is large enough, the consensus will always be forced into the reference's reading frame, which is the default behavior. However, some consensus sequences really are out of frame relative to the reference. The indel penalties can be tuned so that RIFRAF correctly identifies true frameshifts, with a small risk of allowing some spurious ones.</p></sec>
<sec id="s2e"><label>v.</label>
<title>Multi-stage optimization</title>
<p>The full optimization procedure proceeds in stages, allowing RIFRAF to converge quickly by focusing on different objectives in different stages.
<list list-type="order">
<list-item><p>Initial stage: Do not use the reference. Propose all mutations to the consensus that appear in the pairwise alignments. Use the fixed batch, if available. If no reference was provided, stop after this step.</p></list-item>
<list-item><p>Frame correction stage: Use the full model, including the reference and reads. Propose indel candidate mutations that appearin the consensus-reference alignment. Increasingly penalize single indels in alignment of <italic>r</italic> and <italic>c</italic>. Use the fixed batch, if available.</p></list-item>
<list-item><p>Refinement stage: Propose only substitutions (no indels) to the consensus that appear in the pairwise alignments, no longer considering the reference. Use random batches, with decreasing <italic>&#x03C1;</italic>.</p></list-item>
</list>
</p>
<p>The initial stage quickly finds a good candidate consensus from the reads alone. The frame correction stage uses a reference to penalize indels that cause frame shift errors, correcting the reading frame of the template in a way that is maximally compatible with both the reads and the reference. Finally, the refinement stage ensures that the reference influences only the frame of c, and exerts no bias upon the nucleotides themselves. The final stage also fixes biases introduced by the fixed batch in the first two stages.</p>
</sec>
</sec>
<sec id="s3"><label>III.</label>
<title>Results</title>
<p>We compared <monospace>RIFRAF</monospace> to two other methods: <monospace>MAFFT</monospace> [<xref ref-type="bibr" rid="c10">10</xref>] followed by the standard per-column consensus, and <monospace>POA</monospace> [<xref ref-type="bibr" rid="c13">13</xref>] with the heaviest bundle consensus algorithm [<xref ref-type="bibr" rid="c12">12</xref>]. All three methods were run with and without reference-guided frame correction. <monospace>RIFRAF</monospace> natively per-forms frame correction, but only if it is given a reference sequence. To distinguish these models in this section, we refer to the model with no reference as <monospace>RIFRAF<sub>nr</sub></monospace>, and the model with a reference as <monospace>RIFRAF<sub>ref</sub></monospace>. <monospace>FrameBot</monospace> [<xref ref-type="bibr" rid="c24">24</xref>] was used for correcting results from <monospace>MAFFT</monospace> and <monospace>POA</monospace>; these are referred to as <monospace>MAFFT&#x005F;FB</monospace> and <monospace>POA&#x005F;FB</monospace>.</p>
<p>A full-length sequencing run of Pacific Biosciences SMRT sequencing on <italic>env</italic> from HIV-1 subtype B strain NL4-3 was used for the comparison [<xref ref-type="bibr" rid="c11">11</xref>]. The true sequence of NL4-3 is known, so results could be compared to the ground truth. The filtered data (available on FigShare<sup><xref ref-type="fn" rid="fn4">4</xref></sup>) contains 27,600 reads with expected error rate 1&#x0025; or better, which were further filtered and processed as follows. To make the problem more challenging and better reveal differences between methods, very high quality sequences were excluded (expected error rate &#x003C; 0.1&#x0025;). Short fragments and long reads (often concatemers) were discarded by filtering out sequences 25 bases shorter or longer than the median of 2,597. PacBio reads come in random orientations, so reads were converted to their reverse complement, if necessary. Extra bases around the amplicon were removed by aligning to NL4-3 <italic>env</italic> without penalizing terminal gaps, then trimming terminal insertions. After preprocessing, 9,473 sequences remained, with a mean error rate of 0.0015 (the distribution of errors appears in Figure S1). All experiments were run for 1,000 trials on randomly sampled reads.</p>
<sec id="s3a">
<title>Choice of reference</title>
<p>A set of reference sequences &#x2013; shown in Figure S2 &#x2013; were tested to investigate how frame correction accuracy deteriorates for distantly-related references. The results are shown in <xref ref-type="fig" rid="fig4">Figure 4</xref>. Nucleotide results from <monospace>MAFFT&#x005F;FB</monospace> and <monospace>POA&#x005F;FB</monospace> were both equally insensitive to the choice of reference, whereas <monospace>RIFRAF<sub>ref</sub></monospace>&#x2032;s results did degrade slightly. However, the reverse is true for the protein sequences, with <monospace>RIFRAF<sub>ref</sub></monospace>'s performance degrading by half an amino acid on average, and the others degrading by more than one. This difference indicates that <monospace>RIFRAF<sub>ref</sub></monospace> not only keeps the consensus in-frame, but also makes better choices of inferring which nucleotides are truly indel errors. Finally, <monospace>RIFRAF<sub>ref</sub></monospace> was the most accurate, regardless of choice of reference. As expected, <monospace>RIFRAF<sub>ref</sub></monospace>&#x2032;s frame correction strategy works best with a closely related reference, but these results show that it is capable of working even with a distant reference. Except where noted, the most distant reference, B.BR, was used for the rest of the results.</p>
<fig id="fig4" position="float"><label>Figure 4:</label>
<caption><p><italic>Edit distance for increasingly distant references. All methods do better with closely-related reference, but their rate of performance degradation is important because a related reference may not always be available. Run with N</italic> &#x003D; 3 <italic>full-length reads</italic>.</p></caption>
<graphic xlink:href="227520_fig4.tif"/>
</fig>
</sec>
<sec id="s3b">
<title>Number of sequences</title>
<p>Clusters of 2, 3, 4, 5, 6, 8, 10, 15, and 20 reads were randomly sampled for this experiment. The fraction of perfectly reconstructed consensus sequences per 1,000 trials appears in <xref ref-type="fig" rid="fig5">Figure 5a</xref>. For fewer than ten sequences, both versions of <monospace>RIFRAF</monospace> dominate the other corresponding methods. For instance, <monospace>RIFRAF<sub>ref</sub></monospace> gets over 90&#x0025; correct with access to only four reads. <monospace>POA&#x005F;FB</monospace> does not achieve similar results until <italic>N</italic> &#x003D; 8, and <monospace>MAFFT&#x005F;FB</monospace> does not until between <italic>N</italic> &#x003D; 10 and 15. Interestingly, <monospace>POA</monospace>'s results actually degrade significantly for <italic>n</italic> &#x003E; 6, but <monospace>POA&#x005F;FB</monospace> continues to improve, because <monospace>POA</monospace> tends to include extra bases on the ends of the consensus sequence which are then removed by <monospace>FrameBot</monospace>. These extra bases also affect the average number of nucleotide errors (<xref ref-type="fig" rid="fig5">Figure 5b</xref>): for <italic>N</italic> &#x003D; 20, <monospace>POA</monospace> averages one error per sequence, whereas all the other methods average none.</p>
<fig id="fig5" position="float"><label>Figure 5:</label>
<caption><p><italic>DNA results. Fraction of correct sequences (left) and mean edit distance between the consensus and the template (right) for increasing N</italic>.</p></caption>
<graphic xlink:href="227520_fig5.tif"/>
</fig>
<p>The average number of protein errors (<xref ref-type="fig" rid="fig6">Figure 6a</xref>) highlights the importance of frame correction. Frame shifts cause the translated consensus sequences to differ greatly from the true protein sequence, especially for <italic>n</italic> &#x003C; 15. For <italic>N</italic> &#x003D; 2, fully half of each protein sequence is wrong on average, regardless of method. Even for <italic>N</italic> &#x003D; 20, sequences from RIFRAF<sub>nr</sub> and POA contain about 100 errors. On the other hand, the corrected sequences (shown in <xref ref-type="fig" rid="fig6">Figure 6b</xref> for clarity) contain nearly no errors for <italic>n</italic> &#x003E; 10. <monospace>RIFRAF<sub>ref</sub></monospace> again performs best here, approaching zero errors even for <italic>N</italic> &#x003D; 3.</p>
<fig id="fig6" position="float"><label>Figure 6:</label>
<caption><p><italic>Same results as <xref ref-type="fig" rid="fig5">Fig. 5</xref>, but for the translated protein sequences. The fraction of correct sequences is not reproduced, since those figures are identical. The left figure show results for all methods. The right figure show the same data, zoomed to show the frame-corrected results. Note Y axis scale</italic>.</p></caption>
<graphic xlink:href="227520_fig6.tif"/>
</fig>
<p>Interestingly, frame correction of <monospace>MAFFT</monospace> and <monospace>POA</monospace> often made the nucleotide sequences <italic>less</italic> accurate, whereas it improves <monospace>RIFRAF<sub>ref</sub></monospace>. This result supports the idea that <monospace>RIFRAF</monospace>&#x2032;s method of integrating frame correction into the consensus algorithm makes it more accurate by allowing all reads to inform the correction process. <monospace>FrameBot</monospace>, which only has access to a single consensus sequence, cannot use the extra information in the reads, and therefore cannot achieve the same accuracy.</p>
<p>Execution times appear in <xref ref-type="fig" rid="fig7">Figure 7</xref>. Without frame correction, all three methods are comparable for small numbers of sequences, but <monospace>RIFRAF<sub>nr</sub></monospace> scales better, due to its batching scheme. Frame correction adds a constant factor to all three methods&#x2019; execution times. <monospace>RIFRAF<sub>ref</sub></monospace>&#x2032;s constant factor is larger, but, because it scales better, it overtakes the others between <italic>N</italic> &#x003D; 10 and <italic>N</italic> &#x003D; 15.</p>
<fig id="fig7" position="float"><label>Figure 7:</label>
<caption><p><italic>Mean execution time, varying both number of sequences (left) and sequence length (right). Note that intervals on the x-axis are not linear</italic>.</p></caption>
<graphic xlink:href="227520_fig7.tif"/>
</fig>
</sec>
<sec id="s3c">
<title>Sequence length</title>
<p><xref ref-type="fig" rid="fig7">Figure 7</xref> also shows execution time for varying sequence lengths. For more details on this experimental setup, see SI <xref ref-type="sec" rid="s2">section 2</xref>. <monospace>RIFRAF<sub>ref</sub></monospace> scales less well than the other methods, taking about twice as long as <monospace>MAFFT&#x005F;FB</monospace> and <monospace>POA&#x005F;FB</monospace> for the full-length sequences. However, it is comparable with the others at <italic>&#x2113;</italic> &#x003D; 900, and faster than the others for <italic>&#x2113;</italic> &#x003C; 600. This difference in speed is due to <monospace>RIFRAF</monospace>'s iterative approach, which requires recomputing parts of each pairwise alignment after every iteration.</p>
</sec>
<sec id="s3d">
<title>Detecting true frameshifts</title>
<p>In the other experiments, strict frameshift penalties were used to ensure the consensus stays in-frame. However, sometimes frameshifts are biologically plausible, such as in integrated (but nonfunctional) proviral Env sequences, or in the cytoplasmic tail of Env leading to a truncation, but preserving infectivity. If true frameshifts may occur in the template sequence, it may be preferable to relax this frameshift penalty. <monospace>RIFRAF<sub>ref</sub></monospace> can be tuned to accept frameshift indels with enough support in the reads, with only a small increase in the frequency of spurious frameshift indels. To demonstrate this, single base insertions and deletions were added to NL4-3 in both homopolymer and nonhomopolymer regions (details in SI <xref ref-type="sec" rid="s3">section 3</xref>). <italic>t<sub>indel</sub></italic> was set to 1.05, and the max frameshift indel penalty multiplier <italic>m</italic> varied from 0 to 12. We call an in-frame sequence a &#x201C;positive&#x201D;, so increasing <italic>m</italic> increases the false positive rate by forcing sequences with real frameshifts incorrectly into frame. To get the true positive rate, <monospace>RIFRAF<sub>ref</sub></monospace> was also run on the unmodified sequences. Note that while we introduce only a single true indel into our &#x201C;negative&#x201D; cases, the analysis is always at the whole-sequence level. We are not just detecting the presence or absence of the specific indel we introduce. Thus to achieve a high true positive and low false positive rate, <monospace>RIFRAF<sub>ref</sub></monospace> must successfully ignore spurious indels at <italic>any</italic> position in the &#x201C;positive&#x201D; cases, while successfully identifying the real indel we introduce in each &#x201C;negative&#x201D; case. The resulting ROC curves, which appear in <xref ref-type="fig" rid="fig8">Figure 8</xref> for <italic>N</italic> &#x2208; 3,5,10, show that <monospace>RIFRAF<sub>ref</sub></monospace> can find true indels while controlling the false positive rate, using either a closely related reference or a distant one. A useful trade-off occurs for <italic>m</italic> &#x003D; 6, which scores close to the maximum true positive rate while keeping the false positive rate close to zero.</p>
<fig id="fig8" position="float"><label>Figure 8:</label>
<caption><p><italic>ROC curves for true indel experiments, with max indel penalty multiplier m varying from 0 to 12. The orange point denotes results from <monospace>RIFRAF<sub>nr</sub></monospace>, while the remainder of the curve was generated by <monospace>RIFRAF<sub>ref</sub></monospace>. The green point corresponds to a max indel penalty multiplier m = 6. Both a related reference (HXB2, blue) and distant reference (B.BR, red) were used</italic>.</p></caption>
<graphic xlink:href="227520_fig8.tif"/>
</fig>
<p>In agreement with the accuracy results, a more closely related reference (HXB2) improved inference for <italic>N</italic> &#x003D; 3 for this task. As expected, real homopolymer indels in homopolymer regions are harder to discriminate than non-homopolymer indels (See SI <xref ref-type="sec" rid="s3">section 3</xref> for more detailed results).</p>
</sec>
</sec>
<sec id="s4"><label>IV.</label>
<title>Conclusion</title>
<p><monospace>RIFRAF</monospace> uses quality scores and a reference sequence to infer accurate frame-corrected consensus sequences. It can often find the correct consensus, even from small numbers of reads or with a distant reference, as shown in our experimental results. <monospace>RIFRAF</monospace> with frame correction can be slower than taking a consensus from a multiple sequence alignment, but in experiments with real SMRT sequences it finds consensus sequences that are significantly more accurate. The benefits of using a reference to reduce frameshift errors are especially apparent when comparing translated amino acid sequences, where a single frameshift causes the entire downstream sequence to be incorrect. Finally, <monospace>RIFRAF</monospace> can detect and retain true frameshifts during frame correction, and, to our knowledge, is the only method capable of this.</p>
<p>While <monospace>RIFRAF</monospace> performs well with distantly related reference sequences, performance is improved when using closely related references. However, when sequencing diverse populations, we note that it is always possible to first infer a set of autologous sequences from clusters or primer ID bundles that have a large number of reads, and so should be accurate. These can then be used as references to correct the reading frame of the less-represented members of the population, providing an improved accuracy over just using a more distantly related reference. We recommend using this strategy whenever possible.</p>
<p><monospace>RIFRAF</monospace> can improve the ability to resolve minority variants in sequenced populations. Its ability to find results comparable to <monospace>MAFFT</monospace> with three times fewer reads will be essential for identifying minority variants in the population with greater precision. More generally, <monospace>RIFRAF</monospace> will be useful whenever an accurate consensus sequence must be inferred from a small number of full-length sequences, especially when quality scores and a reference sequence are available.</p>
<p>When sequencing any population, it is often advisable to sequence a clonal representative of that population first (NL4-3 <italic>env</italic> here), to investigate the sequencing performance for that case. We recommend using such sequence datasets to investigate the behavior of <monospace>RIFRAF</monospace> on new genes, especially if the user seeks to detect real frameshifts. To this end, we provide a Jupyter notebook that allows one to replicate the accuracy and ROC analyses from this manuscript on any clonal amplicon dataset.</p>
<p><monospace>RIFRAF</monospace> will continue to be developed along multiple lines. First, the current approach for performing frame correction needs to be faster, to keep pace with the increasing volume of available sequence data. Further work needs to be done to speed it up via optimization or algorithmic advances. Possible approaches include: re-using partial alignments, speeding up alignments with k-mer seeding, and only correcting the frame of obviously problematic regions. Another improvement would include amino acid matching penalties in the reference-to-template alignment, which would allow even more distantly related reference sequences to be used, where the nucleotide homology has been completely obliterated. Another useful feature would be to infer calibrated quality scores for the consensus sequence, in order to communicate uncertain regions to the user. Finally, <monospace>RIFRAF</monospace> is extensible to other systems and sequencing technologies. In particular, we plan to investigate its behavior and tune its error model for Oxford Nanopore data, and to extend the method to support amplicons containing both non-coding and coding regions, which may contain different (potentially overlapping) reading frames.</p>
<p>The <monospace>RIFRAF</monospace> source code is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/MurrellGroup/Rifraf.jl">https://github.com/MurrellGroup/Rifraf.jl</ext-link>.</p>
</sec>
</body>
<back>
<ack>
<title>Acknowledgements</title>
<p>We are grateful to Sasha Murrell for copy editing.</p>
</ack>
<sec id="s5" sec-type="funding">
<title>Funding</title>
<p>Research reported here was supported by the National Institute Of Allergy And Infectious Diseases of the National Institutes of Health under Award Numbers R00AI120851 and R01AI120009, and in part by the University of California, San Diego Center for AIDS Research (P30AI036214). K.E. was supported in part by R21AI115701. The content is solely the responsibility of the authors and does not necessarily represent the official views of the National Institutes of Health.</p>
</sec>
<ref-list>
<title>References</title>
<ref id="c1"><label>1.</label><mixed-citation publication-type="journal"><string-name><given-names>Jeff</given-names> <surname>Bezanson</surname></string-name>, <string-name><given-names>Alan</given-names> <surname>Edelman</surname></string-name>, <string-name><given-names>Stefan</given-names> <surname>Karpinski</surname></string-name>, <string-name><given-names>and Viral B</given-names> <surname>Shah</surname></string-name>. <article-title>Julia: A fresh approach to numerical computing</article-title>. <source>SIAM Review</source>, <volume>59</volume>(<issue>1</issue>):<fpage>65</fpage>&#x2013;<lpage>98</lpage>, <year>2017</year>.</mixed-citation></ref>
<ref id="c2"><label>2.</label><mixed-citation publication-type="journal"><string-name><given-names>Kun Mao</given-names> <surname>Chao</surname></string-name>, <string-name><given-names>Ross C.</given-names> <surname>Hardison</surname></string-name>, and <string-name><given-names>Webb</given-names> <surname>Miller</surname></string-name>. <article-title>Constrained sequence alignment</article-title>. <source>Bulletin of Mathematical Biology</source>, <volume>55</volume>(<issue>3</issue>):<fpage>503</fpage>&#x2013;<lpage>524</lpage>, <year>1993</year>.</mixed-citation></ref>
<ref id="c3"><label>3.</label><mixed-citation publication-type="journal"><string-name><given-names>Kun Mao</given-names> <surname>Chao</surname></string-name>, <string-name><given-names>William R.</given-names> <surname>Pearson</surname></string-name>, and <string-name><given-names>Webb</given-names> <surname>Miller</surname></string-name>. <article-title>Aligning two sequences within a specified diagonal band</article-title>. <source>Bioinformatics</source>, <volume>8</volume>(<issue>5</issue>):<fpage>481</fpage>&#x2013;<lpage>487</lpage>, <year>1992</year>.</mixed-citation></ref>
<ref id="c4"><label>4.</label><mixed-citation publication-type="journal"><string-name><given-names>Chen-shan</given-names> <surname>Chin</surname></string-name>, <string-name><given-names>David H</given-names> <surname>Alexander</surname></string-name>, <string-name><given-names>Patrick</given-names> <surname>Marks</surname></string-name>, <string-name><given-names>Aaron A</given-names> <surname>Klammer</surname></string-name>, <string-name><given-names>James</given-names> <surname>Drake</surname></string-name>, <string-name><given-names>Cheryl</given-names> <surname>Heiner</surname></string-name>, <string-name><given-names>Alicia</given-names> <surname>Clum</surname></string-name>, <string-name><given-names>Alex</given-names> <surname>Copeland</surname></string-name>, <string-name><given-names>John</given-names> <surname>Huddleston</surname></string-name>, <string-name><given-names>Evan E</given-names> <surname>Eichler</surname></string-name>, <string-name><given-names>Stephen W</given-names> <surname>Turner</surname></string-name>, and <string-name><given-names>Jonas</given-names> <surname>Korlach</surname></string-name>. <source>Nonhybrid, finished microbial genome assemblies from long-read SMRT sequencing data</source>. <volume>10</volume>(<issue>6</issue>), <year>2013</year>.</mixed-citation></ref>
<ref id="c5"><label>5.</label><mixed-citation publication-type="journal"><string-name><given-names>Nan</given-names> <surname>Du</surname></string-name> and <string-name><given-names>Yanni</given-names> <surname>Sun</surname></string-name>. <article-title>Improve homology search sensitivity of PacBio data by correcting frameshifts</article-title>. In <source>Bioinformatics</source>, volume <volume>32</volume>, pp. <fpage>i529</fpage>&#x2013;<lpage>i537</lpage>, <year>2016</year>.</mixed-citation></ref>
<ref id="c6"><label>6.</label><mixed-citation publication-type="journal"><string-name><given-names>J.</given-names> <surname>Eid</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Fehr</surname></string-name>, <string-name><given-names>J.</given-names> <surname>Gray</surname></string-name>, <string-name><given-names>K.</given-names> <surname>Luong</surname></string-name>, <string-name><given-names>J.</given-names> <surname>Lyle</surname></string-name>, <string-name><given-names>G.</given-names> <surname>Otto</surname></string-name>, <string-name><given-names>P.</given-names> <surname>Peluso</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Rank</surname></string-name>, <string-name><given-names>P.</given-names> <surname>Baybayan</surname></string-name>, <string-name><given-names>B.</given-names> <surname>Bettman</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Bibillo</surname></string-name>, <string-name><given-names>K.</given-names> <surname>Bjornson</surname></string-name>, <string-name><given-names>B.</given-names> <surname>Chaudhuri</surname></string-name>, <string-name><given-names>F.</given-names> <surname>Christians</surname></string-name>, <string-name><given-names>R.</given-names> <surname>Cicero</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Clark</surname></string-name>, <string-name><given-names>R.</given-names> <surname>Dalal</surname></string-name>, <string-name><given-names>A.</given-names> <surname>DeWinter</surname></string-name>, <string-name><given-names>J.</given-names> <surname>Dixon</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Foquet</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Gaertner</surname></string-name>, <string-name><given-names>P.</given-names> <surname>Hardenbol</surname></string-name>, <string-name><given-names>C.</given-names> <surname>Heiner</surname></string-name>, <string-name><given-names>K.</given-names> <surname>Hester</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Holden</surname></string-name>, <string-name><given-names>G.</given-names> <surname>Kearns</surname></string-name>, <string-name><given-names>X.</given-names> <surname>Kong</surname></string-name>, <string-name><given-names>R.</given-names> <surname>Kuse</surname></string-name>, <string-name><given-names>Y.</given-names> <surname>Lacroix</surname></string-name>, <string-name><given-names>S.</given-names> <surname>Lin</surname></string-name>, <string-name><given-names>P.</given-names> <surname>Lundquist</surname></string-name>, <string-name><given-names>C.</given-names> <surname>Ma</surname></string-name>, <string-name><given-names>P.</given-names> <surname>Marks</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Maxham</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Murphy</surname></string-name>, <string-name><given-names>I.</given-names> <surname>Park</surname></string-name>, <string-name><given-names>T.</given-names> <surname>Pham</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Phillips</surname></string-name>, <string-name><given-names>J.</given-names> <surname>Roy</surname></string-name>, <string-name><given-names>R.</given-names> <surname>Sebra</surname></string-name>, <string-name><given-names>G.</given-names> <surname>Shen</surname></string-name>, <string-name><given-names>J.</given-names> <surname>Sorenson</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Tomaney</surname></string-name>, <string-name><given-names>K.</given-names> <surname>Travers</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Trulson</surname></string-name>, <string-name><given-names>J.</given-names> <surname>Vieceli</surname></string-name>, <string-name><given-names>J.</given-names> <surname>Wegener</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Wu</surname></string-name>, <string-name><given-names>A.</given-names> <surname>Yang</surname></string-name>, <string-name><given-names>D.</given-names> <surname>Zaccarin</surname></string-name>, <string-name><given-names>P.</given-names> <surname>Zhao</surname></string-name>, <string-name><given-names>F.</given-names> <surname>Zhong</surname></string-name>, <string-name><given-names>J.</given-names> <surname>Korlach</surname></string-name>, and <string-name><given-names>S.</given-names> <surname>Turner</surname></string-name>. <article-title>Real-Time DNA Sequencing from Single Polymerase Molecules</article-title>. <source>Science</source>, <volume>323</volume>(<issue>5910</issue>):<fpage>133</fpage>&#x2013;<lpage>138</lpage>, <year>2009</year>.</mixed-citation></ref>
<ref id="c7"><label>7.</label><mixed-citation publication-type="journal"><string-name><given-names>Cassandra B</given-names> <surname>Jabara</surname></string-name>, <string-name><given-names>Corbin D</given-names> <surname>Jones</surname></string-name>, <string-name><given-names>Jeffrey</given-names> <surname>Roach</surname></string-name>, <string-name><given-names>Jeffrey A</given-names> <surname>Anderson</surname></string-name>, and <string-name><given-names>Ronald</given-names> <surname>Swanstrom</surname></string-name>. <article-title>Accurate sampling and deep sequencing of the hiv-1 protease gene using a primer id</article-title>. <source>Proceedings of the National Academy of Sciences</source>, <volume>108</volume>(<issue>50</issue>):<fpage>20166</fpage>&#x2013;<lpage>20171</lpage>, <year>2011</year>.</mixed-citation></ref>
<ref id="c8"><label>8.</label><mixed-citation publication-type="journal"><string-name><given-names>Kazutaka</given-names> <surname>Katoh</surname></string-name>, <string-name><given-names>Kazuharu</given-names> <surname>Misawa</surname></string-name>, <string-name><given-names>Keiichi</given-names> <surname>Kuma</surname></string-name>, and <string-name><given-names>Takashi</given-names> <surname>Miyata</surname></string-name>. <article-title>MAFFT: a novel method for rapid multiple sequence alignment based on fast Fourier transform</article-title>. <source>Nucleic acids research</source>, <volume>30</volume>(<issue>14</issue>):<fpage>3059</fpage>&#x2013;<lpage>3066</lpage>, <year>2002</year>.</mixed-citation></ref>
<ref id="c9"><label>9.</label><mixed-citation publication-type="journal"><string-name><given-names>Kazutaka</given-names> <surname>Katoh</surname></string-name> and <string-name><given-names>Daron M.</given-names> <surname>Standley</surname></string-name>. <article-title>MAFFT multiple sequence alignment software version 7: Improvements in performance and usability</article-title>. <source>Molecular Biology and Evolution</source>, <volume>30</volume>(<issue>4</issue>):<fpage>772</fpage>&#x2013;<lpage>780</lpage>, <year>2013</year>.</mixed-citation></ref>
<ref id="c10"><label>10.</label><mixed-citation publication-type="journal"><string-name><given-names>Kazutaka</given-names> <surname>Katoh</surname></string-name> and <string-name><given-names>Daron M</given-names> <surname>Standley</surname></string-name>. <article-title>Mafft multiple sequence alignment software version 7: improvements in performance and usability</article-title>. <source>Molecular biology and evolution</source>, <volume>30</volume>(<issue>4</issue>):<fpage>772</fpage>&#x2013;<lpage>780</lpage>, <year>2013</year>.</mixed-citation></ref>
<ref id="c11"><label>11.</label><mixed-citation publication-type="journal"><string-name><given-names>Melissa Laird</given-names> <surname>Smith</surname></string-name>, <string-name><given-names>Ben</given-names> <surname>Murrell</surname></string-name>, <string-name><given-names>Kemal</given-names> <surname>Eren</surname></string-name>, <string-name><given-names>Caroline</given-names> <surname>Ignacio</surname></string-name>, <string-name><given-names>Elise</given-names> <surname>Landais</surname></string-name>, <string-name><given-names>Steven</given-names> <surname>Weaver</surname></string-name>, <string-name><given-names>Pham</given-names> <surname>Phung</surname></string-name>, <string-name><given-names>Colleen</given-names> <surname>Ludka</surname></string-name>, <string-name><given-names>Lance</given-names> <surname>Hepler</surname></string-name>, <string-name><given-names>Gemma</given-names> <surname>Caballero</surname></string-name>, <string-name><given-names>Tristan</given-names> <surname>Pollner</surname></string-name>, <string-name><given-names>Yan</given-names> <surname>Guo</surname></string-name>, <string-name><given-names>Douglas</given-names> <surname>Richman</surname></string-name>, <string-name><given-names>Pascal</given-names> <surname>Poignard</surname></string-name>, <string-name><given-names>Ellen E.</given-names> <surname>Paxinos</surname></string-name>, <string-name><given-names>Sergei L.</given-names> <surname>Kosakovsky Pond</surname></string-name>, and <string-name><given-names>Davey M.</given-names> <surname>Smith</surname></string-name>. <article-title>Rapid Sequencing of Complete env Genes from Primary HIV-1 Samples</article-title>. <source>Virus Evolution</source>, <volume>2</volume>(<issue>2</issue>), <year>2016</year>.</mixed-citation></ref>
<ref id="c12"><label>12.</label><mixed-citation publication-type="journal"><string-name><given-names>Christopher</given-names> <surname>Lee</surname></string-name>. <article-title>Generating consensus sequences from partial order multiple sequence alignment graphs</article-title>. <source>Bioinformatics</source>, <volume>19</volume>(<issue>8</issue>):<fpage>999</fpage>&#x2013;<lpage>1008</lpage>, <year>2003</year>.</mixed-citation></ref>
<ref id="c13"><label>13.</label><mixed-citation publication-type="journal"><string-name><given-names>Christopher</given-names> <surname>Lee</surname></string-name>, <string-name><given-names>Catherine</given-names> <surname>Grasso</surname></string-name>, and <string-name><given-names>Mark F.</given-names> <surname>Sharlow</surname></string-name>. <article-title>Multiple sequence alignment using partial order graphs</article-title>. <source>Bioinformatics</source>, <volume>18</volume>(<issue>3</issue>):<fpage>452</fpage>&#x2013;<lpage>464</lpage>, <year>2002</year>.</mixed-citation></ref>
<ref id="c14"><label>14.</label><mixed-citation publication-type="journal"><string-name><given-names>Nicholas J</given-names> <surname>Loman</surname></string-name>, <string-name><given-names>Joshua</given-names> <surname>Quick</surname></string-name>, and <string-name><given-names>Jared T</given-names> <surname>Simpson</surname></string-name>. <article-title>A complete bacterial genome assembled de novo using only nanopore sequencing data</article-title>. <source>Nature Methods</source>, <volume>12</volume>(<issue>8</issue>):<fpage>733</fpage>&#x2013;<lpage>735</lpage>, <year>2015</year>.</mixed-citation></ref>
<ref id="c15"><label>15.</label><mixed-citation publication-type="journal"><string-name><given-names>Niranjan</given-names> <surname>Nagarajan</surname></string-name> and <string-name><given-names>Mihai</given-names> <surname>Pop</surname></string-name>. <article-title>Sequence assembly demystified</article-title>. <source>Nature Reviews Genetics</source>, <volume>14</volume>(<issue>3</issue>):<fpage>157</fpage>&#x2013;<lpage>167</lpage>, <year>2013</year>.</mixed-citation></ref>
<ref id="c16"><label>16.</label><mixed-citation publication-type="journal"><string-name><given-names>Saul B.</given-names> <surname>Needleman</surname></string-name> and <string-name><given-names>Christian D.</given-names> <surname>Wunsch</surname></string-name>. <article-title>A general method applicable to the search for similiarities in the amino acid sequence of two proteins</article-title>. <source>Journal of molecular biology</source>, <volume>48</volume>(<issue>3</issue>):<fpage>443</fpage>&#x2013;<lpage>453</lpage>, <year>1970</year>.</mixed-citation></ref>
<ref id="c17"><label>17.</label><mixed-citation publication-type="journal"><string-name><given-names>Sankar K.</given-names> <surname>Pal</surname></string-name>, <string-name><given-names>Sanghamitra</given-names> <surname>Bandyopadhyay</surname></string-name>, and <string-name><given-names>Shubhra Sankar</given-names> <surname>Ray</surname></string-name>. <article-title>Evolutionary computation in bioinformatics: A review</article-title>. <source>IEEE Transactions on Systems, Man and Cybernetics Part C: Applications and Reviews</source>, <volume>36</volume>(<issue>5</issue>):<fpage>601</fpage>&#x2013;<lpage>615</lpage>, <year>2006</year>.</mixed-citation></ref>
<ref id="c18"><label>18.</label><mixed-citation publication-type="journal"><string-name><given-names>Konrad</given-names> <surname>Paszkiewicz</surname></string-name> and <string-name><given-names>David J.</given-names> <surname>Studholme</surname></string-name>. <article-title>De novo assembly of short sequence reads</article-title>. <source>Briefings in Bioinformatics</source>, <volume>11</volume>(<issue>5</issue>):<fpage>457</fpage>&#x2013;<lpage>472</lpage>, <year>2010</year>.</mixed-citation></ref>
<ref id="c19"><label>19.</label><mixed-citation publication-type="journal"><string-name><given-names>Pervez M</given-names> <surname>Babar</surname></string-name>, <string-name><given-names>Asif</given-names> <surname>Nadeem</surname></string-name>, <string-name><given-names>M</given-names> <surname>Aslam</surname></string-name>, <string-name><given-names>A</given-names> <surname>Awan</surname></string-name>, <string-name><given-names>Naeem</given-names> <surname>Aslam</surname></string-name>, <string-name><given-names>Tanveer</given-names> <surname>Hussain</surname></string-name>, <string-name><given-names>Nasir</given-names> <surname>Naveed</surname></string-name>, <string-name><given-names>Salman</given-names> <surname>Qadri</surname></string-name>, <string-name><given-names>Usman</given-names> <surname>Waheed</surname></string-name>, and <string-name><given-names>Muhammad</given-names> <surname>Shoaib</surname></string-name>. <article-title>Evaluating the Accuracy and Efficiency of Multiple Sequence Alignment Methods</article-title>. <source>Evolutionary Bioinformatics</source>, p. <fpage>205</fpage>, <month>dec</month> <year>2014</year>.</mixed-citation></ref>
<ref id="c20"><label>20.</label><mixed-citation publication-type="journal"><string-name><given-names>Peter</given-names> <surname>Rice</surname></string-name>, <string-name><given-names>Ian</given-names> <surname>Longden</surname></string-name>, and <string-name><given-names>Alan</given-names> <surname>Bleasby</surname></string-name>. <source>Emboss: the european molecular biology open software suite</source>, <year>2000</year>.</mixed-citation></ref>
<ref id="c21"><label>21.</label><mixed-citation publication-type="journal"><string-name><given-names>Sergey L.</given-names> <surname>Sheetlin</surname></string-name>, <string-name><given-names>Yonil</given-names> <surname>Park</surname></string-name>, <string-name><given-names>Martin C.</given-names> <surname>Frith</surname></string-name>, and <string-name><given-names>John L.</given-names> <surname>Spouge</surname></string-name>. <article-title>Frameshift alignment: Statistics and post-genomic applications</article-title>. <source>Bioinformatics</source>, <volume>30</volume>(<issue>24</issue>):<fpage>3575</fpage>&#x2013;<lpage>3582</lpage>, <year>2014</year>.</mixed-citation></ref>
<ref id="c22"><label>22.</label><mixed-citation publication-type="journal"><string-name><given-names>Daniel J</given-names> <surname>Sheward</surname></string-name>, <string-name><given-names>Ben</given-names> <surname>Murrell</surname></string-name>, and <string-name><given-names>Carolyn</given-names> <surname>Williamson</surname></string-name>. <article-title>Degenerate primer ids and the birthday problem</article-title>. <source>Proceedings of the National Academy of Sciences</source>, <volume>109</volume>(<issue>21</issue>):<fpage>E1330</fpage>&#x2013;<lpage>E1330</lpage>, <year>2012</year>.</mixed-citation></ref>
<ref id="c23"><label>23.</label><mixed-citation publication-type="journal"><string-name><given-names>Temple F.</given-names> <surname>Smith</surname></string-name> and <string-name><given-names>Michael S.</given-names> <surname>Waterman</surname></string-name>. <article-title>Comparison of biosequences</article-title>. <source>Advances in Applied Mathematics</source>, <volume>2</volume>(<issue>4</issue>):<fpage>482</fpage>&#x2013;<lpage>489</lpage>, <year>1981</year>.</mixed-citation></ref>
<ref id="c24"><label>24.</label><mixed-citation publication-type="journal"><string-name><given-names>Qiong</given-names> <surname>Wang</surname></string-name>, <string-name><given-names>J. F.</given-names> <surname>Quensen</surname></string-name>, <string-name><given-names>Jordan A</given-names> <surname>Fish</surname></string-name>, T. <string-name><given-names>Kwon</given-names> <surname>Lee</surname></string-name>, <string-name><given-names>Yanni</given-names> <surname>Sun</surname></string-name>, <string-name><given-names>James M.</given-names> <surname>Tiedje</surname></string-name>, and <string-name><given-names>James R.</given-names> <surname>Cole</surname></string-name>. <article-title>Ecological Patterns of nifH Genes in Four Terrestrial Climatic Zones Explored with Targeted Metagenomics Using FrameBot, a New Informatics Tool</article-title>. <source>mBio</source>, <volume>4</volume>(<issue>5</issue>):<fpage>e00592&#x2013;13&#x2013;e00592&#x2013;13</fpage>, <month>sep</month> <year>2013</year>.</mixed-citation></ref>
<ref id="c25"><label>25.</label><mixed-citation publication-type="journal"><string-name><given-names>Y</given-names> <surname>Zhang</surname></string-name> and <string-name><given-names>Y</given-names> <surname>Sun</surname></string-name>. <article-title>HMM-FRAME: accurate protein domain classification for metagenomic sequences containing frameshift errors</article-title>. <source>Bmc Bioinformatics</source>, <volume>12</volume>:<fpage>198</fpage>, <year>2011</year>.</mixed-citation></ref>
</ref-list>
<fn-group>
<fn id="fn1"><label><sup>1</sup></label><p><ext-link ext-link-type="uri" xlink:href="https://sourceforge.net/projects/poamsa/">https://sourceforge.net/projects/poamsa/</ext-link></p></fn>
<fn id="fn2"><label><sup>2</sup></label><p><ext-link ext-link-type="uri" xlink:href="https://github.com/PacificBiosciences/pbdagcon">https://github.com/PacificBiosciences/pbdagcon</ext-link></p></fn>
<fn id="fn3"><label><sup>3</sup></label><p><ext-link ext-link-type="uri" xlink:href="https://github.com/PacificBiosciences/GenomicConsensus">https://github.com/PacificBiosciences/GenomicConsensus</ext-link></p></fn>
<fn id="fn4"><label><sup>4</sup></label><p><ext-link ext-link-type="uri" xlink:href="https://doi.org/10.6084/m9.figshare.5643247">https://doi.org/10.6084/m9.figshare.5643247</ext-link></p></fn></fn-group>
</back>
</article>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.2d1 20170631//EN" "JATS-archivearticle1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" article-type="article" dtd-version="1.2d1" specific-use="production" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">BIORXIV</journal-id>
<journal-title-group>
<journal-title>bioRxiv</journal-title>
<abbrev-journal-title abbrev-type="publisher">bioRxiv</abbrev-journal-title>
</journal-title-group>
<publisher>
<publisher-name>Cold Spring Harbor Laboratory</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1101/087395</article-id>
<article-version>1.1</article-version>
<article-categories>
<subj-group subj-group-type="author-type">
<subject>Regular Article</subject>
</subj-group>
<subj-group subj-group-type="heading">
<subject>New Results</subject>
</subj-group>
<subj-group subj-group-type="hwp-journal-coll">
<subject>Neuroscience</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>T-SNE visualization of large-scale neural recordings</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<name>
<surname>Dimitriadis</surname>
<given-names>George</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="corresp" rid="cor1">&#x002A;</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Neto</surname>
<given-names>Joana</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Kampff</surname>
<given-names>Adam R.</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
</contrib>
<aff id="a1"><label>1</label><institution>Sainsbury Wellcome Centre, UCL</institution>, London, <country>UK</country></aff>
</contrib-group>
<author-notes>
<corresp id="cor1"><label>&#x002A;</label><email>g.dimitriadis@ucl.ac.uk</email></corresp>
</author-notes>
<pub-date pub-type="epub">
<year>2016</year>
</pub-date>
<elocation-id>087395</elocation-id>
<history>
<date date-type="received">
<day>12</day>
<month>11</month>
<year>2016</year>
</date>
<date date-type="accepted">
<day>14</day>
<month>11</month>
<year>2016</year>
</date>
</history>
<permissions>
<copyright-statement>&#x00A9; 2016, Posted by Cold Spring Harbor Laboratory</copyright-statement>
<copyright-year>2016</copyright-year>
<license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by/4.0/"><license-p>This pre-print is available under a Creative Commons License (Attribution 4.0 International), CC BY 4.0, as described at <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link></license-p></license>
</permissions>
<self-uri xlink:href="087395.pdf" content-type="pdf" xlink:role="full-text"/>
<abstract>
<title>Abstract</title>
<p>Electrophysiology is entering the era of &#x2018;Big Data&#x2019;. Multiple probes, each with hundreds to thousands of individual electrodes, are now capable of simultaneously recording from many brain regions. The major challenge confronting these new technologies is transforming the raw data into physiologically meaningful signals, i.e. single unit spikes. Sorting the spike events of individual neurons from a spatiotemporally dense sampling of the extracellular electric field is a problem that has attracted much attention [<xref ref-type="bibr" rid="c22">22</xref>, <xref ref-type="bibr" rid="c23">23</xref>], but is still far from solved. Current methods still rely on human input and thus become unfeasible as the size of the data sets grow exponentially.</p>
<p>Here we introduce the t-student stochastic neighbor embedding (t-sne) dimensionality reduction method [<xref ref-type="bibr" rid="c27">27</xref>] as a visualization tool in the spike sorting process. T-sne embeds the n-dimensional extracellular spikes (n = number of features by which each spike is decomposed) into a low (usually two) dimensional space. We show that such embeddings, even starting from different feature spaces, form obvious clusters of spikes that can be easily visualized and manually delineated with a high degree of precision. We propose that these clusters represent single units and test this assertion by applying our algorithm on labeled data sets both from hybrid [<xref ref-type="bibr" rid="c23">23</xref>] and paired juxtacellular/extracellular recordings [<xref ref-type="bibr" rid="c15">15</xref>]. We have released a graphical user interface (gui) written in python as a tool for the manual clustering of the t-sne embedded spikes and as a tool for an informed overview and fast manual curration of results from other clustering algorithms. Furthermore, the generated visualizations offer evidence in favor of the use of probes with higher density and smaller electrodes. They also graphically demonstrate the diverse nature of the sorting problem when spikes are recorded with different methods and arise from regions with different background spiking statistics.</p>
</abstract>
<counts>
<page-count count="22"/>
</counts>
</article-meta>
</front>
<body>
<sec id="s1">
<label>1</label>
<title>Introduction</title>
<p>It is neuroscience dogma that the brain&#x2019;s computational mechanics are implemented by the complex dynamics of its spiking neural networks. As a consequence, detailed knowledge of the spiking activity for &#x201D;as-many-neurons-as-possible&#x201D; during behavior is seen as essential to understand how the brain receives and transforms information. Electrophysiological methods that record spiking activity extracellularly have been one of the most significant tools for exploring the correlations between behavior and neural activity and there has been a constant drive to record from more neurons, for longer times, from a host of neural regions, in diverse physiological conditions, and from many different species. This trend was recently accelerated by new microfabricated recording probes that extend the standard single electrode and tetrode devices [<xref ref-type="bibr" rid="c19">19</xref>] with integrated electronics to produce devices with thousands of recording sites [<xref ref-type="bibr" rid="c24">24</xref>, <xref ref-type="bibr" rid="c1">1</xref>].</p>
<p>The new generation of recording tools brings with it the challenge of extracting meaningful physiological signals from the resulting (big) data sets. In the case of extracellular probe recordings, that usually means transforming the voltages measured at the electrode sites into spiking activity of the nearby neurons. The importance of accurate spike sorting stems from a number of ideas on how cell spiking contributes to brain functions. For example, competent sorting is required to test for sparse coding in memory function [<xref ref-type="bibr" rid="c6">6</xref>] or to assess the diverse responses of neighboring cells, important in theories of concept [<xref ref-type="bibr" rid="c21">21</xref>] and place cells [<xref ref-type="bibr" rid="c20">20</xref>].</p>
<p>The original attempts to spike sort greatly benefited from the development of the tetrode and its ability to simultaneously monitor the spiking signal of nearby neurons from multiple locations (i.e. 4) [<xref ref-type="bibr" rid="c10">10</xref>, <xref ref-type="bibr" rid="c8">8</xref>, <xref ref-type="bibr" rid="c29">29</xref>]. It has since become clear that dense electrode configurations, in which that same neuron is detected by multiple electrodes, generally improve sorting [<xref ref-type="bibr" rid="c13">13</xref>, <xref ref-type="bibr" rid="c4">4</xref>], and hence the push for an increase in the electrode density of modern probe designs. Today new methodologies have evolved to work with the next generation of multi-electrode probes and to try and address the problem of the exploding size and complexity of the data sets [<xref ref-type="bibr" rid="c23">23</xref>, <xref ref-type="bibr" rid="c22">22</xref>]. However, the basic idea of the spike sorting pipeline remains the same (<xref ref-type="fig" rid="fig1">Fig 1A</xref>). The (filtered) data go through a process of spike detection that has traditionally relied on thresholding the raw signal. The multi-unit activity generated is then passed through a dimensionality reduction method that transforms the space-time spike matrices into a smaller set of features. The most commonly used dimensionality reduction techniques are principal component analysis (PCA) [<xref ref-type="bibr" rid="c11">11</xref>] and wavelet decomposition [<xref ref-type="bibr" rid="c12">12</xref>, <xref ref-type="bibr" rid="c18">18</xref>, <xref ref-type="bibr" rid="c25">25</xref>] for offline and geometric/spike shape methods[<xref ref-type="bibr" rid="c9">9</xref>, <xref ref-type="bibr" rid="c13">13</xref>] for online sorting. More recent approaches even combine the two offline methods to generate an optimum set of features for further analysis [<xref ref-type="bibr" rid="c21">21</xref>]. Finally, a clustering method is employed to automatically group together the spikes from an isolated single-unit in the high dimensional space of the decomposed features. Techniques commonly used for this clustering are k-means [<xref ref-type="bibr" rid="c30">30</xref>], mixtures of gaussians based on an expectation minimization algorithm [<xref ref-type="bibr" rid="c30">30</xref>] and template matching [<xref ref-type="bibr" rid="c33">33</xref>, <xref ref-type="bibr" rid="c28">28</xref>]. An overview of different techniques for detection, feature extraction and classification is given in Bestel et al [<xref ref-type="bibr" rid="c3">3</xref>]. Methods that are currently under development follow a different route where the event detection, the feature extraction, and the clustering steps are realized in a single template matching step [<xref ref-type="bibr" rid="c16">16</xref>, <xref ref-type="bibr" rid="c32">32</xref>]. These methods offer better parallelization capabilities and are proving very capable in handling millions of spikes arising from recordings of hundreds to thousands of channels. In all cases, the automated clustering algorithms operate on a number of dimensions that scales linearly with the number of channels of the recording probe. For the more recent multi-channel probes, this feature space usually contains hundreds of dimensions. Such multidimensional spaces make either manual clustering, or the manual supervision and quality assurance of the automated algorithms&#x2019; results, prohibitive. The t-sne dimensionality reduction technique was designed to reduce such multidimensional data sets to 2 or 3 dimensions in a way that visualizing them can offer meaningful insights into their original high dimensional structure [<xref ref-type="bibr" rid="c27">27</xref>]. Embedding techniques, like t-sne, transform the position of points in a high-dimensional space to positions in a lower (usually 2) dimensional space. This reduction transformation obviously requires that some information is lost. Each embedding technique decides which aspects of the original structure to keep and which to ignore. T-sne focuses on ensuring that the local structure (i.e. the ordering of distances between nearby points) remains intact while it ignores the global structure (i.e. the large distances in the t-sne space are not representative of the large distances in the original space). A good mental representation of how t-sne achieves this is to think of all points as objects connected to each other with spring-like forces. In the original space these forces are in equilibrium. When the points are transferred (randomly at first) into the 2D space the forces between them start both pulling and pushing so that a new equilibrium might be reached (<xref ref-type="fig" rid="fig1">Fig 1B</xref>). Points that are close in the original space are attracted to each other until they get roughly equally close in the 2D space, while points that are far away in the original space are repulsed by each other if they happen to find themselves close in the 2D space. This ability of the t-sne algorithm to repulse points that are nearby in the 2D space but not in the original space, offers a solution to the crowding problem of other embedding methods and underlies the informative 2D plots that it generates.
<fig id="fig1" position="float" fig-type="figure" orientation="portrait">
<label>Figure 1:</label>
<caption><p>Graphical representation of A) the current pipeline for spike sorting and B) the way t-sne can be added as a visualization tool in this pipeline</p></caption>
<graphic xlink:href="087395_fig1.tif"/>
</fig>
</p>
<p>In this work we apply t-sne to the spike sorting process and generate 2D plots that show obvious clusters of spikes. We use two types of data to validate our technique. The first is a ground-truth dataset that comes from paired recordings [<xref ref-type="bibr" rid="c15">15</xref>] with an extracellular and a juxtacellular probe, thus providing labels from the juxtacellularly recorded unit within the extracellular probe&#x2019;s spiking activity. The second type is a hybrod dataset generated from the synthesis of real extracellular recorded data with manually superimposed spikes belonging to a number of single units [<xref ref-type="bibr" rid="c23">23</xref>]. In the following we demonstrate that many of the t-sne generated low-dimensional clusters represent the activity of single units, while others group together spikes arising from a large number of putative units and likely noise. We develop a GUI that allows the fast visual identification of the single unit clusters and report on how accurately the manually selected clusters represent the labeled single unit&#x2019;s in our test datasets. We then use the visual representations of spike clusters that t-sne generates to offer an overview of how the sorting/clustering problem&#x2019;s difficulty increases with decreasing electrode density. Finally, utilizing the input agnostic nature of t-sne, we use it to embed the results of a new template-matching algorithm (kilosort) applied to the same ground-truth dataset. We subsequently use the GUI to overview and manually correct kilosort&#x2019;s results and show that t-sne&#x2019;s 2D embedding visualization makes digesting and curating the high dimensional output of automated spike clustering algorithms a simple procedure and also provides a satisfying &#x201D;overview&#x201D; of the otherwise overwhelmingly large, high-dimensional data sets. We will conclude with a discussion of possible extensions and future use cases of the t-sne algorithm for sorting and visualization of large-scale spike recordings.</p>
</sec>
<sec id="s2">
<label>2</label>
<title>Methods</title>
<sec id="s2a">
<label>2.1</label>
<title>Data sets</title>
<p>We used two types of data to test the efficacy of our methods. The first was a set of recordings from the anesthetized rat&#x2019;s (motor) cortex [<xref ref-type="bibr" rid="c15">15</xref>]. In these datasets the extracellular probe&#x2019;s recording was paired with a juxtacellular recording with a pipette. There were two different types of extracellular probes used in different sessions, a 32 channel staggered array (A1x32-Poly3-5mm-25s-177-CM32, NeuroNexus, USA) and a dense 128 channel matrix developed by the collaborative NeuroSeeker project (<ext-link ext-link-type="uri" xlink:href="http://www.neuroseeker.eu">http://www.neuroseeker.eu</ext-link>). The 128 channel probe design is shown in <xref ref-type="fig" rid="fig4">Fig 4</xref> and the 32 channel design in Fig S1. From the paired recording sessions available (<ext-link ext-link-type="uri" xlink:href="http://www.kampff-lab.org/validating-electrodes">www.kampff-lab.org/validating-electrodes</ext-link>) we selected one from the 32 channel probe (Paired Data 32: PD32) and one from the 128 channel probe (Paired Data 128: PD128). Those were the data sets in which the juxtacellularly recorded neuron was close enough to the extracellular probe to have its spikes easily detected on the extracellular recording without any spike triggered averaging. The PD128 set, when spikes were detected with 6.5 standard deviations threshold, consisted of 128820 spikes out of which 4420 where spikes belonging to the juxtacellularly recorded neuron (out of a total 4998 juxtacellularly recorded spikes). These are the spikes we used in the analysis shown in Fugures 2 and 4. At 4.5 std it consisted of 255026 spikes of which 4775 were the juxtacellularly recorded ones. When the same data set was put through the kilosort algorithm (where no detection through thresholding is actually used) it gave back 466313 putative &#x2019;spikes&#x2019; out of which we defined as non-spike noise the 139073 (see <xref ref-type="sec" rid="s3d">section 3.4</xref>), leaving 327240 spikes (72214 more than the 4.5 std threshold detection). The PD32 set consisted of 73814 spikes of which 331 belonged to the juxtacellularly recorded neuron.
<fig id="fig2" position="float" fig-type="figure" orientation="portrait">
<label>Figure 2:</label>
<caption><p>Results of t-sne analysis on PD128 (A) and PD32 (B). The color coding represents the size of the juxtaccellular spikes that correspond to the extracellular ones on the t-sne plots.</p></caption>
<graphic xlink:href="087395_fig2.tif"/>
</fig>
</p>
<p>We used two hybrid data sets provided to us by the lab of Kenneth Harris. Their construction was based on recordings of an 129 channel probe and the superposition of previously sorted spikes derived from separate recordings (hybrid spikes). The details of how these hybrid time series were constructed can be reviewed in [<xref ref-type="bibr" rid="c23">23</xref>]. The first data set (HD1) had 86271 spikes with 7 hybrid spike sets coming from different (labeled) neurons ranging in size from 432 to 26043 spikes. The second data set (HD2) had 126102 spikes again with 7 groups of labeled hybrid spikes with group sizes between 442 and 24987.</p>
</sec>
<sec id="s2b">
<label>2.2</label>
<title>T-sne code</title>
<p>For all our experiments we have used an extended version of the github available C&#x002B;&#x002B; t-sne code by van Maatens (<ext-link ext-link-type="uri" xlink:href="https://github.com/lvdmaaten/bhtsne/">https://github.com/lvdmaaten/bhtsne/</ext-link>). The bhtsne implementation in this repository allows for faster computations and makes larger data sets feasible through the use of the barnes-hut (bh) algorithm [<xref ref-type="bibr" rid="c26">26</xref>]. The bh algorithm groups together distant samples into a single average sample, minimizing the number of euclidean distance computations the algorithm must perform. This step makes the calculation of the actual error minimization of the 2D landscape faster and tractable for large sample numbers (on the order of millions). Yet the calculation of the initial probabilities in the multidimensional space still requires the algorithm to calculate the euclidean distances of all sample pairs adding a significant amount to the algorithm&#x2019;s run time. To speed up this part we have implemented the computation of the euclidean distances between all sample pairs directly on the GPU. To do this we used the GPU euclidean distance implementation presented by Chang et al [<xref ref-type="bibr" rid="c5">5</xref>]. This allows us to run data sets of more than 10<sup>5</sup> of spikes on a gaming desktop (i7 CPU, Titan X GPU, 64GB RAM) in just a couple of hours (see table ST1 about times for different number of samples and perplexity settings). However, storing the distances for all sample pairs on RAM soon imposes a bottleneck on the amount of samples that can be used. For N samples one requires 4&#x002A;N&#x002A;N (for 32 bit floats) bits of RAM, which translates to 40GB for 10<sup>5</sup> spikes and to 1TB for 0.5&#x002A;10<sup>6</sup> samples. To overcome this bottleneck we have added the possibility to calculate the pairwise distances in groups and keep in memory only the ones that the barnes-hut algorithm will use (populating the tree structure used in the algorithm with GPU pre-calculated distances). This process requires a sorting step of the distances that increase the time required, but allows much larger sample numbers to be used.</p>
<p>For data sets that are prohibitively large, and to show that online sorting of samples is possible, we have extended the algorithm to be able to position samples on a t-sne pre-computed 2D landscape. This is done by measuring the euclidean distance of each new sample to the samples already passed through the t-sne algorithm. Then the extra samples&#x2019; positions on the 2D landscape are calculated as the average of the positions of the closest 5 original samples for each new sample. For spike sorting, given that the number of spikes passed through the t-sne algorithm offers a complete representation of the spiking units in the recording, we show that the algorithm correctly places the extra samples (see Supplementary <xref ref-type="fig" rid="fig2">Figure 2</xref>).</p>
<p>We have also extended the python wrapper that came with the original code to accommodate the use of the extra parameters our C&#x002B;&#x002B; t-sne function requires and to allow the user to choose between the use of the C&#x002B;&#x002B; executable or the CPU only scipy implementation of t-sne. The latter allows users without access to the CUDA library, or with hardware not capable of supporting our code, to still run a full t-sne spike sorting session only on CPU and fully in python (no C&#x002B;&#x002B; executable is called with this option), albeit for small number of spikes and with large run times.</p>
</sec>
<sec id="s2c">
<label>2.3</label>
<title>Spike sorting pipeline</title>
<p>We have applied the t-sne algorithm in two separate points of the spike sorting pipeline using two different spike representation feature sets as inputs to the algorithm. In the first instance (results in <xref ref-type="fig" rid="fig2">Figures 2</xref>, <xref ref-type="fig" rid="fig3">3</xref> and <xref ref-type="fig" rid="fig4">4</xref>) the algorithm operated on the masked PCA components of the spikes detected as described in [<xref ref-type="bibr" rid="c23">23</xref>]. In order to facilitate the input to t-sne of these components, we wrote python code that accepts the (masked or not) PCA components of the detected spikes, transforms these into a data set ready for the t-sne algorithm and calls the executable on it. We have also tried using raw data or non-masked PCA components as input to the t-sne algorithm, but found the masked-PCAs to consistently outperform these other inputs (results not shown). The second input feature set to the algorithm (results in <xref ref-type="fig" rid="fig5">Figure 5</xref>) was the distance to templates generated by the kilosort algorithm. In this case, the t-sne algorithm operated on feature vectors that measured how close or far each spike was to the set of spike templates that kilosort generated from the data.</p>
<p>We have also developed a minimal, and easily extensible, graphical user interface (GUI) that allows users to visualize the results of the t-sne algorithm and use this visualization to manually sort the detected spikes. The GUI offers a number of views and tools for manual spike sorting. These include: A 2D scatter plot of the t-sne results with several ways to select groups of spikes directly on the plot. A view to preview the selected group&#x2019;s average time traces for all channels. The presented data are not explicitly filtered, but the baseline is subtracted using the first 10 samples. An autocorrelogram view of the selected spikes with 1 ms resolution bins. A heat map view of the average difference between the minimum and the maximum values in the spikes&#x2019; time window superimposed on the probe&#x2019;s layout diagram. A way to label a selected group and store it as a cluster in a pandas structure (saved to disk as a pickle). The GUI also allows selecting and previewing of all plots for any previously saved cluster, deleting a selected cluster and previewing all saved clusters on the t-sne scatter plot. A number of input boxes and buttons also allow the merging and splitting of clusters as well as the reassignment of spikes to different clusters.</p>
<p>The development of the GUI is based on the bokeh python library. This makes further development of good quality views as desired by individual users relatively easy and fast. At the same time the bokeh library will struggle with large number of points presented simultaneously on the t-sne view. For the gaming desktop described above the easy to work with limit was reached at about 500,000 spikes.</p>
<p>The python code design was informed by the need to keep the code simple and extendable. To achieve this we chose to implement only functions, without any obfuscating object orientation or passing data around data structures in more complicated ways other than function arguments and return statements. Individual functions are constructed to be self-standing and usable outside the context of the spike sorting workflow the code was designed for. For example the basic t-sne functions can operate on any other data of a samples x features dimensionality, or the functions that produce the average spike timecourses or the average heatmaps of the probes can easily be used to generate plots outside the confines of the gui.</p>
</sec>
<sec id="s2d">
<label>2.4</label>
<title>T-sne parameters and accuracy measurements</title>
<p>For spike detection we used a high and low detection threshold of 6.5 and 2 std respectively. We tried out a large range of t-sne parameters (perplexity, learning rate, theta and number of iterations) in order to define the set that gave us good results, but that didn&#x2019;t take too long to run. For all of the results presented here, the parameters used were perplexity 100, learning rate 200 and theta 0.2. The theta parameter defines the angle of the cone inside which all points are treated as a single average point by the bh algorithm. Smaller values mean that the algorithm averages fewer points together, i.e. only those that are far away from the central point. A value of 0.2 is considered an approximation closer to an exact solution. For the PD128 and the HD1 sets we ran the algorithm for 2000 iterations while for the PD32 and the HD2 for 5000. Perplexities lower than 100 were shown to compromise the results (in as far as separation of clusters defined by visual inspection) while higher numbers (we tried up to 1000) would make no obvious difference other than adding to the run time of the algorithm. We have found that perplexity is a sample number dependent measure, but that for tens to hundreds of thousands of samples (as in all our data sets) the chosen number of 100 offered the best quality vs run time balance. The fact that over a certain value perplexity did not seem to change the quality of the embedding, adds to the idea in the t-sne literature that this is a stable parameter that can vary a lot without substantially influencing the results.</p>
<p>Having labeled data allowed us to measure the quality of the t-sne clustering visualization as a tool for separating single units. Since the t-sne algorithm itself does not cluster (i.e. label) the data, but only offers a 2D embedding, we needed a way to label the spikes according to their position in that embedding. We chose to use the density-based spatial clustering of applications with noise [<xref ref-type="bibr" rid="c7">7</xref>] (DBSCAN) algorithm since it provides a non-parametric way to label the embedded spikes by clustering together samples that form denser groupings compared to their immediate environment. We found DBSCAN&#x2019;s approach to clustering matching most closely the human intuition of neural units corresponding to separate groups of spikes in the 2D visualization of the t-sne data.</p>
<p>Having established a method for labeling the t-sne results we then compared the generated labels with the ground truth information from the juxtacellular recordings or the hybrid spike groups. We report here the results of three commonly used measures for such comparisons. The first is Precission (or Confidence or True Positive Accuracy) being the ratio of the true positive samples (i.e. spikes labeled by DBSCAN as part of a unit that also had either a juxtacellular spike correspondence or the correct hybrid label) over all positively labeled samples (all spikes defined by DBSCAN to belong to the specific single unit). The second is Recall (or Sensitivity or True Positive Rate) being the ratio of the true positive samples over all true samples (all spikes with a juxtacellular spike correspondence or a specific hybrid spike label). The third is the F-factor which is defined as the harmonic mean of Precission and Recall (i.e. 2&#x002A;Precission&#x002A;Recall/(Precission&#x002B;Recall)). We also calculated the Receiver Operating Characteristics (ROC) values for each label (either hybrid spike set or juxtacellular corresponding set) as a point on the plot of the True Positive Rate versus the False Positive Rate (see Supplementary <xref ref-type="fig" rid="fig2">Figure 2</xref>). The False Positive Rate is defined as the ratio of the false positive samples (spikes defined by the DBSCAN as part of the label but not having a corresponding juxtacellular spike or a hybrid set label) over all the negative samples (all spikes not having the specific juxtacellular or hybrid label).</p>
</sec>
</sec>
<sec id="s3">
<label>3</label>
<title>Results</title>
<sec id="s3a">
<label>3.1</label>
<title>Paired Data</title>
<p>We ran the t-sne algorithm (for a 2D embedding) on the full 128820 spikes of the PD128 set; each spike was represented as a masked vector of 384 dimensions (128 channels &#x002A; 3 largest PCA components per channel). The masking of the PCA components (i.e. modulated between 0 and their full value) is described in Rossant et al. [<xref ref-type="bibr" rid="c23">23</xref>]. The resultant embedding is shown in <xref ref-type="fig" rid="fig2">Figure 2A</xref>. The embedding generates a number of distinct groups of spikes and a number of more diffuse clouds with varying internal densities. A spike grouping at the bottom of the figure contains the majority of the extracellular spikes that correspond to juxtacellularly recorded spikes (i.e ground truth spikes from the isolated single cell). The figure shows that a small percentage of the spikes coming from the labeled cell are spread throughout the entire 2D space, while the labeled cluster also contains some spikes that are not generated by the labeled cell. For this set of ground truth spikes the Precission, Recall and F-factor are 0.86, 0.83 and 0.84 respectively, which translates to 14&#x0025; of the ground truth spikes not being classified as part of the main cluster and to 17&#x0025; of the main cluster spikes being misclassified as part of the ground-truth.</p>
<p>The color coding of the samples with a corresponding juxtacellular spike shows that the embedded cluster&#x2019;s internal structure has a strong relationship with physical characteristics of the actual spikes, in this case their peak amplitude. The t-sne algorithm is designed to retain the local structure of the multidimensional space during its transformation into the 2D embedding space. That means that any correspondence between the physical properties of the samples and their distances in the high dimensional space of their PCA components will be retained in the subsequent embedding, at least for the samples that are close together (i.e. the ones within a single cluster). The 2D embedding space is easy to visualize and thus allows quickly noticing such relationships. By simply changing the color coding scheme to represent different properties one can easily browse the relationships (or lack thereof) between any number of specific characteristics. For example, color coding the spikes according to the time they appear in the recording reveals that there is no correspondence between the size of spikes and the time they were recorded (results not shown).</p>
<p>The clearest picture of how t-sne operates on the data can be gained from videos of the t-sne process in which each frame is the result of progressive iterations of the embedding algorithm. We captured this process for the PD128 data set in Supplementary Video 1.</p>
<p><xref ref-type="fig" rid="fig2">Figure 2B</xref> shows the t-sne embedding of the 73814 spikes of the PD32 set. Here the embedding generates a more homogeneous cloud with significantly fewer easy to delineate groupings of spikes. The Precission, Recall and F-factor for the juxtacellularly labeled spikes in this case are 0.91, 0.65 and 0.76 respectively for the t-sne/DBSCAN generated cluster with the most color coded spikes. In this case the cluster is a fairly homogeneous one (with only 9&#x0025; of the spikes not belonging to the unit it represents) but it fails to capture a large percentage (&#x0025;35) of spikes from the same unit which end up in other groups. Also, the cluster&#x2019;s internal structure shows no correspondence with the spikes&#x2019; peak amplitude as measured by the juxtacellular electrode. We will propose (see Probe electrode densities and clustering quality) that the drop in clustering performance between the P128 and P32 embeddings is mainly due to the lower sampling density of the extracellular space provided by the 32 channel probe.</p>
</sec>
<sec id="s3b">
<label>3.2</label>
<title>Hybrid Data</title>
<p>We also used t-sen to embed the two hybrid data sets described in Methods / Data Sets. The results for HD1 can be seen in <xref ref-type="fig" rid="fig3">Figure 3A</xref> and for HD2 in 3B. In this case, the output of the t-sne algorithm provides a clean visualization of the known single unit clusters. Most clusters are fully separated from the other clusters and contain a very small number of spikes that do not belong to their corresponding unit. The spikes shown in black in both sets are not hybrid spikes, but rather those that existed in the original recording, i.e. not ground-truth. For HD1 all clusters have Precision, Recall and F-factor of 0.99. For the HD2 set, clusters 1, 4, 5 and 7 have Precisions, Recalls and F-factors ranging between 0.95 and 0.99. Cluster 6 has 0.91, 0.9 and 0.91 respectively.</p>
<p>In the case of cluster 5, DBSCAN did not classify as part of the unit the spikes that expand away from the main group to the right of the cluster. Yet their proportion was small enough to keep the Recall at 0.95. The same applied to cluster 1, which was missing the group of spikes showing at the top of the large not Ground Truth spike grouping (black group at the left of the plot labeled as Not GT). That group of spikes was also small enough in percentage that the cluster still achieved a Recall of 0.96. T-sne failed to fully separate clusters 2 and 3 (see insert of <xref ref-type="fig" rid="fig3">Figure 3B</xref>).
<fig id="fig3" position="float" fig-type="figure" orientation="portrait">
<label>Figure 3:</label>
<caption><p>Results of the t-sne analysis on the hybrid data, HD1 (A) and HD2 (B). The colors represent spikes that belong to pre-classified units added to the data sets while the black points represent spikes pre-existing in the datasets and thus do not belong to known units. The insert in B) shows a zoom-in of the embedding of units 2 and 3 that t-sne does not manage to segregate.</p></caption>
<graphic xlink:href="087395_fig3.tif"/>
</fig>
</p>
<p>In this case the clusters&#x2019; Recalls were 0.99 but their Precissions were 0.44 and 0.55 with F-factors of 0.61 and 0.71 respectively. The internal structure of their common spike group in the 2D embedding space shows that the similarity of their spikes changes in a uniform way and that there are some spikes from the two groups that are quite similar, thus causing the embedding to overlap the two units.</p>
</sec>
<sec id="s3c">
<label>3.3</label>
<title>Probe electrode density and clustering quality</title>
<p>As the number of electrodes per probe increases, it is important to understand how the density of electrodes relates to an algorithm&#x2019;s ability to reliably extract and isolate single-units. A major argument for the miniaturization of silicon probes was the idea that more densely spaced electrodes will increase spike sorting quality by providing more features with which to classify spikes. Here we review this argument using t-sne by performing embeddings of the P128 dataset, originally captured with a density of 2050 electrodes/mm<sup>2</sup>, at artificially reduced densities. This was achieved by removing more and more channels while keeping the total coverage intact and then performing a new t-sne embedding with each sub-dataset. The results visually demonstrate how artificially decreasing the probe&#x2019;s density affects the sorting of the detected spikes.</p>
<p>We started from the PD128 set and used the manual sorting GUI we developed (see Methods) to define as many groups of spikes belonging to the same unit. The criteria used to delineate a number of spikes as a single unit were the following: The spikes had to be close in the t-sne space, ideally belonging to one, obvious, unique grouping (e.g. large orange cluster at the right of the plot or yellow cluster at the bottom), but if not so, the grouping had to at least be contiguous (e.g. the dark red and green clusters at the far right and middle of the plot or the yellow and red clusters at the left and top of the plot). The average time course of the spike on all electrodes had to show a standard extracellularly measured action potential. The autocorrelogram of the spike times within a group had to be zero within 1 ms od time zero (i.e. no two spikes of the group could have been fired in a time interval sorter than 2 ms of one another). Finally, the heatmap of the group had to show a contiguous region of activation on the probe that was compact (just a few neighboring electrodes). Following the above criteria we labeled 90 units in the PD128. Given the extent and density of electrodes as well as the position of the probe within cortex, this is consistent with the number of neurons one might expect to detect in local vicinity, i.e. &#x00A1; 50 microns [<xref ref-type="bibr" rid="c15">15</xref>]. <xref ref-type="fig" rid="fig4">Figure 4A</xref> overlays the manually classified clusters directly on the t-sne plot. There are three separate groupings of spikes that we have not labeled as a single unit (the grouping at the top of the plot and two on the right side of the plot between the orange, yellow, blue and green units). T-sne in this case had clustered together three groupings of multi unit spikes. These groupings showed also no internal grouping that could be assigned to a single unit.</p>
<p><xref ref-type="fig" rid="fig4">Figure 4B</xref> to 4F show the t-sne results arising from the same dataset with some electrodes removed. From B to F the number of electrodes used were 64, 32, 22, 16, and 8 respectively (denoted as blue in the figure). The color coding in these subplots is the same as in <xref ref-type="fig" rid="fig4">Figure 4a</xref> and denotes the unit each spike belongs to as defined by the above procedure. Even at 64 channels there is an obvious deterioration of the t-sne clustering quality that progresses all the way to the 8 channel data set. This deterioration can be seen as a reduction of the number of easy to delineate spike groups, an increase of the number of spikes that form part of the larger amorphous clouds, and by the mixing of the labeled spikes amongst the unit clusters and between the clusters and the undifferentiated cloud structures.
<fig id="fig4" position="float" fig-type="figure" orientation="portrait">
<label>Figure 4:</label>
<caption><p>T-sne embeddings of the same PD128 data set for a series of electrode densities (the electrode configuration is shown at the top of each subplot with blue being the used channels). The color code represents the manually sorting of the spikes done on the full (128 channels) t-sne embedded data set. The way the different color groups start to break up and merge with each other over the consecutive electrode configurations visually depicts the increased difficulty of the spike sorting problem for probes with reduced densities. For the last two densities (subplots E and F) the electrodes are far enough from each other to ensure that each spike is seen by only one electrode. The quality of these embeddings makes immediately obvious the usefulness of the multiple, spatially separated, channels with information about each spike.</p></caption>
<graphic xlink:href="087395_fig4.tif"/>
</fig>
</p>
</sec>
<sec id="s3d">
<label>3.4</label>
<title>Intuitive manual curation of automated clustering</title>
<p>Template matching algorithms are proving to be fast alternatives to the more classical detect, embed, and classify spike sorting pipeline, especially for probes with a large number of densely spaced electrodes. These algorithms iteratively generate templates of the spikes present and then use these templates to detect and classify the individual spikes. The result is a list of spike templates and the euclidean distances of each spike to each of these templates. Each spike is assigned to the template that matches it the best (i.e. it has the smallest distance to). We report here how t-sne embeds these template distance features and how we utilized our GUI to sanity check the automatically generated results and get a broader overview of the clustering problem for a specific data set.</p>
<p>We ran the kilosort algorithm [<xref ref-type="bibr" rid="c16">16</xref>] on the PD128 data set with a maximum number of templates set to 256 (double the number of channels on our probe). It generated 252 templates and detected 466313 spikes. We then used the distances of each spike to all the templates as the t-sne input feature space (a 252 dimensional one), setting to 0 all the distances except the nearest 16 templates. The result of this t-sne embedding can be seen in <xref ref-type="fig" rid="fig5">Figure 5</xref>. The embedding shows three different types of spike groupings. The first are a number of very tight groupings (denoted from here on as &#x201D;points&#x201D;) where the spread of the entire group in both the x and y axis is at least 3 orders of magnitude smaller than the total spread of the embedding. The second is a linear grouping where there is an obvious extended axis to the grouping (not necessary along the x and y axis of the full embedding), one with a very small and one with a much larger spread (denoted from here on as &#x201D;lines&#x201D;). The third type of grouping has large spreads on both the x and y axis, no less than 2 orders of magnitudes smaller than the total t-sne spread (denoted here on as &#x201D;blobs&#x201D;).
<fig id="fig5" position="float" fig-type="figure" orientation="portrait">
<label>Figure 5:</label>
<caption><p>T-sne embedding of the results of the kilosort algorithm (distances to templates) for the PD128 data set. Colors indicate the different categories that the spikes fall into after using our custom GUI to manually evaluate and correct as necessary kilosort&#x2019;s spike assignments to templates. The SU labeled groupings represent a single unit each. The MU labeled groupings represent a single template each but multiple units. The Noise labeled groupings represent noise that has been picked up by kilosort as spike templates. The SUs after merges and splits have a more complex representation where each single unit can be either one or more groupings and have originally belonged to one or more templates. The Unlabeled groupings represent spikes that could not be assigned to either a single unit, or a multi unit or a noise group. The insert at the top of the figure depicts a zoom-in (x30 magnification) to a point grouping (SU) showing that these groupings are actually comprised of large number of spikes all embedded very close to one another. That compactness indicates a very large similarity in the template distance feature space and a large dissimilarity to any other spike, so it is not surprising that they are the groupings that kilosort has assigned to templates that represent single, easy to define units.</p></caption>
<graphic xlink:href="087395_fig5.tif"/>
</fig>
</p>
<p>Using the manual clustering GUI we could easily evaluate in which kilosort assigned templates the spikes in the different embedding groupings belonged and vise versa (i.e. which groupings held spikes from any single template). From this comparison five general categories emerged. The first category involved groupings that was fully represented by a single template and whose heatmap and autocorrelogram both indicated a single unit. There were 73 of these single units (SUs) out of which the majority (49) were point groupings, 18 were line groupings and a small minority (7) were blobs. This category included 109890 spikes. The second category were groupings that again was fully defined by a single template but this time the autocorrelogram (and sometimes the heatmap) indicated multiple units (MUs). There were 39 of these MUs, the majority of which (26) were blob groupings with only a small minority being either lines (7) or points (6). There were a total of 134288 spikes in this category of MUs. The third category was represented by the three largest, semi-connected, blob groupings in the center of the embedding and the 4th largest blob on their right. Their &#x2019;spikes&#x2019; belonged to 5 templates (4 for the central blob and one for the blob on the side) and each template had its &#x2019;spikes&#x2019; grouped together but with a large minority spread throughout other parts of the groupings. These 5 templates were the most numerous and they all showed average spike trains that were very small in amplitude (&#x00A1; 100uV), did not resemble spike shapes, and were identical on all channels. We denoted this category as noise. It included a total of 139073 &#x2019;spikes&#x2019;.</p>
<p>In the fourth category we lambed together all the cases that after splitting or merging of templates or moving spikes from one template to another ended up with acceptable SUs (based on their average spike shape, their probe heatmap, and their autocorrelogram). We arrived at 24 SUs that included a total of 38482 spikes. In these cases the combined information of where the spike lay in the embedding and in which template it belonged to made it fairly straightforward to either appropriately merge or split templates or move spikes along templates. In some cases a single SU would be represented by two separate t-sne groupings. An example of this are the two groupings embedded within blue ellipses in <xref ref-type="fig" rid="fig5">Figure 5</xref>. They represent a single unit after the merging of two kilosort templates (with spikes mixed over the two groupings). This unit happens to correspond to the juxtacellularly marked spikes. The unit has 4845 spikes in it. Out of those, the 4821 spikes&#x2019; timestamps correspond to the 4998 juxtacellular timestamps within a jitter of 1 ms. That translates to a False Possitive error of 0.5&#x0025; and a False Negative error of 3.7&#x0025;. In other cases, a single grouping would contain spikes assigned to two templates and a merging indicated a single SU (like the orange line at the bottom center of the embedding) while in others a single template would be represented by multiple groupings each defining an SU, resulting in the template&#x2019;s splitting (like the two orange line groupings at the top center of the embedding). Finally the 5th category involved all the spikes that we were unable to assign to any of the previous divisions (SUs, MUs or noise). These were spikes that showed no obvious correlation between the embedding position and their template assignment. For example, the large red blob to the top and right of the large noise blob had 14184 spikes that kilosort had assigned to 95 separate templates (most of which were templates with fewer than 10 spikes each). There was no internal structure to the blob, i.e. the spikes of each template appeared randomly spread throughout. The embedding of all these spikes and templates in a single grouping made it straight forward to visuallize the situation and assign all the spikes to the unlabeld division.</p>
</sec>
</sec>
<sec id="s4">
<label>4</label>
<title>Discussion</title>
<p>Spike sorting has evolved over the last 20 years from a set of techniques to discriminate 5 to 10 distinct units in a space of a few tens of features to strategies for labeling many tens to hundreds of units in large feature spaces. However, the number of distinct units is expected to soon reach well into the thousands. The emerging demands these growing datasets have inspired the development of more capable automatic sorting algorithms. However, the manual overview of the spike sorting process remains an essential step of the pipeline, albeit one that is becoming increasingly labor intensive and error prone. The problem of producing human readable visualizations of structures that exist in large dimensional spaces is of course not unique to spike sorting but is common in all data intensive fields. One commonly employed strategy for working with such data is the use of non-linear dimensionality reduction methods that try to retain in their projections as much of the initial structure of the data as possible. The current state of the art in these methods is t-sne, which manages to project onto two or three dimensions the multi-dimensional data in a way that preserves its local structure and makes the visualization of this structure both possible and intuitive. A large literature has evolved applying this technique to a diverse number of big data problems ranging from AI [<xref ref-type="bibr" rid="c14">14</xref>] to genetics [<xref ref-type="bibr" rid="c31">31</xref>, <xref ref-type="bibr" rid="c17">17</xref>], and behavior [<xref ref-type="bibr" rid="c2">2</xref>]. We show here that, in the case of spike sorting, using t-sne on the results of either a masked PCA or of template matching, provides a visualization that offers a clear picture of how the individual spikes form groups in the high dimensional feature space. These groups directly relate to the individual units that generate the spikes, which can now be visualized and curated in an intuitive manner or compared to the results of an automatic clustering method. Furthermore, t-sne allows a visual inspection of the structural groups that different data sets of spikes contain, something that can be achieved neither by looking at 2D plots of pairs of features within a multi-dimensional space or by any current clustering algorithm. Here we demonstrate that t-sne visualization immediately reveals differences between biological and hybrid datasets (<xref ref-type="fig" rid="fig3">Figure 3</xref>), how spike sorting challenges accrue when each spike is represented by features generated by fewer and fewer electrodes (<xref ref-type="fig" rid="fig4">Figure 4</xref>), and that manual curation of the output from an automated template matching procedure becomes effortless in a low dimensional space (<xref ref-type="fig" rid="fig5">Figure 5</xref>).</p>
<p>The generality of the t-sne method also makes it applicable to datasets that arise from diverse sources. The successful application of t-sne to behavioral data [<xref ref-type="bibr" rid="c2">2</xref>] suggests the possibility of applying it to datasets comprised of a combination of spike and other electrophysiological signals (LFP, etc.) as well as the behavioral features occuring during the recorded neural activity. It is thus possible that groupings in the t-sne visualization of such a dataset could provide informative clues as to the connection between different forms of brain activity and to behavior itself.</p>
<p>Finally, we are now working on using t-sne embeddings into three-dimensional space to generate spatial (X,Y,Z) representations that can be explored in virtual reality, thus providing a new form of access to complex datasets. (Supplementary Video 2)</p>
</sec>
<sec id="s5">
<label>5</label>
<title>Additional information</title>
<sec id="s5a">
<label>5.1</label>
<title>Software access</title>
<p>A first version of the software used here can be downloaded through the following means. In a conda environment do: &#x201D;conda install -c georgedimitriadis t_sne_bhcuda&#x201D;. That will install both the python code and the cuda executable and will work in either Windows or Linux OSes. You can grab the python code from the pypi repository:</p>
<p><ext-link ext-link-type="uri" xlink:href="https://pypi.python.org/pypi/t_sne_bhcuda/0.2.1">https://pypi.python.org/pypi/t_sne_bhcuda/0.2.1</ext-link>.</p>
<p>You can get the C / CUDA code for the cuda executable from the github repository:</p>
<p><ext-link ext-link-type="uri" xlink:href="https://github.com/georgedimitriadis/t_sne_bhcuda">https://github.com/georgedimitriadis/t_sne_bhcuda</ext-link>.</p>
<p>We are currently in the process of re-writing the code so that the cuda part is embedded in the python code. For this and future developments check the pypi and github repositories or contact the authors.</p>
</sec>
<sec id="s5b">
<label>5.1</label>
<title>Competing interests</title>
<p>The authors declare no competing financial interests</p>
</sec>
</sec>
</body>
<back>
<ref-list>
<title>References</title>
<ref id="c1"><label>[1]</label> <mixed-citation publication-type="journal"><string-name><given-names>A.</given-names> <surname>Paul Alivisatos</surname></string-name>, <string-name><given-names>Anne M.</given-names> <surname>Andrews</surname></string-name>, <string-name><given-names>Edward S.</given-names> <surname>Boyden</surname></string-name>, <string-name><given-names>Miyoung</given-names> <surname>Chun</surname></string-name>, <string-name><given-names>George M.</given-names> <surname>Church</surname></string-name>, <string-name><given-names>Karl</given-names> <surname>Deisseroth</surname></string-name>, <string-name><given-names>John P.</given-names> <surname>Donoghue</surname></string-name>, <string-name><given-names>Scott E.</given-names> <surname>Fraser</surname></string-name>, <string-name><given-names>Jennifer</given-names> <surname>Lippincott-Schwartz</surname></string-name>, <string-name><given-names>Loren L.</given-names> <surname>Looger</surname></string-name>, <string-name><given-names>Sotiris</given-names> <surname>Masmanidis</surname></string-name>, <string-name><given-names>Paul L.</given-names> <surname>McEuen</surname></string-name>, <string-name><given-names>Arto V.</given-names> <surname>Nurmikko</surname></string-name>, <string-name><given-names>Hongkun</given-names> <surname>Park</surname></string-name>, <string-name><given-names>Darcy S.</given-names> <surname>Peterka</surname></string-name>, <string-name><given-names>Clay</given-names> <surname>Reid</surname></string-name>, <string-name><given-names>Michael L.</given-names> <surname>Roukes</surname></string-name>, <string-name><given-names>Axel</given-names> <surname>Scherer</surname></string-name>, <string-name><given-names>Mark</given-names> <surname>Schnitzer</surname></string-name>, <string-name><given-names>Terrence J.</given-names> <surname>Sejnowski</surname></string-name>, <string-name><given-names>Kenneth L.</given-names> <surname>Shepard</surname></string-name>, <string-name><given-names>Doris</given-names> <surname>Tsao</surname></string-name>, <string-name><given-names>Gina</given-names> <surname>Turrigiano</surname></string-name>, <string-name><given-names>Paul S.</given-names> <surname>Weiss</surname></string-name>, <string-name><given-names>Chris</given-names> <surname>Xu</surname></string-name>, <string-name><given-names>Rafael</given-names> <surname>Yuste</surname></string-name>, and <string-name><given-names>Xiaowei</given-names> <surname>Zhuang</surname></string-name>. <article-title>Nanotools for Neuroscience and Brain Activity Mapping</article-title>. <source>ACS Nano</source>, <volume>7</volume>(<issue>3</issue>):<fpage>1850</fpage>&#x2013;<lpage>1866</lpage>, <month>mar</month> <year>2013</year>.</mixed-citation></ref>
<ref id="c2"><label>[2]</label> <mixed-citation publication-type="journal"><string-name><given-names>Gordon J.</given-names> <surname>Berman</surname></string-name>, <string-name><given-names>Daniel M.</given-names> <surname>Choi</surname></string-name>, <string-name><given-names>William</given-names> <surname>Bialek</surname></string-name>, and <string-name><given-names>Joshua W.</given-names> <surname>Shaevitz</surname></string-name>. <article-title>Mapping the stereotyped behaviour of freely moving fruit flies</article-title>. <source>Journal of The Royal Society Interface</source>, <volume>11</volume>(<issue>99</issue>):<fpage>20140672</fpage>, <month>oct</month> <year>2014</year>.</mixed-citation></ref>
<ref id="c3"><label>[3]</label> <mixed-citation publication-type="journal"><string-name><given-names>Robert</given-names> <surname>Bestel</surname></string-name>, <string-name><given-names>Andreas W.</given-names> <surname>Daus</surname></string-name>, and <string-name><given-names>Christiane</given-names> <surname>Thielemann</surname></string-name>. <article-title>A novel automated spike sorting algorithm with adaptable feature extraction</article-title>. <source>Journal of Neuroscience Methods</source>, <volume>211</volume>(<issue>1</issue>):<fpage>168</fpage>&#x2013;<lpage>178</lpage>, <month>oct</month> <year>2012</year>.</mixed-citation></ref>
<ref id="c4"><label>[4]</label> <mixed-citation publication-type="journal"><string-name><given-names>Gy&#x00F6;rgy</given-names> <surname>Buzs&#x00E1;ki</surname></string-name>. <article-title>Large-scale recording of neuronal ensembles</article-title>. <source>Nature Neuroscience</source>, <volume>7</volume>(<issue>5</issue>):<fpage>446</fpage>&#x2013;<lpage>451</lpage>, <month>may</month> <year>2004</year>.</mixed-citation></ref>
<ref id="c5"><label>[5]</label> <mixed-citation publication-type="confproc"><string-name><given-names>Darjen</given-names> <surname>Chang</surname></string-name>, <string-name><given-names>Nathaniel A.</given-names> <surname>Jones</surname></string-name>, <string-name><given-names>Dazhuo</given-names> <surname>Li</surname></string-name>, and <string-name><given-names>Ming</given-names> <surname>Ouyang</surname></string-name>. <article-title>Compute pairwise euclidean distances of data points with GPUs</article-title>. In <conf-name>Proceedings of the IASTED International Symposium Computational Biology and Bioinformatics</conf-name>, <conf-loc>Orlando, Florida, USA</conf-loc>, <conf-date>nov 2008</conf-date>.</mixed-citation></ref>
<ref id="c6"><label>[6]</label> <mixed-citation publication-type="journal"><string-name><given-names>Rishidev</given-names> <surname>Chaudhuri</surname></string-name> and <string-name><given-names>Ila</given-names> <surname>Fiete</surname></string-name>. <article-title>Computational principles of memory</article-title>. <source>Nature Neuroscience</source>, <volume>19</volume>(<issue>3</issue>):<fpage>394</fpage>&#x2013;<lpage>403</lpage>, <month>feb</month> <year>2016</year>.</mixed-citation></ref>
<ref id="c7"><label>[7]</label> <mixed-citation publication-type="book"><string-name><given-names>Martin</given-names> <surname>Ester</surname></string-name>, <string-name><given-names>Hans-Peter</given-names> <surname>Kriegel</surname></string-name>, <string-name><given-names>J&#x00F6;rg</given-names> <surname>Sander</surname></string-name>, and <string-name><given-names>Xiaowei</given-names> <surname>Xu</surname></string-name>. <chapter-title>A density-based algorithm for discovering clusters in large spatial databases with noise</chapter-title>. pages <fpage>226</fpage>&#x2013;<lpage>231</lpage>. <publisher-name>AAAI Press</publisher-name>, <year>1996</year>.</mixed-citation></ref>
<ref id="c8"><label>[8]</label> <mixed-citation publication-type="journal"><string-name><given-names>M. S.</given-names> <surname>Fee</surname></string-name>, <string-name><given-names>P. P.</given-names> <surname>Mitra</surname></string-name>, and <string-name><given-names>D.</given-names> <surname>Kleinfeld</surname></string-name>. <article-title>Automatic sorting of multiple unit neuronal signals in the presence of anisotropic and non-Gaussian variability</article-title>. <source>Journal of Neuroscience Methods</source>, <volume>69</volume>(<issue>2</issue>):<fpage>175</fpage>&#x2013;<lpage>188</lpage>, <month>nov</month> <year>1996</year>.</mixed-citation></ref>
<ref id="c9"><label>[9]</label> <mixed-citation publication-type="journal"><string-name><given-names>G. L.</given-names> <surname>Gerstein</surname></string-name> and <string-name><given-names>W. A.</given-names> <surname>Clark</surname></string-name>. <article-title>Simultaneous Studies of Firing Patterns in Several Neurons</article-title>. <source>Science</source>, <volume>143</volume>(<issue>3612</issue>):<fpage>1325</fpage>&#x2013;<lpage>1327</lpage>, <month>mar</month> <year>1964</year>.</mixed-citation></ref>
<ref id="c10"><label>[10]</label> <mixed-citation publication-type="journal"><string-name><given-names>Charles M.</given-names> <surname>Gray</surname></string-name>, <string-name><given-names>Pedro E.</given-names> <surname>Maldonado</surname></string-name>, <string-name><given-names>Mathew</given-names> <surname>Wilson</surname></string-name>, and <string-name><given-names>Bruce</given-names> <surname>Mc-Naughton</surname></string-name>. <article-title>Tetrodes markedly improve the reliability and yield of multiple single-unit isolation from multi-unit recordings in cat striate cortex</article-title>. <source>Journal of Neuroscience Methods</source>, <volume>63</volume>(<issue>1&#x2013;2</issue>):<fpage>43</fpage>&#x2013;<lpage>54</lpage>, <month>dec</month> <year>1995</year>.</mixed-citation></ref>
<ref id="c11"><label>[11]</label> <mixed-citation publication-type="journal"><string-name><given-names>Kenneth D.</given-names> <surname>Harris</surname></string-name>, <string-name><given-names>Darrell A.</given-names> <surname>Henze</surname></string-name>, <string-name><given-names>Jozsef</given-names> <surname>Csicsvari</surname></string-name>, <string-name><given-names>Hajime</given-names> <surname>Hirase</surname></string-name>, and <string-name><given-names>Gy&#x00F6;rgy</given-names> <surname>Buzs&#x00E1;ki</surname></string-name>. <article-title>Accuracy of tetrode spike separation as determined by simultaneous intracellular and extracellular measurements</article-title>. <source>Journal of neurophysiology</source>, <volume>84</volume>(<issue>1</issue>):<fpage>401</fpage>&#x2013;<lpage>414</lpage>, <year>2000</year>.</mixed-citation></ref>
<ref id="c12"><label>[12]</label> <mixed-citation publication-type="journal"><string-name><given-names>Eyal</given-names> <surname>Hulata</surname></string-name>, <string-name><given-names>Ronen</given-names> <surname>Segev</surname></string-name>, and <string-name><given-names>Eshel</given-names> <surname>Ben-Jacob</surname></string-name>. <article-title>A method for spike sorting and detection based on wavelet packets and Shannon&#x2019;s mutual information</article-title>. <source>Journal of Neuroscience Methods</source>, <volume>117</volume>(<issue>1</issue>):<fpage>1</fpage>&#x2013;<lpage>12</lpage>, <month>may</month> <year>2002</year>.</mixed-citation></ref>
<ref id="c13"><label>[13]</label> <mixed-citation publication-type="journal"><string-name><given-names>Michael S.</given-names> <surname>Lewicki</surname></string-name>. <article-title>A review of methods for spike sorting: the detection and classification of neural action potentials</article-title>. <source>Network: Computation in Neural Systems</source>, <volume>9</volume>(<issue>4</issue>):<fpage>R53</fpage>&#x2013;<lpage>R78</lpage>, <year>1998</year>.</mixed-citation></ref>
<ref id="c14"><label>[14]</label> <mixed-citation publication-type="journal"><string-name><given-names>Volodymyr</given-names> <surname>Mnih</surname></string-name>, <string-name><given-names>Koray</given-names> <surname>Kavukcuoglu</surname></string-name>, <string-name><given-names>David</given-names> <surname>Silver</surname></string-name>, <string-name><given-names>Andrei A.</given-names> <surname>Rusu</surname></string-name>, <string-name><given-names>Joel</given-names> <surname>Veness</surname></string-name>, <string-name><given-names>Marc G.</given-names> <surname>Bellemare</surname></string-name>, <string-name><given-names>Alex</given-names> <surname>Graves</surname></string-name>, <string-name><given-names>Martin</given-names> <surname>Riedmiller</surname></string-name>, <string-name><given-names>Andreas K.</given-names> <surname>Fidjeland</surname></string-name>, <string-name><given-names>Georg</given-names> <surname>Ostrovski</surname></string-name>, <string-name><given-names>Stig</given-names> <surname>Petersen</surname></string-name>, <string-name><given-names>Charles</given-names> <surname>Beattie</surname></string-name>, <string-name><given-names>Amir</given-names> <surname>Sadik</surname></string-name>, <string-name><given-names>Ioannis</given-names> <surname>Antonoglou</surname></string-name>, <string-name><given-names>Helen</given-names> <surname>King</surname></string-name>, <string-name><given-names>Dharshan</given-names> <surname>Kumaran</surname></string-name>, <string-name><given-names>Daan</given-names> <surname>Wierstra</surname></string-name>, <string-name><given-names>Shane</given-names> <surname>Legg</surname></string-name>, and <string-name><given-names>Demis</given-names> <surname>Hassabis</surname></string-name>. <article-title>Human-level control through deep reinforcement learning</article-title>. <source>Nature</source>, <volume>518</volume>(<issue>7540</issue>):<fpage>529</fpage>&#x2013;<lpage>533</lpage>, <month>feb</month> <year>2015</year>.</mixed-citation></ref>
<ref id="c15"><label>[15]</label> <mixed-citation publication-type="journal"><string-name><given-names>Joana P.</given-names> <surname>Neto</surname></string-name>, <string-name><given-names>Gon&#x00E7;alo</given-names> <surname>Lopes</surname></string-name>, <string-name><given-names>Jo&#x00E3;o</given-names> <surname>Fraz&#x00E3;o</surname></string-name>, <string-name><given-names>Joana</given-names> <surname>Nogueira</surname></string-name>, <string-name><given-names>Pedro</given-names> <surname>Lacerda</surname></string-name>, <string-name><given-names>Pedro</given-names> <surname>Bai&#x00E3;o</surname></string-name>, <string-name><given-names>Arno</given-names> <surname>Aarts</surname></string-name>, <string-name><given-names>Alexandru</given-names> <surname>Andrei</surname></string-name>, <string-name><given-names>Silke</given-names> <surname>Musa</surname></string-name>, <string-name><given-names>Elvira</given-names> <surname>Fortunato</surname></string-name>, <string-name><given-names>Pedro</given-names> <surname>Barquinha</surname></string-name>, and <string-name><given-names>Adam</given-names> <surname>Kampff</surname></string-name>. <article-title>Validating silicon polytrodes with paired juxtacellular recordings: method and dataset</article-title>. <source>Technical Report biorxiv;037937v2</source>, <month>jan</month> <year>2016</year>.</mixed-citation></ref>
<ref id="c16"><label>[16]</label> <mixed-citation publication-type="journal"><string-name><given-names>Marius</given-names> <surname>Pachitariu</surname></string-name>, <string-name><given-names>Nicholas</given-names> <surname>Steinmetz</surname></string-name>, <string-name><given-names>Shabnam</given-names> <surname>Kadir</surname></string-name>, <string-name><given-names>Matteo</given-names> <surname>Carandini</surname></string-name>, and <string-name><given-names>Kenneth D</given-names> <surname>Harris</surname></string-name>. <article-title>Kilosort: realtime spike-sorting for extracellular electrophysiology with hundreds of channels</article-title>. <source>Technical Report biorxiv;061481v1</source>, <month>jun</month> <year>2016</year>.</mixed-citation></ref>
<ref id="c17"><label>[17]</label> <mixed-citation publication-type="journal"><string-name><given-names>Alexander</given-names> <surname>Platzer</surname></string-name>. <article-title>Visualization of SNPs with t-SNE</article-title>. <source>PLOS ONE</source>, <volume>8</volume>(<issue>2</issue>):<fpage>e56883</fpage>, <month>feb</month> <year>2013</year>.</mixed-citation></ref>
<ref id="c18"><label>[18]</label> <mixed-citation publication-type="journal"><string-name><given-names>R.</given-names> <surname>Quian Quiroga</surname></string-name>, <string-name><given-names>Z.</given-names> <surname>Nadasdy</surname></string-name>, and <string-name><given-names>Y.</given-names> <surname>Ben-Shaul</surname></string-name>. <article-title>Unsupervised Spike Detection and Sorting with Wavelets and Superparamagnetic Clustering</article-title>. <source>Neural Computation</source>, <volume>16</volume>(<issue>8</issue>):<fpage>1661</fpage>&#x2013;<lpage>1687</lpage>, <month>aug</month> <year>2004</year>.</mixed-citation></ref>
<ref id="c19"><label>[19]</label> <mixed-citation publication-type="journal"><string-name><given-names>M. L.</given-names> <surname>Recce</surname></string-name> and <string-name><given-names>John</given-names> <surname>O&#x2019;Keefe</surname></string-name>. <article-title>The Tetrode: An Improved technique for multi-unit extracellular recording</article-title>,. In <source>Society for Neuroscience Abs</source>, volume <volume>2</volume>(<issue>15</issue>), page <fpage>1250</fpage>. <lpage>1989</lpage>.</mixed-citation></ref>
<ref id="c20"><label>[20]</label> <mixed-citation publication-type="journal"><string-name><given-names>A. D.</given-names> <surname>Redish</surname></string-name>, <string-name><given-names>F. P.</given-names> <surname>Battaglia</surname></string-name>, <string-name><given-names>M. K.</given-names> <surname>Chawla</surname></string-name>, <string-name><given-names>A. D.</given-names> <surname>Ekstrom</surname></string-name>, <string-name><given-names>J. L.</given-names> <surname>Gerrard</surname></string-name>, <string-name><given-names>P.</given-names> <surname>Lipa</surname></string-name>, <string-name><given-names>E. S.</given-names> <surname>Rosenzweig</surname></string-name>, <string-name><given-names>P. F.</given-names> <surname>Worley</surname></string-name>, <string-name><given-names>J. F.</given-names> <surname>Guzowski</surname></string-name>, <string-name><given-names>B.L.</given-names> <surname>McNaughton</surname></string-name>, and <string-name><given-names>C. A.</given-names> <surname>Barnes</surname></string-name>. <article-title>Independence of firing correlates of anatomically proximate hippocampal pyramidal cells</article-title>. <source>The Journal of Neuroscience: The Official Journal of the Society for Neuroscience</source>, <volume>21</volume>(<issue>5</issue>):<fpage>RC134</fpage>, <month>mar</month> <year>2001</year>.</mixed-citation></ref>
<ref id="c21"><label>[21]</label> <mixed-citation publication-type="journal"><string-name><given-names>Hernan G.</given-names> <surname>Rey</surname></string-name>, <string-name><given-names>Matias J.</given-names> <surname>Ison</surname></string-name>, <string-name><given-names>Carlos</given-names> <surname>Pedreira</surname></string-name>, <string-name><given-names>Antonio</given-names> <surname>Valentin</surname></string-name>, <string-name><given-names>Gonzalo</given-names> <surname>Alarcon</surname></string-name>, <string-name><given-names>Richard</given-names> <surname>Selway</surname></string-name>, <string-name><given-names>Mark P.</given-names> <surname>Richardson</surname></string-name>, and <string-name><given-names>Rodrigo Quian</given-names> <surname>Quiroga</surname></string-name>. <article-title>Single-cell recordings in the human medial temporal lobe</article-title>. <source>Journal of Anatomy</source>, <volume>227</volume>(<issue>4</issue>):<fpage>394</fpage>&#x2013;<lpage>408</lpage>, <month>oct</month> <year>2015</year>.</mixed-citation></ref>
<ref id="c22"><label>[22]</label> <mixed-citation publication-type="journal"><string-name><given-names>Hernan Gonzalo</given-names> <surname>Rey</surname></string-name>, <string-name><given-names>Carlos</given-names> <surname>Pedreira</surname></string-name>, and <string-name><given-names>Rodrigo Quian</given-names> <surname>Quiroga</surname></string-name>. <article-title>Past, present and future of spike sorting techniques</article-title>. <source>Brain Research Bulletin</source>, <volume>119</volume>:<fpage>106</fpage>&#x2013;<lpage>117</lpage>, <month>oct</month> <year>2015</year>.</mixed-citation></ref>
<ref id="c23"><label>[23]</label> <mixed-citation publication-type="other"><string-name><given-names>Cyrille</given-names> <surname>Rossant</surname></string-name>, <string-name><given-names>Shabnam N</given-names> <surname>Kadir</surname></string-name>, <string-name><given-names>Dan F M</given-names> <surname>Goodman</surname></string-name>, <string-name><given-names>John</given-names> <surname>Schulman</surname></string-name>, <string-name><given-names>Maximilian L D</given-names> <surname>Hunter</surname></string-name>, <string-name><given-names>Aman B</given-names> <surname>Saleem</surname></string-name>, <string-name><given-names>Andres</given-names> <surname>Grosmark</surname></string-name>, <string-name><given-names>Mariano</given-names> <surname>Belluscio</surname></string-name>, <string-name><given-names>George H</given-names> <surname>Denfield</surname></string-name>, <string-name><given-names>Alexander S</given-names> <surname>Ecker</surname></string-name>, <string-name><given-names>Andreas S</given-names> <surname>Tolias</surname></string-name>, <string-name><given-names>Samuel</given-names> <surname>Solomon</surname></string-name>, <string-name><given-names>Gy&#x00F6;rgy</given-names> <surname>Buzs&#x00E1;ki</surname></string-name>, <string-name><given-names>Matteo</given-names> <surname>Carandini</surname></string-name>, and <string-name><given-names>Kenneth D</given-names> <surname>Harris</surname></string-name>. <article-title>Spike sorting for large, dense electrode arrays</article-title>. <source>Nature Neuroscience</source>, <month>mar</month> <year>2016</year>.</mixed-citation></ref>
<ref id="c24"><label>[24]</label> <mixed-citation publication-type="journal"><string-name><given-names>Patrick</given-names> <surname>Ruther</surname></string-name> and <string-name><given-names>Oliver</given-names> <surname>Paul</surname></string-name>. <article-title>New approaches for CMOS-based devices for large-scale neural recording</article-title>. <source>Current Opinion in Neurobiology</source>, <volume>32</volume>:<fpage>31</fpage>&#x2013;<lpage>37</lpage>, <month>jun</month> <year>2015</year>.</mixed-citation></ref>
<ref id="c25"><label>[25]</label> <mixed-citation publication-type="journal"><string-name><given-names>Takashi</given-names> <surname>Takekawa</surname></string-name>, <string-name><given-names>Yoshikazu</given-names> <surname>Isomura</surname></string-name>, and <string-name><given-names>Tomoki</given-names> <surname>Fukai</surname></string-name>. <article-title>Accurate spike sorting for multi-unit recordings</article-title>. <source>European Journal of Neuroscience</source>, <volume>31</volume>(<issue>2</issue>):<fpage>263</fpage>&#x2013;<lpage>272</lpage>, <month>jan</month> <year>2010</year>.</mixed-citation></ref>
<ref id="c26"><label>[26]</label> <mixed-citation publication-type="journal"><string-name><given-names>Laurens Van Der</given-names> <surname>Maaten</surname></string-name>. <article-title>Accelerating t-sne using tree-based algorithms</article-title>. <source>The Journal of Machine Learning Research</source>, <volume>15</volume>(<issue>1</issue>):<fpage>3221</fpage>&#x2013;<lpage>3245</lpage>, <year>2014</year>.</mixed-citation></ref>
<ref id="c27"><label>[27]</label> <mixed-citation publication-type="journal"><string-name><given-names>Laurens Van der</given-names> <surname>Maaten</surname></string-name> and <string-name><given-names>Geoffrey</given-names> <surname>Hinton</surname></string-name>. <article-title>Visualizing data using t-SNE</article-title>. <source>Journal of Machine Learning Research</source>, <volume>9</volume>(<issue>2579&#x2013;2605</issue>):<fpage>85</fpage>, <year>2008</year>.</mixed-citation></ref>
<ref id="c28"><label>[28]</label> <mixed-citation publication-type="journal"><string-name><given-names>Guang-Li</given-names> <surname>Wang</surname></string-name>, <string-name><given-names>Yi</given-names> <surname>Zhou</surname></string-name>, <string-name><given-names>Ai-Hua</given-names> <surname>Chen</surname></string-name>, <string-name><given-names>Pu-Ming</given-names> <surname>Zhang</surname></string-name>, and <string-name><given-names>Pei-Ji</given-names> <surname>Liang</surname></string-name>. <article-title>A robust method for spike sorting with automatic overlap decomposition</article-title>. <source>IEEE transactions on bio-medical engineering</source>, <volume>53</volume>(<issue>6</issue>):<fpage>1195</fpage>&#x2013;<lpage>1198</lpage>, <month>jun</month> <year>2006</year>.</mixed-citation></ref>
<ref id="c29"><label>[29]</label> <mixed-citation publication-type="journal"><string-name><given-names>M.</given-names> <surname>Wehr</surname></string-name>, <string-name><given-names>J. S.</given-names> <surname>Pezaris</surname></string-name>, and <string-name><given-names>M.</given-names> <surname>Sahani</surname></string-name>. <article-title>Simultaneous paired intracellular and tetrode recordings for evaluating the performance of spike sorting algorithms</article-title>. <source>Neurocomputing</source>, <volume>26&#x2013;27</volume>:<fpage>1061</fpage>&#x2013;<lpage>1068</lpage>, <month>jun</month> <year>1999</year>.</mixed-citation></ref>
<ref id="c30"><label>[30]</label> <mixed-citation publication-type="book"><string-name><given-names>Frank</given-names> <surname>Wood</surname></string-name>, <string-name><given-names>M.</given-names> <surname>Fellows</surname></string-name>, <string-name><given-names>J. R.</given-names> <surname>Donoghue</surname></string-name>, and <string-name><given-names>M. J.</given-names> <surname>Black</surname></string-name>. <chapter-title>Automatic spike sorting for neural decoding</chapter-title>. In <source>Engineering in Medicine and Biology Society, 2004. IEMBS&#x2019;04. 26th Annual International Conference of the IEEE</source>, volume <volume>2</volume>, pages <fpage>4009</fpage>&#x2013;<lpage>4012</lpage>. <publisher-name>IEEE</publisher-name>., <year>2004</year>.</mixed-citation></ref>
<ref id="c31"><label>[31]</label> <mixed-citation publication-type="journal"><string-name><given-names>Weiwei</given-names> <surname>Xu</surname></string-name>, <string-name><given-names>Xingpeng</given-names> <surname>Jiang</surname></string-name>, <string-name><given-names>Xiaohua</given-names> <surname>Hu</surname></string-name>, and <string-name><given-names>Guangrong</given-names> <surname>Li</surname></string-name>. <article-title>Visualization of genetic disease-phenotype similarities by multiple maps t-SNE with Laplacian regularization</article-title>. <source>BMC medical genomics</source>, <volume>7</volume>(<issue>Suppl 2</issue>) sorting in vitro and :<fpage>S1</fpage>, <year>2014</year>.</mixed-citation></ref>
<ref id="c32"><label>[32]</label> <mixed-citation publication-type="journal"><string-name><given-names>Pierre</given-names> <surname>Yger</surname></string-name>, <string-name><given-names>Giulia L. B.</given-names> <surname>Spampinato</surname></string-name>, <string-name><given-names>Elric</given-names> <surname>Esposito</surname></string-name>, <string-name><given-names>Baptiste</given-names> <surname>Lefebvre</surname></string-name>, <string-name><given-names>Stephane</given-names> <surname>Deny</surname></string-name>, <string-name><given-names>Christophe</given-names> <surname>Gardella</surname></string-name>, <string-name><given-names>Marcel</given-names> <surname>Stimberg</surname></string-name>, <string-name><given-names>Florian</given-names> <surname>Jetter</surname></string-name>, <string-name><given-names>Guenther</given-names> <surname>Zeck</surname></string-name>, <string-name><given-names>Serge</given-names> <surname>Picaud</surname></string-name>, <string-name><given-names>Jens</given-names> <surname>Duebel</surname></string-name>, and <string-name><given-names>Olivier</given-names> <surname>Marre</surname></string-name>. <article-title>Fast and accurate spike sorting in vitro and in vivo for up to thousands of electrodes</article-title>. <source>Technical Report biorxiv;067843v1</source>, <month>aug</month> <year>2016</year>.</mixed-citation></ref>
<ref id="c33"><label>[33]</label> <mixed-citation publication-type="journal"><string-name><given-names>Pu-Ming</given-names> <surname>Zhang</surname></string-name>, <string-name><given-names>Jin-Yong</given-names> <surname>Wu</surname></string-name>, <string-name><given-names>Yi</given-names> <surname>Zhou</surname></string-name>, <string-name><given-names>Pei-Ji</given-names> <surname>Liang</surname></string-name>, and <string-name><given-names>Jing-Qi</given-names> <surname>Yuan</surname></string-name>. <article-title>Spike sorting based on automatic template reconstruction with a partial solution to the overlapping problem</article-title>. <source>Journal of Neuroscience Methods</source>, <volume>135</volume>(<issue>1&#x2013;2</issue>):<fpage>55</fpage>&#x2013;<lpage>65</lpage>, <month>may</month> <year>2004</year>.</mixed-citation></ref>
</ref-list>
</back>
</article>
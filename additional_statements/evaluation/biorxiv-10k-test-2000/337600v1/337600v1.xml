<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.2d1 20170631//EN" "JATS-archivearticle1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" article-type="article" dtd-version="1.2d1" specific-use="production" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">BIORXIV</journal-id>
<journal-title-group>
<journal-title>bioRxiv</journal-title>
<abbrev-journal-title abbrev-type="publisher">bioRxiv</abbrev-journal-title>
</journal-title-group>
<publisher>
<publisher-name>Cold Spring Harbor Laboratory</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1101/337600</article-id>
<article-version>1.1</article-version>
<article-categories>
<subj-group subj-group-type="author-type">
<subject>Regular Article</subject>
</subj-group>
<subj-group subj-group-type="heading">
<subject>New Results</subject>
</subj-group>
<subj-group subj-group-type="hwp-journal-coll">
<subject>Genomics</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>FADU: A Feature Counting Tool for Prokaryotic RNA-Seq Analysis</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Chung</surname>
<given-names>Matthew</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a2">2</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Adkins</surname>
<given-names>Ricky S.</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Shetty</surname>
<given-names>Amol C.</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Sadzewicz</surname>
<given-names>Lisa</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Tallon</surname>
<given-names>Luke J.</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Fraser</surname>
<given-names>Claire M.</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a3">3</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Rasko</surname>
<given-names>David A.</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a2">2</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Mahurkar</surname>
<given-names>Anup</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Dunning Hotopp</surname>
<given-names>Julie C.</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a2">2</xref>
<xref ref-type="aff" rid="a4">4</xref>
</contrib>
<aff id="a1"><label>1</label><institution>Institute for Genome Sciences, University of Maryland School of Medicine</institution>, Baltimore, MD 21201, <country>USA</country></aff>
<aff id="a2"><label>2</label><institution>Department of Microbiology and Immunology, University of Maryland School of Medicine</institution>, Baltimore, MD 21201, <country>USA</country></aff>
<aff id="a3"><label>3</label><institution>Department of Medicine, University of Maryland School of Medicine</institution>, Baltimore, MD 21201, <country>USA</country></aff>
<aff id="a4"><label>4</label><institution>Greenebaum Cancer Center, University of Maryland School of Medicine</institution>, Baltimore, MD 21201, <country>USA</country></aff>
</contrib-group>
<author-notes>
<fn id="n1"><p>MC: <email>mattchung@umaryland.edu</email>, RSA: <email>sadkins@som.umaryland.edu</email>, ACS: <email>ashetty@som.umaryland.edu</email>, LS: <email>lsadzewicz@som.umaryland.edu</email>, LJT: <email>ljtallon@som.umaryland.edu</email>, CMF: <email>cmfraser@som.umaryland.edu</email>, DAR: <email>drasko@som.umaryland.edu</email>, AM: <email>amahurkar@som.umaryland.edu</email>, JCDH: <email>jdhotopp@som.umaryland.edu</email></p></fn>
</author-notes>
<pub-date pub-type="epub">
<year>2018</year>
</pub-date>
<elocation-id>337600</elocation-id>
<history>
<date date-type="received">
<day>02</day>
<month>6</month>
<year>2018</year>
</date>
<date date-type="rev-recd">
<day>02</day>
<month>6</month>
<year>2018</year>
</date>
<date date-type="accepted">
<day>03</day>
<month>6</month>
<year>2018</year>
</date>
</history>
<permissions>
<copyright-statement>&#x00A9; 2018, Posted by Cold Spring Harbor Laboratory</copyright-statement>
<copyright-year>2018</copyright-year>
<license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by/4.0/"><license-p>This pre-print is available under a Creative Commons License (Attribution 4.0 International), CC BY 4.0, as described at <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link></license-p></license>
</permissions>
<self-uri xlink:href="337600.pdf" content-type="pdf" xlink:role="full-text"/>
<abstract>
<title>Abstract</title>
<sec><title>Motivation</title>
<p>The major algorithms for quantifying transcriptomics data for differential gene expression analysis were designed for analyzing data from human or human-like genomes, specifically those with single gene transcripts and distinct transcriptional boundaries that extend beyond the coding sequence (CDS) as identified through expressed sequence tags (ESTs) or EST-like sequence data. Some eukaryotic genomes and all, or nearly all, bacterial genomes require alternate methods of quantification since they lack annotation of transcriptional boundaries with EST or EST-like data, have overlapping transcriptional boundaries, and/or have polycistronic transcripts.</p>
</sec>
<sec><title>Results</title>
<p>An algorithm was developed and tested that better quantifies transcriptomics data for differential gene expression analysis in organisms with overlapping transcriptional units and polycistronic transcripts. Using data from standard libraries originating from <italic>Escherichia coli</italic> and <italic>Ehrlichia chaffeensis,</italic> and strand-specific libraries from the <italic>Wolbachia</italic> endosymbiont wBm, FADU can derive counts for genes that are missed by HTSeq and featurecounts. Using the default parameters with the <italic>E. coli</italic> data, FADU can detect transcription of 51 more genes than HTSeq in union mode and 21 genes more than featurecounts, with 42 and 18 of these features being &#x003C;300 bp, respectively. Due to its ability to derive counts for otherwise unrepresented genes without overstating their abundance, we believe FADU to be an improved tool for quantifying transcripts in prokaryotic systems for RNA-Seq analyses.</p>
</sec>
<sec sec-type="availability"><title>Availability and implementation</title>
<p>FADU is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/adkinsrs/FADU">https://github.com/adkinsrs/FADU</ext-link>. FADU was implemented using Python3 and requires the PySAM module (version 0.12.0.1 or later).</p>
</sec>
<sec><title>Contact</title>
<p><email>jdhotopp@som.umaryland.edu</email></p>
</sec>
</abstract>
<counts>
<page-count count="21"/>
</counts>
</article-meta>
</front>
<body>
<sec id="s1">
<label>1.</label>
<title>Introduction</title>
<p>A typical analysis pipeline for a gene expression analysis of transcriptomics sequencing data involves: (a) mapping sequencing reads to a whole genome transcriptome assembly with an aligner like Bowtie (<xref ref-type="bibr" rid="c5">Langmead, et al., 2009</xref>), BWA (<xref ref-type="bibr" rid="c8">Li and Durbin, 2009</xref>), HISAT (<xref ref-type="bibr" rid="c4">Kim, et al., 2015</xref>), or STAR (<xref ref-type="bibr" rid="c3">Dobin, et al., 2013</xref>); (b) counting reads or fragments for each gene with a tool like HTSeq (<xref ref-type="bibr" rid="c2">Anders, et al., 2015</xref>) or Subread featurecounts (<xref ref-type="bibr" rid="c9">Liao, et al., 2014</xref>); and (c) finding differentially expressed genes through the use of tools like DESeq (<xref ref-type="bibr" rid="c1">Anders and Huber, 2010</xref>) and edgeR (<xref ref-type="bibr" rid="c12">Robinson, et al., 2010</xref>). Most of these tools were designed to analyze human data, and as such, they carefully consider important issues that affect these analyses, such as transcript splicing. However, important and relevant genomic features in other organisms complicate transcriptomics analyses in ways unaddressed with this human-centric focus, for example the polycistronic transcripts of bacterial operons.</p>
<p>Most commonly identified in prokaryotes, operons are transcriptional units that encode polycistronic transcripts with multiple coding sequences (CDSs). This allows for the coordinated transcription and regulation of all the genes in an operon. As an example, the <italic>lac</italic> operon encodes a permease for transporting lactose into the cell and a &#x03B2;-galactosidase which converts lactose to galactose and glucose, allowing for the cis-regulation of multiple functional related genes under a single promoter (<xref ref-type="bibr" rid="c7">Lewis, 2013</xref>).</p>
<p>Presently, the two most popular tools for transcriptome analyses are HTSeq (<xref ref-type="bibr" rid="c2">Anders, et al., 2015</xref>) and Subread featurecounts (<xref ref-type="bibr" rid="c9">Liao, et al., 2014</xref>). Although in most cases, both tools have no issue quantifying transcripts for specific genes, issues arise when a single fragment can be assigned to multiple genes. By default, both HTSeq and featurecounts bin these reads as ambiguous, rather than assigning them to a specific gene. While this may not be as significant of a problem in eukaryotic systems, the features of a prokaryotic genome, namely the smaller gene size, smaller genome size, and the presence of operons, make it difficult for HTSeq and featurecounts to quantify smaller genes, especially those within operons that are smaller than the library insert size.</p>
<p>Here, we test how operons and polycistronic transcripts confound HTSeq and featurecounts, leading to a lack of sequencing data for small genes within operons. We developed a new tool, Feature Aggregate Depth Utility (FADU) to quantify transcription in bacterial genomes. We test FADU on multiple bacterial genomes to demonstrate its utility at capturing sequence data for these underrepresented genes.</p>
</sec>
<sec id="s2">
<label>2.</label>
<title>System and Methods</title>
<sec id="s2a">
<label>2.1</label>
<title>Availability of data sets</title>
<p>Three data sets were used in all analyses consisting of RNA-Seq paired-end data from standard, non-stranded libraries originating from (a) <italic>E. coli</italic> and (b) <italic>E. chaffeensis</italic> and stranded libraries from (b) wBm. The sequencing reads for the three datasets can be found in the NCBI Sequencing Read Archive at the following accession numbers, respectively: (pending), SRX485438, and SRX2505171.</p>
</sec>
<sec id="s2b">
<label>2.2</label>
<title>FADU, featureCounts, and HTSeq comparisons</title>
<p>For comparative analyses, FADU was run using &#x2013;count_by fragment and all other default options. HTSeq vO.lO.O (<xref ref-type="bibr" rid="c2">Anders, et al., 2015</xref>) was run using default settings while changing the mode for mode-specific analyses. Subread featureCounts vl.6.1 (<xref ref-type="bibr" rid="c9">Liao, et al., 2014</xref>) was run using the -p option to specify counting by fragments and/or-0 or-fractional to specify counting different methods of counting ambiguous reads depending on the analysis. Unrooted dendrograms were generated using the R package APE v5.0 (Analysis of Phylogenetics and Evolution) (<xref ref-type="bibr" rid="c10">Paradis, et al., 2004</xref>; <xref ref-type="bibr" rid="c11">Popescu, et al., 2012</xref>). Bootstrap values were obtained using the R package pvclust v2.0-0 (<xref ref-type="bibr" rid="c13">Suzuki and Shimodaira, 2006</xref>). The principal component analysis was performed using the R packages FactoMineR vl.39 (<xref ref-type="bibr" rid="c6">Le, et al., 2008</xref>) and factoextra vl.0.5 (<ext-link ext-link-type="uri" xlink:href="http://sthda.com/english/rpkgs/factoextra/">http://sthda.com/english/rpkgs/factoextra/</ext-link>).</p>
</sec>
</sec>
<sec id="s3">
<label>3.</label>
<title>Algorithm</title>
<sec id="s3a">
<label>3.1</label>
<title>Creating a mapping index using an annotation file</title>
<p>A mapping index is created that contains each position in the reference genome. For each feature present in the GFF3 or GTF annotation input file, coordinates are marked in the mapping index for each of the features&#x2019; positions. If the reads are &#x2018;stranded&#x2019; or &#x2018;reverse-stranded&#x2019;, a separate mapping index is created and marked for each strand. Each of these coordinates are marked using the features&#x2019; attribute id. At positions shared by multiple features, the position will be marked as an overlap between two features. These positions, along with positions absent of any feature, will be excluded from downstream feature count calculations. From this, a statistics file will be written that contains the following information for each feature: (a) strand, (b) length of feature, (c) number of coordinates mapping solely to that gene, (d) proportion of non-overlapping coordinates compared to length of feature.</p>
</sec>
<sec id="s3b">
<label>3.2</label>
<title>Calculating read/fragment counts for each feature</title>
<p>For each BAM file, the read depth is calculated using the depth function of samtools with the -aa option If FADU is set to calculate fragment depth, all non-properly-paired reads are discarded by default and the read depth is adjusted to determine the fragment depth at all positions. The user can elect to keep all mapped read (as opposed to properly paired reads), including singletons and discordant reads, in which case all reads will be included in the fragment depth totals. To calculate the fragment depth from the samtools depth output, for each of the properly-paired reads, all coordinates in the insert region between the paired reads are incremented by one and coordinates where the reads overlap are decremented by one. If BAM data is identified as &#x201C;stranded&#x201D; or &#x201C;reverse-stranded&#x201D;, each BAM file is split into a &#x201C;(&#x002B;)-stranded&#x201D; and a &#x201C;(-)-stranded&#x201D; BAM file, based on the bitwise flag field in the input BAM file. Each stranded BAM will have its read or fragment depth calculated separately.</p>
<p>For each input BAM file, the average read length or average fragment length is determined to calculate counts for each feature. If the option to keep only properly paired reads is set, then only those reads will factor into the average read or fragment length calculations.</p>
<p>For each feature, all the coordinates that mapped solely to this feature are collected. The total depth of this feature is calculated by summing the read or fragment depth for each coordinate collected in the feature, and this total is divided by the average read or fragment length to derive a fragment count for each feature. The feature ID and count statistic is written to a file. If multiple BAM files were used as input, then the counts of each individual input will be written to a separate file.</p>
</sec>
</sec>
<sec id="s4">
<label>4.</label>
<title>Implementation</title>
<p>FADU was written entirely using the Python3 programming language. It relies heavily on the PySam module (version 0.12.0.1 or later) to parse information from the BAM alignment files, to write intermediate BAM files, and to perform basic samtools commands. The program supports multiprocessing, and the user can specify the number of processes to be utilized. Each process will handle a separate BAM input file if a list of files is provided. FADU was tested in the UNIX environment.</p>
<p>To minimize the amount of memory used, temporary files are written when possible to keep track of read depth and the coordinates of properly paired reads. In addition, when read depth is converted into fragment depth, only the bases with nonzero depth are read into memory.</p>
</sec>
<sec id="s5">
<label>5.</label>
<title>Results</title>
<sec id="s5a">
<label>5.1</label>
<title>Gene detection performance of FADU, HTSeq, and featureCounts</title>
<p>To assess how FADU compares to featureCounts and HTSeq in deriving counts, we used paired-end sequencing data from three different sets of transcriptome data: (a) paired end reads from a standard (i.e. not strand-specific) library constructed from <italic>Escherichia coli</italic> RNA, (b) paired end reads from a standard library constructed from <italic>Ehrlichia chaffeensis</italic> RNA, and (c) paired-end reads from a strand-specific library constructed from <italic>Wolbachia</italic> endosymbiont of <italic>Brugia malayi</italic> wBm RNA.</p>
<p>Of the 4,647 protein-coding genes detected in <italic>E. coli,</italic> counts for 51 genes could be obtained using FADU, but not HTSeq union, the default HTSeq mode <bold>(<xref rid="fig2" ref-type="fig">Figure 2a</xref>).</bold> Because HTSeq union discards fragments spanning multiple features, in the case when unstranded data is being used, HTSeq union is likely unable to identify these genes because: (1) the gene is largely overlapping another feature either on the same or opposite strand or (2) the gene is within an operon and smaller than the average library fragment size. Because FADU calculates counts based on the depth at only positions unique to any given feature, FADU can assign partial counts to multiple features per fragment, allowing for the increased representation of smaller genes, as well as the unique portion, if any, of overlapping genes. Supporting this, 42 of the 51 genes unable to be detected with HTSeq union are &#x003C;300 bp in size <bold>(<xref rid="tbl1" ref-type="table">Table 1</xref>).</bold> While HTSeq union and featureCounts are largely similar, featureCounts handles ambiguous reads differently. Given a fragment that maps to multiple features, featureCounts will assign the paired-end fragment to the feature that maps to the majority of the individual paired-end reads (<xref ref-type="bibr" rid="c9">Liao, et al., 2014</xref>). When comparing FADU with featureCounts. 21 genes were only detected using FADU, with 18 of these genes being &#x003C;300 bp in size <bold>(<xref rid="fig2" ref-type="fig">Figure 2b</xref>).</bold></p>
<table-wrap id="tbl1" orientation="portrait" position="float">
<label>Table 1.</label>
<caption><p>Key Properties of Data Examined</p></caption>
<graphic xlink:href="337600_tbl1.tif"/>
</table-wrap>
<p>Similarly, FADU can derive counts for an additional five genes in <italic>E. chaffeensis</italic> compared to HTSeq union or an additional two genes when compared to featureCounts. All genes detected only with FADU in <italic>E.chaffeensis</italic> were &#x003C;300 bp in length. With wBm, 31 additional genes were detected in FADU when compared to HTSeq union, of which 10 are &#x003C;300 bp, while 24 additional genes were detected when compared to featurecounts, of which <bold>7</bold> are &#x003C;300 bp <bold>(<xref rid="fig2" ref-type="fig">Figure 2ab</xref>).</bold> This indicates that despite featurecounts being able to detect a greater number of genes than HTSeq union, FADU can derive counts for genes that neither HTSeq or featurecounts can by default.</p>
<p>HTSeq has two additional modules to derive counts for transcriptome data that both attempt to assign ambiguous reads. In the case that a fragment overlaps multiple features, HTSeq intersection-nonempty takes the intersect of the features found at each non-empty position and if only one feature is returned, a count is assigned to that feature. Similarly, HTSeq intersection-strict takes the intersect of the features found at all positions of the fragment and again, if only one feature is returned, a count is assigned to that feature (<xref ref-type="bibr" rid="c2">Anders, et al., 2015</xref>). While this allows for the assignment of more ambiguous fragments, smaller genes are still under-represented. Additionally, because HTSeq intersection-strict also discards fragments that partially map to intergenic regions, and because most prokaryotic organisms currently have no UTR annotations, this will result in discarding reads at the 5&#x2019;-and 3&#x2019;-end of prokaryotic transcripts. In all cases, for genes smaller than the library insert size, it becomes difficult to extract any meaningful fragment counts.</p>
<p>When comparing FADU to HTSeq intersection-strict, FADU derives counts for an additional 182 genes. HTSeq intersection-strict fails to obtain counts for &#x003E;100 additional genes compared to HTSeq union <bold>(Supplementary <xref rid="fig1" ref-type="fig">Figure 1ab</xref>),</bold> confirming the inability of HTSeq-intersection-strict to accurate assess prokaryotic transcriptome data for instances in which the reference has limited UTR annotations. Supporting this, HTSeq intersection-strict fails to detect an additional 60 genes in <italic>E. chaffeensis</italic> and 71 genes in wBm when compared to FADU. HTSeq intersection-nonempty performs similarly to HTSeq union, failing to detect 48, 4, and 31 genes when compared to FADU in <italic>E. coli, E. chaffeensis,</italic> and wBm, respectively, indicating regardless of which module used, HTSeq is too conservative in assigning reads to genes.</p>
<fig id="fig1" position="float" fig-type="figure">
<label>Figure 1:</label>
<caption><title>Comparison of TPM values derived from FADU to HTSeq union and featureCounts default For three different sets of RNA-Seq paired-end data from <italic>E. coli, E. chaffeensis,</italic> and wBm, the log<sub>2</sub> TPM values for genes quantitated using FADU were plotted against the log<sub>2</sub> TPM values for genes quantitated with <bold>(A)</bold> HTSeq union and <bold>(B)</bold> featureCounts default. Each point is representative of a single gene, with points in blue being representative of genes &#x003C;300 bp in length. Genes with similar count values are expected to lie close to the identity line (x=y; red). Genes whose expression values are more elevated in FADU lie above the identity line while genes whose expression values are elevated in HTSeq of featureCounts lie below the identity line. Genes able to be quantified in FADU but not in HTSeq union or featureCounts default lie on the y-axis. These genes include very highly transcribed genes suggesting that they are missed by all the tools except FADU, and not that they are poorly transcribed, small genes.</title></caption>
<graphic xlink:href="337600_fig1.tif"/>
</fig>
<p>While featurecounts does not have any distinct modules, there are two options which help to assign counts for ambiguous reads. The first is the -O option, in which cases where a fragment overlaps multiple features, a single count is added to both. The second is specifying both the -O and the - fragment options, in which case fragments that overlap <italic>x</italic> features are given a count of <italic>1/x.</italic> For the <italic>E. chaffeensis,</italic> and wBm datasets, FADU obtains counts for the same number of genes as both featurecounts overlap and featurecounts fractional-overlap <bold>(Supplementary <xref rid="fig2" ref-type="fig">Figure 2ab</xref>).</bold> However, in the <italic>E. coli</italic> dataset, both modes of featureCounts have counts for nine additional genes compared to FADU. Of these nine <italic>E. coli</italic> genes, eight are completely overlapped by another gene either on the same or opposite strand. Because these genes have no unique positions with which FADU can use to determine count values, FADU returns a fragment count of 0 for these genes. The last gene, E2348C_0713, is 642 bp long with the first 104 bp being overlapped by another gene. At most, featureCounts overlap gives E2348C_0713 a fragment count of 2, while featureCounts fractional-overlap assigns a count of 1, indicating that only two fragments map to E2348C_0713 map within the first 104 bp. Because FADU calculates fragment counts using only unique positions of a gene, FADU assigns a fragment count of 0 to E2348C_0713.</p>
<fig id="fig2" position="float" fig-type="figure">
<label>Figure 2:</label>
<caption><title>Clustering patterns of the different count values in ivBm derived with HTSeq modules, featureCounts modes, and FADU <bold>(A)</bold> An unrooted dendrogram with 1000 bootstraps was generated using the log<sub>2</sub> count values from wBm calculated using HTSeq, featureCounts, and FADU. The dendrogram reveals three distinct clusters of (1) featureCounts default, HTseq union, and HTSeq intersection-nonempty; (2) HTSeq intersection-strict; and (3) FADU, featureCounts overlap, and featureCounts fractional-overlap. <bold>(B)</bold> The log<sub>2</sub> count values for all wBm genes with count values derived from at least one of the tools was used to generate a heatmap. The wBm genes are displayed on the horizontal axis while each of the tools are displayed on the vertical axis. All cells in grey describe genes with no count value in its corresponding tool. Bootstrap values for both the unrooted and squared dendrograms are located next to their corresponding nodes. <bold>(C)</bold> A principal component analysis for all wBm count values derived from each of the tools was done. Each color corresponds to either FADU, HTSeq, or featureCounts, while each shape represents the specific mode of the tool used.</title></caption>
<graphic xlink:href="337600_fig2.tif"/>
</fig>
</sec>
<sec id="s5b">
<label>5.2</label>
<title>Comparative analysis of FADU, HTSeq, and countFeatures in <bold><italic>w</italic>Bm</bold></title>
<p>Using the wBm dataset, we sought to determine the similarity of FADU compared to each of the different modes of HTSeq and featureCounts. Fragment count values from the three HTSeq modules, three featureCounts modes, and FADU were used for a clustering analysis. An unrooted dendrogram of the different tools shows three distinct groups that cluster on how each of the different tools handle fragments mapping to multiple features <bold>(Figure 3a).</bold> FADU, featureCounts overlap, and featureCounts fractional-overlap, which are more liberal in assigning counts, form a cluster while HTSeq union, HTSeq intersection-nonunique, and featurecounts default, which are all more conservative, form another cluster. HTSeq intersection-strict clusters with neither of the groups, due to it being the most stringent in assigning fragment counts to features.</p>
<p>A heatmap showing counts from each of the eight tools shows HTSeq intersection-strict to have the greatest number of genes with no assigned counts <bold>(Figure 3b).</bold> Only genes with derived count values from at least one tool are shown. The cluster containing featurecounts default, HTSeq union, and HTSeq intersection non-empty contain slightly less genes with no assigned count values while the cluster containing FADU, featurecounts overlap and featureCounts fractional-overlap contain the least. Although featureCounts overlap is able to assign count values to the same number of genes as FADU, it over-counts genes by assigning a full count value to all genes overlapped by a single fragment. In the case of a fragment overlapping a two gene operon, featureCounts overlap would assign a full count to both, despite there only being a single fragment. To diminish over-counting, featureCounts fractional-overlap instead assigns a fractional count value based on the number of features a fragment overlaps. While this alleviates the issue, featureCounts fractional-overlap implies that all features overlapped by a fragment contribute equally to the fragment, which may not necessarily be true. The problem is particularly acute if the overlap is a relatively small fraction of the feature. FADU assigns count values based on the percentage of the fragment that is overlapped, such that a higher partial read count is assigned to the gene with the greater overlap. By doing so, FADU can assign higher counts from ambiguous fragments to genes that the fragment most likely originated from, while still being able to derive counts for smaller genes.</p>
<p>A principal component analysis of the counts show less discrete clusters compared to those seen in the unrooted dendrogram <bold>(Figure 3c).</bold> While the counts from HTSeq union and HTSeq intersection-nonempty are grouped together, no other two counts cluster closely with another. In the first principal component, which accounts for 68.0&#x0025; of the variation observed in the counts, the top 20 contributing genes are primarily represented by genes with lower counts in the three HTSeq modes relative to featureCounts and FADU <bold>(Supplementary Figure 3a).</bold> Similarly, the top 20 contributing genes in the second principal component, which accounts for 23.9&#x0025; of the variation observed, separates the HTSeq-derived counts from the featureCounts and FADU counts <bold>(Supplementary Figure 3b).</bold> In both principal components, there are genes with lower counts in HTSeq intersection-strict relative to all other counts, reflecting the conservative nature in which it assigns counts. Because of how featureCounts overlap derives counts, it will always have greater than or equal to the highest number of counts relative to all other algorithms tested.</p>
</sec>
</sec>
<sec id="s6">
<label>6.</label>
<title>Discussion</title>
<p>During transcript quantification for RNA-Seq analyses, the handling of fragments that overlap multiple features must be addressed. This may not be as much of an issue in many eukaryotes, where genes are larger and spaced further apart. But in prokaryotes, the closer proximity of genes coupled with the presence of operons leads to a large number of fragments being classified as ambiguous. Tools such as HTSeq and featureCounts have different modules and/or options to handle these ambiguous fragments, but smaller genes, especially those in operons, become either under-or over-represented depending on the tool. In this study, we present FADU, a novel tool for transcript quantification in RNA-Seq analyses that addresses these issues.</p>
<p>While it can be easy to think of all lllumina data as being equal, our analysis suggests that small genes near or below the insert size of the library are specifically being lost. This bears more scrutiny and consideration in prokaryotic transcriptomic sequencing projects, since the insert size of the library varies between samples and is not frequently reported. Our results suggest that these small genes could be differentially reported, in a purely artefactual way, during feature counting and impacts downstream analyses, like differential expression, clustering, and PCA-type analyses.</p>
<p>Importantly, FADU is not a counting algorithm and as such does not report counts as other algorithms have over the past several years. As such, it does not return integers, instead returning fraction-based rational numbers. As such the output of FADU cannot be used in downstream tools that require integer counts, such as some differential expression analysis tools. It can, however, be used with success in edgeR and in calculating TPMs and z-scores. There may, however, be a new need for further development of statistical analysis tools that do not require integer-based data.</p>
<p>Compared to the default HTSeq and featureCounts modes, which largely discard ambiguous reads, FADU assigns partial read counts based on the percentage of the fragment that is within the unique positions of gene. By doing this, FADU is able to assign partial counts to features that are missed by both HTSeq and featureCounts by default. While HTSeq and featureCounts have options that allow for the assignment of reads to these features, we find that both the overlap and fractional-overlap options overstate their abundance, especially in the case of completely overlapped genes. FADU weighs the percentage of each fragment covered by a feature so in the case that a fragment does overlap multiple features, instead of assigning equal counts to both features, partial read counts are assigned based on the percentage of the fragment covered by the feature. Due to its ability to derive counts for otherwise unrepresented genes without overstating their abundance, we believe FADU to be an improved tool for quantifying transcripts in prokaryotic systems for RNA-Seq analyses.</p>
</sec>
</body>
<back>
<ack>
<title>Acknowledgements</title>
<p>This project was funded in part by federal funds from the National Institute of Allergy and Infectious Diseases, National Institutes of Health, Department of Health and Human Services under grant number U19 AI110820.</p>
</ack>
<ref-list>
<title>References</title>
<ref id="c1"><mixed-citation publication-type="journal"><string-name><surname>Anders</surname>, <given-names>S.</given-names></string-name> and <string-name><surname>Huber</surname>, <given-names>W.</given-names></string-name> <article-title>Differential expression analysis for sequence count data</article-title>. <source>Genome Biol</source> <year>2010</year>;<volume>11</volume>(<issue>10</issue>):<fpage>R106</fpage>.</mixed-citation></ref>
<ref id="c2"><mixed-citation publication-type="journal"><string-name><surname>Anders</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Pyl</surname>, <given-names>P.T.</given-names></string-name> and <string-name><surname>Huber</surname>, <given-names>W.</given-names></string-name> <article-title>HTSeq-a Python framework to work with high-throughput sequencing data</article-title>. <source>Bioinformatics</source> <year>2015</year>;<volume>31</volume>(<issue>2</issue>):<fpage>166</fpage>&#x2013;<lpage>169</lpage>.</mixed-citation></ref>
<ref id="c3"><mixed-citation publication-type="journal"><string-name><surname>Dobin</surname>, <given-names>A.</given-names></string-name>, <etal>et al.</etal> <article-title>STAR: ultrafast universal RNA-seq aligner</article-title>. <source>Bioinformatics</source> <year>2013</year>;<volume>29</volume>(<issue>1</issue>):<fpage>15</fpage>&#x2013;<lpage>21</lpage>.</mixed-citation></ref>
<ref id="c4"><mixed-citation publication-type="journal"><string-name><surname>Kim</surname>, <given-names>D.</given-names></string-name>, <string-name><surname>Langmead</surname>, <given-names>B.</given-names></string-name> and <string-name><surname>Salzberg</surname>, <given-names>S.L.</given-names></string-name> <article-title>HISAT: a fast spliced aligner with low memory requirements</article-title>. <source>Nat Methods</source> <year>2015</year>;<volume>12</volume>(<issue>4</issue>):<fpage>357</fpage>&#x2013;<lpage>360</lpage>.</mixed-citation></ref>
<ref id="c5"><mixed-citation publication-type="journal"><string-name><surname>Langmead</surname>, <given-names>B.</given-names></string-name>, <etal>et al.</etal> <article-title>Ultrafast and memory-efficient alignment of short DNA sequences to the human genome</article-title>. <source>Genome Biol</source> <year>2009</year>;<volume>10</volume>(<issue>3</issue>):<fpage>R25</fpage>.</mixed-citation></ref>
<ref id="c6"><mixed-citation publication-type="journal"><string-name><surname>Le</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Josse</surname>, <given-names>J.</given-names></string-name> and <string-name><surname>Husson</surname>, <given-names>F.</given-names></string-name> <article-title>FactoMineR: An R Package for Multivariate Analysis</article-title>. <source>Journal of Statistical Software</source> <year>2008</year>;<volume>25</volume>(<issue>1</issue>):<fpage>1</fpage>&#x2013;<lpage>18</lpage>.</mixed-citation></ref>
<ref id="c7"><mixed-citation publication-type="journal"><string-name><surname>Lewis</surname>, <given-names>M.</given-names></string-name> <article-title>Allostery and the lac Operon</article-title>. <source>J Mol Biol</source> <year>2013</year>;<volume>425</volume>(<issue>13</issue>):<fpage>2309</fpage>&#x2013;<lpage>2316</lpage>.</mixed-citation></ref>
<ref id="c8"><mixed-citation publication-type="journal"><string-name><surname>Li</surname>, <given-names>H.</given-names></string-name> and <string-name><surname>Durbin</surname>, <given-names>R.</given-names></string-name> <article-title>Fast and accurate short read alignment with Burrows-Wheeler transform</article-title>. <source>Bioinformatics</source> <year>2009</year>;<volume>25</volume>(<issue>14</issue>):<fpage>1754</fpage>&#x2013;<lpage>1760</lpage>.</mixed-citation></ref>
<ref id="c9"><mixed-citation publication-type="journal"><string-name><surname>Liao</surname>, <given-names>Y.</given-names></string-name>, <string-name><surname>Smyth</surname>, <given-names>G.K.</given-names></string-name> and <string-name><surname>Shi</surname>, <given-names>W.</given-names></string-name> <article-title>featureCounts: an efficient general purpose program for assigning sequence reads to genomic features</article-title>. <source>Bioinformatics</source> <year>2014</year>;<volume>30</volume>(<issue>7</issue>):<fpage>923</fpage>&#x2013;<lpage>930</lpage>.</mixed-citation></ref>
<ref id="c10"><mixed-citation publication-type="journal"><string-name><surname>Paradis</surname>, <given-names>E.</given-names></string-name>, <string-name><surname>Claude</surname>, <given-names>J.</given-names></string-name> and <string-name><surname>Strimmer</surname>, <given-names>K.</given-names></string-name> <article-title>APE: Analyses of Phylogenetics and Evolution in R language</article-title>. <source>Bioinformatics</source> <year>2004</year>;<volume>20</volume>(<issue>2</issue>):<fpage>289</fpage>&#x2013;<lpage>290</lpage>.</mixed-citation></ref>
<ref id="c11"><mixed-citation publication-type="journal"><string-name><surname>Popescu</surname>, <given-names>A.A.</given-names></string-name>, <string-name><surname>Huber</surname>, <given-names>K.T.</given-names></string-name> and <string-name><surname>Paradis</surname>, <given-names>E.</given-names></string-name> <article-title>ape 3.0: New tools for distance-based phylogenetics and evolutionary analysis in R</article-title>. <source>Bioinformatics</source> <year>2012</year>;<volume>28</volume>(<issue>11</issue>):<fpage>1536</fpage>&#x2013;<lpage>1537</lpage>.</mixed-citation></ref>
<ref id="c12"><mixed-citation publication-type="journal"><string-name><surname>Robinson</surname>, <given-names>M.D.</given-names></string-name>, <string-name><surname>McCarthy</surname>, <given-names>D.J.</given-names></string-name> and <string-name><surname>Smyth</surname>, <given-names>G.K.</given-names></string-name> <article-title>edgeR: a Bioconductor package for differential expression analysis of digital gene expression data</article-title>. <source>Bioinformatics</source> <year>2010</year>;<volume>26</volume>(<issue>1</issue>):<fpage>139</fpage>&#x2013;<lpage>140</lpage>.</mixed-citation></ref>
<ref id="c13"><mixed-citation publication-type="journal"><string-name><surname>Suzuki</surname>, <given-names>R.</given-names></string-name> and <string-name><surname>Shimodaira</surname>, <given-names>H.</given-names></string-name> <article-title>Pvclust: an R package for assessing the uncertainty in hierarchical clustering</article-title>. <source>Bioinformatics</source> <year>2006</year>;<volume>22</volume>(<issue>12</issue>):<fpage>1540</fpage>&#x2013;<lpage>1542</lpage>.</mixed-citation></ref>
</ref-list>
<sec>
<p><bold>Supplementary Figure 1: Comparison of TPM values derived from FADU to HTSeq intersection-nonempty and intersection-strict</bold></p>
<p>For each of the three different sets of RNA-Seq paired-end data from <italic>E. coli, E. chaffeensis,</italic> and <italic>w</italic>Bm, the log<sub>2</sub> TPM values for genes quantified using FADU were plotted against the log<sub>2</sub> TPM values for genes quantified with two of the non-default HTSeq modules: <bold>(a)</bold> HTSeq intersection-nonempty and <bold>(b)</bold> HTSeq intersection-strict. Each point is representative of a single gene, with points in blue being representative of genes &#x003C;300 bp in length. Genes with similar count values are expected to lie close to the identity line <italic>(</italic>x=y; red). Genes whose expression values are more elevated in FADU lie above the identity line while genes whose expression values are elevated in the HTSeq counterpart lie below the identity line. Genes able to be quantified with FADU but not in HTSeq lie on the y-axis.</p>
<p><bold>Supplementary Figure 2: Comparison of TPM values derived from FADU to featureCounts overlap and fractional-overlap</bold></p>
<p>For each of the three different sets of RNA-Seq paired-end data from <italic>E. coli, E. chaffeensis,</italic> and wBm, the log<sub>2</sub> TPM values for genes quantitated using FADU were plotted against the log<sub>2</sub> TPM values for genes quantitated with two different featureCounts runs, (a) The first set of plots are run with the featureCounts option overlap, in which multiple genes overlapped by the same fragment are both assigned full counts, <bold>(b)</bold> The second set of plots are run with the featureCounts option overlap and fractional, in which multiple genes overlapped by the same fragment are assigned fractional counts depending on the number of features overlapped by the fragment. Each point is representative of a single gene, with points in blue being representative of genes &#x003C;300 bp in length. Genes with similar count values are expected to lie close to the identity line (x=y; red). Genes whose expression values are more elevated in FADU lie above the identity line while genes whose expression values are elevated in its featureCounts counterpart lie below the identity line. Genes able to be quantified in featureCounts overlap or fractional-overlap but not FADU lie on the x-axis.</p>
<p><bold>Supplementary Figure 3: Clustering of the twenty top contributing <italic>w</italic>Bm genes in the first and second principal components</bold></p>
<p>Two heatmaps were generated to visualize the top contributing in <bold>(a)</bold> the first and <bold>(b)</bold> the second principal components analysis of the variation in counts for wBm genes derived using HTSeq, featureCounts, and FADU. For each of the two principal components, the top twenty contributing genes to the variation observed are shown. The horizontal axis of the heatmap describes the tool used while each of the genes are indicated on the vertical axis. The log<sub>2</sub> count values are shown in each of the corresponding cells.</p>
</sec>
</back>
</article>

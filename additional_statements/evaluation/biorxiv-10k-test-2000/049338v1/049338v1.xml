<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.2d1 20170631//EN" "JATS-archivearticle1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" article-type="article" dtd-version="1.2d1" specific-use="production" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">BIORXIV</journal-id>
<journal-title-group>
<journal-title>bioRxiv</journal-title>
<abbrev-journal-title abbrev-type="publisher">bioRxiv</abbrev-journal-title>
</journal-title-group>
<publisher>
<publisher-name>Cold Spring Harbor Laboratory</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1101/049338</article-id>
<article-version>1.1</article-version>
<article-categories>
<subj-group subj-group-type="author-type">
<subject>Regular Article</subject>
</subj-group>
<subj-group subj-group-type="heading">
<subject>New Results</subject>
</subj-group>
<subj-group subj-group-type="hwp-journal-coll">
<subject>Bioinformatics</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>Ten simple rules for managing high-throughput nucleotide sequencing data</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-8228-5374</contrib-id>
<name>
<surname>Vos</surname>
<given-names>Rutger A.</given-names>
<prefix>Dr.</prefix>
</name>
</contrib>
<aff><institution>Naturalis Biodiversity Center</institution>, Leiden, <country>The Netherlands</country></aff>
</contrib-group>
<pub-date pub-type="epub">
<year>2016</year>
</pub-date>
<elocation-id>049338</elocation-id>
<history>
<date date-type="received">
<day>19</day>
<month>4</month>
<year>2016</year>
</date>
<date date-type="accepted">
<day>19</day>
<month>4</month>
<year>2016</year>
</date>
</history>
<permissions>
<copyright-statement>&#x00A9; 2016, Posted by Cold Spring Harbor Laboratory</copyright-statement>
<copyright-year>2016</copyright-year>
<license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by/4.0/"><license-p>This pre-print is available under a Creative Commons License (Attribution 4.0 International), CC BY 4.0, as described at <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link></license-p></license></permissions>
<self-uri xlink:href="049338.pdf" content-type="pdf" xlink:role="full-text"/>
<abstract>
<title>Abstract</title>
<p>The challenges posed by large data volumes produced by high-throughput nucleotide sequencing technologies are well known. This document establishes ten simple rules for coping with these challenges. At the level of master data management, (1) data triage reduces data volumes; (2) some lossless data representations are much more compact than others; (3) careful management of data replication reduces wasted storage space. At the level of data analysis, (4) automated analysis pipelines obviate the need for storing work files; (5) virtualization reduces the need for data movement and bandwidth consumption; (6) tracking of data and analysis provenance will generate a paper trail to better understand how results were produced. At the level of data access and sharing, (7) careful modeling of data movement patterns reduces bandwidth consumption and haphazard copying; (8) persistent, resolvable identifiers for data reduce ambiguity caused by data movement; (9) sufficient metadata enables more effective collaboration. Finally, because of rapid developments in HTS technologies, (10) agile practices that combine loosely coupled modules operating on standards-compliant data are the best approach for avoiding lock-in. A generalized scenario is presented for data management from initial raw data generation to publication of result data.</p>
</abstract>
<counts>
<page-count count="18"/>
</counts>
</article-meta>
</front>
<body>
<sec id="s1">
<title>Introduction</title>
<p>Due to technological advances in instrumentation and sensor technologies, research data volumes are growing at a rate that outpaces that of the growth in computer storage and processing capacity. At the same time, society and research funders urge preservation of data in the interest of reproducibility and re-purposing of outcomes gathered with public funding, and public-private consortia require the same in order to advance their research collaborations. As these developments collide, knowledge institutes and companies are forced to formulate and implement coherent strategies to ensure that requirements and community needs are met in a way that resources can sustain. This report seeks to inform the formulation and implementation of such strategies as applied to the management of high-throughput nucleotide sequencing (HTS) data and the analysis thereof by establishing recommendations that are within reach of most knowledge institutes and their research partners, including private companies.</p>
<sec id="s1a">
<title>DAta Management Terms and Definitions</title>
<p><italic>Data management</italic> is the development and execution of architectures, policies, practices and procedures that properly manage the full <italic>data lifecycle</italic><sup><xref rid="fn1" ref-type="fn">1</xref></sup>. Although the data lifecycle can be conceptualized in a variety of ways<sup><xref rid="fn2" ref-type="fn">2</xref></sup>, a recent report by the ICPSR [<xref rid="c1" ref-type="bibr">1</xref>] provides a suitable framework, reproduced in <xref ref-type="fig" rid="fig1">Figure 1</xref>, of the data lifecycle as it is commonly understood. The principal idea is that research data can participate in a feedback loop that promotes both re-analysis and verification as well as the development of novel research directions. Precondition for this virtuous cycle is that data management is planned and provisioned for throughout a research project. In phase 1, this includes the incorporation of a management plan in project development, possibly in collaboration with external data archiving service providers. In the case of archival of opaque blocks of data in essentially any format, services such as those provided by DANS<sup><xref rid="fn3" ref-type="fn">3</xref></sup> or Dryad<sup><xref rid="fn4" ref-type="fn">4</xref></sup> are available. For more granular archival of data, domain-specific archives such as those provided by the INSDC<sup><xref rid="fn5" ref-type="fn">5</xref></sup> may be used. Phase 2 may include pilots and tests to establish protocols for documentation and data collection. Phase 3 proceeds with the application of practices established during project start-up. Phase 4 includes the management of <italic>master data</italic>, i.e. data that are common among many applications, as well as application-specific work files and backups in appropriate file structures. Phase 5 considers the <italic>licensing terms</italic> and <italic>data formats</italic> under which the data will be shared. In the final phase, the data are (re-)formatted in accordance with <italic>community standards</italic> for dissemination and are archived in a suitable permanent location.</p>
<fig id="fig1" position="float" fig-type="figure"><label>Figure 1.</label><caption><p><italic>The data lifecycle according to ICPSR</italic>.</p></caption>
<graphic xlink:href="049338_fig1.tif"/>
</fig>
<p>Within the context of research that involves high-throughput instrumentation based on sensors, data may be further classified into <italic>raw data</italic>, i.e. that which is directly generated by the instrument; <italic>intermediate data</italic>, which has undergone quality control and other data cleaning as well as normalization; and <italic>result data</italic>, which summarizes the results in a manner that generates knowledge. In data management, it is typically the result data that are shared in domain-specific community repositories such that they can be referred to in scholarly publications (though note the advent of alternative models in the scholarly communication cycle, such as data publications [<xref rid="c2" ref-type="bibr">2</xref>] and micropublications [<xref rid="c3" ref-type="bibr">3</xref>]), while intermediate data may be shared with project collaborators. In both cases, <italic>metadata</italic>, i.e. formal descriptions about data, are essential to be able to reconstruct how experiments, both the &#x201C;wet&#x201D; and the <italic>in silico</italic> steps, were performed, and to be able to steward and curate the data.</p>
<p><italic>Data stewardship</italic> refers to the practice of storing data with provision for the required software and services to ensure its future accessibility, searching and analysis [<xref rid="c4" ref-type="bibr">4</xref>]. Provisioning for required software and services is needed because file formats and analytical workflows evolve rapidly, such that previously obtained results may become inaccessible or irreproducible without recourse to original software that may since have been deprecated. In this context, <italic>open source</italic> software may be preferred as the licensing terms of proprietary software may preclude such provisioning. <italic>Data curation</italic> is the related practice of ingesting, transforming, migrating, and, occasionally, disposing of data over longer timescales<sup><xref rid="fn6" ref-type="fn">6</xref></sup>, as informed by iterative (re-)appraisal of data, sometimes referred to as <italic>data triage</italic>.</p>
</sec>
<sec id="s1b">
<title>Current Trends in Biological Sequence Data Generation</title>
<p>In the biological sciences, a technology that strongly drives the present growth in data volumes is high-throughput nucleotide sequencing (HTS). Over the last decade, massively parallel HTS platforms have found wide adoption as relatively affordable alternatives to Sanger sequencing, albeit with their own strengths and drawbacks: the common platforms optimize different, often complementary, combinations of read quality, read length, and data volume. For example, the PacBio RSII produces very long reads suitable for scaffolding, but read quality is much lower than that of the shorter reads produced by the Illumina HiSeq, yielding a multi-stage workflow where short reads are mapped against long reads to improve precision, possibly followed by <italic>de novo</italic> assembly and scaffolding. Ongoing technology development will continue to disrupt workflows with the emergence of affordable, miniaturized single molecule real time sequencing such as the Oxford Nanopore MinION platform promising to yield yet longer reads more cheaply.</p>
<p>The relatively low and dropping cost of HTS platforms has lowered the barrier to entry for small research teams to bring sequencing to bear on a variety of research challenges ranging from &#x201C;boutique&#x201D; genome projects, to metagenomics, DNA barcoding, RNA sequencing, genotyping, phylogenetics and so on. By organizing into consortia, projects to re-sequence genomes at previously unimaginable scales have likewise come within broader reach. As a consequence, a recent study forecasts an ongoing shift in cost allocation away from raw sequencing towards relatively greater investment &#x201C;upstream&#x201D; towards experimental design and data acquisition and &#x201C;downstream&#x201D; towards analysis, with a relatively large but dropping expenditure at present towards data reduction and data management (<xref ref-type="fig" rid="fig2">Figure 2</xref>).</p>
<fig id="fig2" position="float" fig-type="figure"><label>Figure 2.</label><caption><p><italic>Cost allocation outlook for nucleotide sequencing-oriented research projects [<xref rid="c5" ref-type="bibr">5</xref>]. The cost of sequencing itself is rapidly dropping and projected to continue to do so. Data management may be a bottleneck at present but projected to become less so in relative terms in comparison with the cost of upstream processes such as sample collection and experimental design, and downstream analysis</italic>.</p></caption>
<graphic xlink:href="049338_fig2.tif"/>
</fig>
<p>The relatively high current cost of data management in HTS projects stems not only from the large data volumes per se but also from the more complex workflow in dealing with data generated on massively parallel sequencing platforms as compared to previous technologies. Parallel data capture on current HTS platforms yields raw results - images in pyrosequencing, other types of intensities on other platforms - from which the vendor platform&#x2019;s algorithms call individual bases and homopolymers at varying confidence levels. This procedure results in very many short sequence fragments that are logically organized around the instrument&#x2019;s architecture and sequencing kits (e.g. according to lanes or flow cells, adaptor sequences), not around experimental design. As multiple assays are often combined in a single &#x201C;multiplexed&#x201D; run, an early step in data management is to sort the sequence fragments by assay. Subsequently, the sequence fragments often need to be assembled into intermediate results either by mapping against reference data or by collating overlapping fragments into larger contiguous stretches, i.e. <italic>de novo</italic> assembly. These intermediate results are then enriched by comparison with other, well-characterized data and by statistical analysis including variation discovery and feature prediction. At each step of this workflow, data volumes are reduced by orders of magnitude, which, if storage capacity per se forms an impediment, raises questions about the extent to which raw and intermediate data must be retained, and for how long (<xref ref-type="fig" rid="fig3">Figure 3</xref>).</p>
<fig id="fig3" position="float" fig-type="figure"><label>Figure 3.</label><caption><p><italic>Typical data reduction and management in HTS sequencing</italic><sup><xref rid="fn7" ref-type="fn">7</xref></sup>.</p></caption>
<graphic xlink:href="049338_fig3.tif"/>
</fig>
</sec>
<sec id="s1c">
<title>The Accidental Sequencing Center</title>
<p>Due to the advent of affordable HTS platforms, knowledge institutes and company R&#x0026;D departments that heretofore outsourced DNA sequencing are now finding themselves proud owners of &#x201C;benchtop&#x201D; (and larger) sequencing platforms, in the process having to manage complex, voluminous data sets for a large part of the data lifecycle, and potentially having to publish these to research collaborators and the research community at large.</p>
<p>Many knowledge institutes have found themselves to a greater or lesser extent in this position of &#x201C;accidental sequencing center&#x201D;. In contrast with core sequencing facilities, these institutes may on the one hand have less experience with managing large data streams, while on the other hand they are usually much more intimately involved in downstream analysis for longer stretches of time (and financial outlay). In addition, these institutes depend to a large extent on a mixture of both public funding and public/private partnerships, which each have their own requirements for data management and sharing. As a consequence, the challenges are quite formidable, and institutional policies and guidelines to cope with them are strongly called for.</p>
<p>Naturalis Biodiversity Center (Leiden, the Netherlands), best known as the dutch natural history museum, is one such accidental sequencing center - but many other knowledge institutes, university research departments, medical centers, and companies active in the red, green and white life sciences find themselves in a similar situation. Naturalis is a chiefly publicly-funded institute with a tangential interest in HTS as applied to a broad range of research questions, such as the genomics of non-model organisms from a broad taxonomic spectrum (including collection specimens, i.e. &#x201C;museomics&#x201D;), taxonomic identification through (meta-)barcoding, phylogenetic systematics, transcriptomics, and so on. Naturalis participates in a variety of research networks involving both public and private collaborators.</p>
</sec>
</sec>
<sec id="s2">
<title>Ten simple rules</title>
<p>This document attempts to establish ten rules in handling HTS data streams at three levels of the problem. The first level is that of <italic>master data</italic> management, i.e. data as they are received from sequencing, which are pre-processed, converted to an interoperable format and stored in a library location where it can be backed up. The second level is that of data analysis, where careful design and deployment of analysis pipelines and usage patterns of computational infrastructure can reduce haphazard proliferation of intermediate files while building up a &#x201C;paper trail&#x201D; of both the data and the analysis steps. The third level concerns collaboration among disparate research partners, where transmission of large amounts of data over the internet may be prohibitive in terms of bandwidth, and where identifiability, locatability and exhaustive documentation of metadata are key in developing effective collaboration.</p>
<p>The intended readership of this document is rather broad, comprising technical staff, chiefly bioinformaticians, computationally skilled researchers, ICT staff, and to a lesser extent lab staff; institutional policy makers such as R&#x0026;D and ICT managers; but also cross-domain computational service providers seeking to support the computational requirements of HTS. As such, the rules are general guidelines that can be made operational in a variety of ways to fit the workflows of a variety of &#x201C;accidental sequencing centers&#x201D;. References in square brackets refer to endnotes (scientific literature and technical reports), superscript numbers are footnotes (links to useful information and tools on the web, clickable in digital form).</p>
<sec id="s2a">
<title>Master Data</title>
<p>Master data are the core data that are consumed by a variety of applications. In the context of HTS these are sequencing reads. Because of their potential volume, these need to be managed carefully and reduced where possible. The heterogeneity of usage patterns and the potentially very large number of different applications that consume master data suggest that they must be represented in compact, interoperable form.</p>
<sec id="s2a1"><label>1.</label>
<title>Exercise data triage</title>
<p>At a low level, HTS platforms produce raw data files that are specific to the underlying technology. For example, pyrosequencing platforms produce digital images, while pH sensor platforms produce raw voltage data. Signal processing algorithms process these files to call nucleotide bases at varying quality levels and write the results in one of a variety of (nominally) platform-independent, community standards-compliant file formats. <bold>Typical data triage at this level, if not already implemented in the instrument, may include purging of the underlying platform-specific raw intensities data once correct functioning of the instrument during the run has been verified</bold>. Rough time windows cited for this include within &#x201C;weeks or less&#x201D;<sup><xref rid="fn8" ref-type="fn">8</xref></sup> or &#x201C;one month&#x201D;<sup><xref rid="fn9" ref-type="fn">9</xref></sup>. In many cases, the next step then is to &#x201C;de-multiplex&#x201D; the data, for example by sorting the reads on adaptor barcode and/or primer.</p>
<p>The sequence and quality data that then remain contain a lot of noise whose trimming and purging may appreciably reduce data volume. <bold>For example, short HTS reads often include stretches of very low base calling quality at the trailing end of the read, which may be truncated and discarded</bold>. Likewise, depending on the research context, duplicate reads may be considered redundant and therefore removed or clustered. Once assembled, the sequence data may reveal yet other types of &#x201C;noise&#x201D;, for example as a result of contamination of the sample. Although some types of sequence contamination-such as from pathogens - might be of interest, other contaminants such as human DNA might be considered safe to discard. Careful consideration of these issues in the formulation of data triage policies (that are perhaps enforced automatically) may reduce data volume and noise considerably.</p>
</sec>
<sec id="s2a2"><label>2.</label>
<title>Optimize data representation</title>
<p>HTS platform vendors are increasingly consolidating around well-described data standards to represent sequencing reads and their qualities, as well as alignments of sequencing reads against reference genomes. One of the common denominators is the FASTQ format [<xref rid="c6" ref-type="bibr">6</xref>], which is a simple flat text format that combines bases and qualities in a record-oriented layout. FASTQ may be considered convenient as, due to its simplicity, data processing scripts can quickly be developed. However, it has several drawbacks.</p>
<p>Firstly, plain text is relatively verbose, although a cottage industry of compression algorithms has sprung up around FASTQ to remedy this [<xref rid="c7" ref-type="bibr">7</xref>&#x2013;<xref rid="c9" ref-type="bibr">9</xref>]. Secondly, FASTQ files can typically only be read sequentially, not by random access, which means that locating specific reads (e.g. mate pairs) requires scanning through files. Thirdly, a number of different FASTQ &#x201C;dialects&#x201D; have emerged that differ in crucial ways, including the encoding scheme for quality scores, repetition (or not) of the read identifier, and whether base and quality sequences may span multiple lines [<xref rid="c6" ref-type="bibr">6</xref>]. For these reasons, the binary alignment/map (BAM) format [<xref rid="c10" ref-type="bibr">10</xref>] may be preferred. <bold>BAM files are a binary representation of reads and qualities, optionally mapped against a reference. Binary representations are typically more compact, and this is also true for BAM, for example in comparison with FASTQ or with the textual representation of the same BAM data as SAM, which is about four times as voluminous as BAM, on average</bold>. Indexed, sorted BAM files can be accessed randomly like a database, which can have great advantages when processing. Also, fewer data syntax dialects exist, as many tools use the same underlying application programming interface - usually either the samtools C API, [<xref rid="c10" ref-type="bibr">10</xref>] or the HTSJDK Java API<sup><xref rid="fn10" ref-type="fn">10</xref></sup> -, though there may be some variation in optional headers. Finally, the BAM format is one of the &#x201C;container file&#x201D; formats preferred by the short read archiving services provided by INSDC collaborators<sup><xref rid="fn11" ref-type="fn">11</xref></sup>.</p>
<p>A downside of BAM and other binary formats, such as the Standard Flowgram Format, SFF<sup><xref rid="fn12" ref-type="fn">12</xref></sup>, or the reference-based compression format CRAM [<xref rid="c11" ref-type="bibr">11</xref>] (which paves the way for &#x201C;compressive genomics&#x201D;[<xref rid="c12" ref-type="bibr">12</xref>]), is that their structure is more difficult to infer than flat text and that corruption such as due to truncation during network transfers may be more difficult to detect. To manage these risks, careful data stewardship (preserving the version of the API that was used) and good quality metadata, including file format descriptions and checksums, are necessary.</p>
</sec>
<sec id="s2a3"><label>3.</label>
<title>Manage data replication</title>
<p>Unmanaged, haphazard copying of data across user home directories on workstations and compute nodes must be avoided for two reasons. Firstly, data unnecessarily strewn about multiple locations consumes space, which may be at a premium on compute nodes with expensive, fast read I/O (e.g. on solid state drives). Secondly, such proliferation creates a complex provenance trail that may be hard to reconstruct down the road. On the other hand, storage hardware will unpredictably fail, and files can become corrupted for a variety of reasons (e.g. incomplete file transfers, user errors, computer viruses), which does necessitate <italic>managed</italic> replication, including backups. <bold>The simplest approach is to ingest master data into centralized storage that is backed up and from where temporary, ephemeral copies can be made to HPC resources and workstations as needed</bold> (but see recommendation 4, below).</p>
<p>However, more scalable (but more complex) solutions that incorporate abstraction layers to manage metadata and access rights are gaining adoption. For example, the iRODS<sup><xref rid="fn13" ref-type="fn">13</xref></sup> system is currently being used by iPlant [<xref rid="c13" ref-type="bibr">13</xref>], the Swedish national HTS infrastructure UPPNEX [<xref rid="c14" ref-type="bibr">14</xref>], the Broad Institute, the Wellcome Trust Sanger Institute, the U.S. National Center for Microscopy and Imaging Research, and the Genome Biology Unit at the University of Helsinki (for an illuminating report on iRODS deployment at these institutions, see [<xref rid="c15" ref-type="bibr">15</xref>]). The key appeal of this system lies in the integration of data management with arbitrary metadata, though this can be approximated to some extent by specialized analysis and data management platforms that provide more facilities for queryable annotations than the file system can (e.g. Galaxy<sup><xref rid="fn14" ref-type="fn">14</xref></sup> data libraries), some LIMS systems and generic object store solutions (e.g. Amazon S3<sup><xref rid="fn15" ref-type="fn">15</xref></sup> or Ceph<sup><xref rid="fn16" ref-type="fn">16</xref></sup>).</p>
</sec>
</sec>
<sec id="s2b">
<title>Analysis</title>
<p>Raw sequencing data need to be analyzed in many steps in order to gain new insights. In the first instance, a number of these steps are essentially data cleaning and data organization, which produces intermediate data. Among these steps are basic quality control, e.g. to trim bases of poor quality and to filter out contamination, and assembly, either to a reference genome or <italic>de novo</italic>. In a dwindling number of cases this may be &#x201C;enough&#x201D;, but usually a large number of additional steps are performed, among which might be genome annotation, variant calling, comparisons with other samples and sequences, and a large number of statistical analyses, to arrive at the final result data. Without a planned strategy for managing these analyses a proliferation of intermediate data with unclear provenance will occur. Sensible strategies exist to manage reproducible research, to minimize movement of large data sets, and to keep a &#x201C;paper trail&#x201D; of the provenance of both data and analysis.</p>
<sec id="s2b1"><label>4.</label>
<title>Make analysis reproducible</title>
<p>During the course of a research project the same analysis steps will be executed multiple times, for example to explore a parameter space, to iterate over a set of samples, or to incorporate newly acquired data: <italic>&#x201C;everything you do, you will probably have to do over again&#x201D;</italic> [<xref rid="c16" ref-type="bibr">16</xref>]. This raises a number of challenges when this is done &#x201C;by hand&#x201D;. Firstly, people make mistakes and so without automation it is hard to ensure that exactly the same steps are followed for each iteration. Secondly, no automatic record exists of what was done. Thirdly, every time an analysis step is performed, new intermediate and result data are generated, thereby contributing to the explosion in data volumes.</p>
<p>To address these challenges and to make research more reproducible, broadly applicable guidelines for organizing and automating analyses have been formulated by a number of data scientists (e.g. see [<xref rid="c16" ref-type="bibr">16</xref>,<xref rid="c17" ref-type="bibr">17</xref>]). <bold>Apart from the virtues of reproducible science <italic>per se</italic>, automation of analyses also aids in coping with large amounts of intermediate and result data: if the analysis can be re-run, not all intermediate steps need to be retained</bold>. To make this possible, all the components that might influence the results of an automated analysis down to the operating system and its libraries, where relevant, should be fully specified and provisioned. In cloud computing, supporting tools to manage<sup><xref rid="fn17" ref-type="fn">17</xref></sup> and provision<sup><xref rid="fn18" ref-type="fn">18</xref></sup> virtual machines have become available. Moreover, recent advances in &#x201C;container virtualization&#x201D;<sup><xref rid="fn19" ref-type="fn">19</xref></sup> and the virtualization of programming environments<sup><xref rid="fn20" ref-type="fn">20</xref></sup> have resulted in a more lightweight approach to virtualization that delegates more functionality to the host operating system, thereby lowering the demands of virtualization in terms of computing power and disk space.</p>
<p>One level up from the operating system, analysis pipelines can be made reproducible either using specialized workflow environments<sup><xref rid="fn21" ref-type="fn">21</xref></sup>, declarative workflow scripting languages<sup><xref rid="fn22" ref-type="fn">22</xref></sup>, domain-specific languages<sup><xref rid="fn23" ref-type="fn">23</xref></sup> or general purpose procedural languages<sup><xref rid="fn24" ref-type="fn">24</xref></sup>. Using these tools, analysis steps should be made easily (re-)runnable so that derived data can be re-generated from source.</p>
</sec>
<sec id="s2b2"><label>5.</label>
<title>Bring analysis to the data</title>
<p>A typical workflow in bioinformatics might start by downloading data from a server to perform calculations locally on a workstation. Due to the growth in data volumes this approach does not scale well, and it is at odds with the recommendation against haphazard copying of data (recommendation 3). <bold>Instead, the analysis workflow might be inverted: rather than bringing data to the analysis, bring the analysis to the data</bold> [<xref rid="c18" ref-type="bibr">18</xref>].</p>
<p>Up till recently, this may have meant the provisioning and configuration of a one-size-fits-all analysis cluster or server with co-located data storage. Due to the rapid evolution of analysis tools, library dependencies and operating systems, maintenance of such systems is complex. However, <bold>recent advances in &#x201C;cloud computing&#x201D; have made it possible to launch virtual machines, complete with installed analysis pipelines, on commodity hardware with co-located data storage</bold> [<xref rid="c19" ref-type="bibr">19</xref>]. Analysis pipelines, even as entire virtual machines bundled with operating systems, are often much smaller in size than many types of HTS data sets, and can be tailored to a specific data set or analysis without having to modify a shared cluster or server. Even more compact ways of packaging pipelines (e.g. in &#x201C;containers&#x201D;<sup><xref rid="fn25" ref-type="fn">25</xref></sup> or using language-specific packaging systems<sup><xref rid="fn26" ref-type="fn">26</xref></sup>) are available that reduce the size of analysis pipelines further.</p>
</sec>
<sec id="s2b3"><label>6.</label>
<title>Track data and analysis provenance</title>
<p>In the course of a research project, data and analysis (e.g. custom-written scripts, workflows, configurations) undergo iterative changes. <bold>In order to make this process fully reproducible as well as understandable this evolution needs to be recorded. In the case of small text files such as source code, summarized result data, metadata, and configuration files, version control systems such as git<sup><xref rid="fn27" ref-type="fn">27</xref></sup> and subversion<sup><xref rid="fn28" ref-type="fn">28</xref></sup> are strongly recommended</bold> (e.g. see [<xref rid="c16" ref-type="bibr">16</xref>]), for example in combination with free cloud-based hosts<sup><xref rid="fn29" ref-type="fn">29</xref></sup> that provide remote storage of the project repository.</p>
<p>Version control systems store incremental snapshots of the line-by-line differences between files in a repository from one revision to the next, with each revision accompanied by metadata about when, by whom, and why changes were made, i.e. a good record of the <italic>provenance</italic> of these files. However, because of this granularity, storage capacity can quickly be swamped especially in the case of large binary data such as BAM files, for which line-by-line differences can not be computed, which typically means that instead the entire file would be stored at each change. This suggests that the provenance of such files should be tracked separately. To keep this manageable, <bold>raw master data files should be considered immutable, while reproduction of intermediate and result data should be automated (as per the previous section)</bold>. This means that relatively few data versions need to be stored. Visual workflow environments such as galaxy<sup><xref rid="fn30" ref-type="fn">30</xref></sup>, which build up an annotatable, re-runnable history of an entire analysis<sup><xref rid="fn31" ref-type="fn">31</xref></sup>, may be all that is needed. Alternatively, command-line driven data management tools may be used. For example, git-annex<sup><xref rid="fn32" ref-type="fn">32</xref></sup> for data integrates well with git-based analysis provenance management and can use a variety of scalable storage &#x201C;remotes&#x201D;<sup><xref rid="fn33" ref-type="fn">33</xref></sup>, while the previously-discussed iRODS system provides the flexibility to define structured metadata terms with which to record data provenance.</p>
</sec>
</sec>
<sec id="s2c">
<title>Access and Sharing</title>
<p>Data must be accessible to internal collaborators, and (eventually) to the outside world, whether to privileged outsiders (e.g. consortium partners) or the community at large. This poses several challenges. Firstly, HTS intermediate data file sizes can be on the order of tens of gigabytes, which can be problematic if bandwidth is limited or unreliable. Secondly, once data start moving around, context may be lost and references to the data (e.g. different versions) become ambiguous. Thirdly, access may have to be controlled, e.g. for reasons of privacy or competitive advantage.</p>
<sec id="s2c1"><label>7.</label>
<title>Model data movement</title>
<p>Data inevitably moves between locations, even within a research institute. Without a coherent strategy for managing this movement, problems can occur. For example, sequencing instruments typically have their own limited disk space separate from institution-wide data management. If this is used for permanent raw data storage this space quickly fills up. If sequencing data are generated elsewhere, these typically arrive on physical storage media such as USB drives, which may be inaccessible to collaborators (i.e. sitting on a shelf) and may become corrupted. If the only copy of a data set is stored on a compute node, expensive storage intended as &#x201C;scratch space&#x201D; becomes unavailable. To prevent such problems, <bold>data movement should be modeled and ensuing practices should be adhered to (ideally through automation)</bold>.</p>
<p>A typical model might consist of the following steps: i) data are generated on an instrument or arrive on a physical medium; ii) data are ingested into cheap, networked storage; iii) checksums are computed, stored with the data, and compared with the source to ensure ingestion succeeded; iv) data and analysis are staged (see recommendation 5); v) result data are ingested and shared.</p>
<p>Automated management of data movement can have big benefits. For example, by implementing automated data movement at the Sanger institute, a 50&#x0025; reduction in disk utilisation (out of 2PB) was achieved<sup><xref rid="fn34" ref-type="fn">34</xref></sup>. The movement pattern that was implemented is reproduced as the gray shaded area in <xref ref-type="fig" rid="fig4">figure 4</xref>.</p>
<fig id="fig4" position="float" fig-type="figure"><label>Figure 4.</label><caption><p><italic>Typical data movement pattern<sup><xref rid="fn35" ref-type="fn">35</xref></sup>. Raw data are automatically pulled from the sequencing platform to a staging area where quality control and analysis is performed before the data are deposited in the local, &#x201C;final&#x201D; repository. Data from the staging area and the repository can additionally be ingested into remote compute farms where the data are combined with that of others to perform additional analysis</italic>.</p></caption>
<graphic xlink:href="049338_fig4.tif"/>
</fig>
</sec>
<sec id="s2c2"><label>8.</label>
<title>Make data persistently identifiable and locatable</title>
<p><italic>&#x201C;The&#x201D;</italic> master data cannot solely be a file in a folder in someone&#x2019;s home directory, or an email attachment sent &#x201C;a few weeks ago&#x201D;, or even <italic>&#x201C;the</italic> dropbox folder&#x201D; (which one?). <bold>In collaborating and communicating with others, data needs to be uniquely, persistently identifiable and locatable</bold>, or collaborators will have problems identifying and accessing the relevant data. For most purposes, URLs that can be referenced by metadata such as timestamps and checksums may be enough during the course of a research project, as URLs are both globally unique identifiers by virtue of the domain name system as well as locators.</p>
<p>Alternatively, data hosting and sharing technologies that can be queried and traversed, such as FTP servers or object stores, can be used. For result data, identifiers and locations are often indirectly linked, e.g. using DOIs that resolve to data sets, such as provided by Dryad and FigShare or domain-specific identifiers such as NCBI SRA project numbers.</p>
</sec>
<sec id="s2c3"><label>9.</label>
<title>Provide enough metadata</title>
<p>In the course of a research project, data changes hands repeatedly and any additional information about it that is not explicitly recorded somewhere may be lost in the process. <bold>Metadata, i.e. <italic>data about data</italic> that captures the who, what, where, when, why and how of a data set, may start to come into existence long before a sequencing experiment takes place yet may be needed long after the experiment has concluded and the results have been deposited in long-term repositories. Careful recording of metadata may prevent many unforeseen problems along this lifecycle</bold>. Recent years have seen the development of checklists for the minimal amount of information required to describe a sequencing experiment, resulting in the guidelines MIxS [<xref rid="c20" ref-type="bibr">20</xref>], used in submissions to the European Nucleotide Archive and the European Genome-Phenome Archive, and MINSEQE [<xref rid="c21" ref-type="bibr">21</xref>], used in submissions to the INSDC&#x2019;s Short Read Archive and ArrayExpress. However, these guidelines specify so few details that compliance to them by themselves does not suffice.</p>
<p>Among the metadata that may be required might be information for validating the project data <italic>per se</italic>, e.g. by identifying the data locations, their data formats (and dialects!), the provenance trail that resulted in the data - such the logging output of analysis pipelines-and file checksums. One step up from that, metadata should also capture the parameters of the assay (e.g. lab protocols, insert sizes, read lengths, primers, adaptors) to be able to perform meaningful analysis on the data. Then, across assays, the metadata about the study (e.g. the study subjects, their source(s), sampling methodologies, any treatments or manipulations) and the overarching investigative project (e.g. contact details of persons and labs involved, their access rights) should be recorded. The Investigation-Study-Assay tab-separated format, ISA-TAB [<xref rid="c22" ref-type="bibr">22</xref>], provides a convenient framework for capturing all of this information in spreadsheets that require no bioinformatics expertise yet are flexible enough to be able to incorporate the semantics, i.e. the explicit definition of meaning, of a lot of metadata by way of formal ontologies, whose adoption is growing rapidly [<xref rid="c23" ref-type="bibr">23</xref>].</p>
</sec>
</sec>
<sec id="s2d">
<title>Future Proofing</title>
<sec id="s2d1"><label>10.</label>
<title>Be agile</title>
<p>High-throughput sequencing technologies (chemistry, sensors) are rapidly evolving, and analyses are becoming more complex, moving the field from essentially exploratory to hypothesis testing on multimodal data. In the process, multiple sequencing platforms are routinely combined (e.g. long reads for scaffolding with short reads for error correction). In light of these developments, the pragmatic approach is to be agile: although sequencer vendors provide their own data management and analysis platforms, <bold>avoid vendor lock-in in proprietary file formats, databases, analysis tools, data access patterns or LIMSs</bold>.</p>
<p>The advent of lightweight virtualization and &#x201C;container&#x201D; technologies give the flexibility to bring a multitude of complex analysis workflows to data libraries, provided common data standards are adhered to and the data infrastructure does not unduly limit the ways in which data can be accessed. &#x201C;Containerized&#x201D; deployment of analysis workflows on distributed compute nodes may allow large analyses to be parallelized more easily.</p>
</sec>
</sec>
</sec>
<sec id="s3">
<title>Conclusions</title>
<p>Industry outlooks for the next five years suggest that the relative cost of HTS data management and data reduction will drop, but that the relative cost of downstream analysis will rise (<xref ref-type="fig" rid="fig2">Figure 2</xref>). To realize the relatively lower cost of data management and data reduction, sensible policies need to be established in order to cope effectively with the fact that HTS data generation outpaces innovation in data storage. This document attempts to establish some simple rules to guide the development of these policies at the levels of master data management, data analysis, and data sharing. Hard and fast rules are impossible to establish given the heterogeneity in technologies and institutional infrastructure and requirements, but this document does suggest some aspects of a generalized scenario, which is visualized as a flowchart in <xref ref-type="fig" rid="fig5">Figure 5</xref>.</p>
<fig id="fig5" position="float" fig-type="figure"><label>Figure 5.</label><caption><p><italic>Scenario for managing HTS data. Numbers between parenthese refer to discussed rules</italic>.</p></caption>
<graphic xlink:href="049338_fig5.tif"/>
</fig>
<p>In the scenario depicted in <xref ref-type="fig" rid="fig5">Figure 5</xref>, data undergo a planned series of movements and processes resulting in well-documented outcomes that can be shared among collaborators. The first steps in this process concern the generation of quality controlled, reduced and compressed intermediate data (e.g. BAM files) whose provenance and metadata are made available with the data through a publishing platform in which all persistently identifiable and locatable.</p>
<p>An arbitrary number of subsequent analysis steps is performed by processing these intermediate data with automated analysis workflows, ideally minimizing the movement and copying of the intermediate data (i.e. bringing the analysis to the data rather than vice versa). Each of these processes generates result data which again are ingested into a publishing platform. In the process, a paper trail of provenance is generated that extends the trail initiated during the earliest stages of data processing.</p>
<p>The scenario given here is necessarily very generic because the HTS field is evolving very rapidly, and specific use cases differ greatly among (and within) &#x201C;accidental sequencing centers&#x201D;. As such, perhaps the most important recommendation that can be made is to be agile in developing workflows, to think in terms of loosely-coupled modules that can be swapped in and out as needed, by avoiding proprietary platforms and technologies and pragmatically choosing interoperable standards instead.</p>
</sec>
</body>
<back>
<ref-list>
<title>References</title>
<ref id="c1"><label>1.</label><mixed-citation publication-type="book"><collab>&#x201C;Inter-university Consortium for Political and Social Research (ICPSR)&#x201D;</collab> (<year>2012</year>) <chapter-title>Guide to Social Science Data Preparation and Archiving: Best Practice Throughout the Data Life Cycle</chapter-title>. <edition>5th ed.</edition> <publisher-loc>Ann Arbor, MI</publisher-loc>.</mixed-citation></ref>
<ref id="c2"><label>2.</label><mixed-citation publication-type="journal"><string-name><surname>Lawrence</surname> <given-names>B</given-names></string-name>, <string-name><surname>Jones</surname> <given-names>C</given-names></string-name>, <string-name><surname>Matthews</surname> <given-names>B</given-names></string-name>, <string-name><surname>Pepler</surname> <given-names>S</given-names></string-name>, <string-name><surname>Callaghan</surname> <given-names>S</given-names></string-name> (<year>2011</year>) <article-title>Citation and Peer Review of Data: Moving Towards Formal Data Publication</article-title>. <source>Int J Digit Curation</source> <volume>6</volume>: <fpage>4</fpage>&#x2013;<lpage>37</lpage>. doi:<pub-id pub-id-type="doi">10.2218/ijdc.v6i2.205</pub-id>.</mixed-citation></ref>
<ref id="c3"><label>3.</label><mixed-citation publication-type="journal"><string-name><surname>Clark</surname> <given-names>T</given-names></string-name>, <string-name><surname>Ciccarese</surname> <given-names>PN</given-names></string-name>, <string-name><surname>Goble</surname> <given-names>CA</given-names></string-name> (<year>2013</year>) <source>Micropublications: a Semantic Model for Claims, Evidence, Arguments and Annotations in Biomedical Communications</source>.</mixed-citation></ref>
<ref id="c4"><label>4.</label><mixed-citation publication-type="journal"><string-name><surname>Vlieg</surname> <given-names>J de</given-names></string-name>, <string-name><surname>van Schaik</surname> <given-names>R</given-names></string-name>, <string-name><surname>Aerts</surname> <given-names>P</given-names></string-name>, <string-name><surname>Lusher</surname> <given-names>S</given-names></string-name>, <string-name><surname>Sienstra</surname> <given-names>F</given-names></string-name>, <etal>et al.</etal> (<year>2013</year>) <article-title>Data-Stewardship in the Big Data Era: Taking Care of Data</article-title>. <source>Amsterdam</source>. <fpage>9</fpage> p.</mixed-citation></ref>
<ref id="c5"><label>5.</label><mixed-citation publication-type="journal"><string-name><surname>Sboner</surname> <given-names>A</given-names></string-name>, <string-name><surname>Mu</surname> <given-names>XJ</given-names></string-name>, <string-name><surname>Greenbaum</surname> <given-names>D</given-names></string-name>, <string-name><surname>Auerbach</surname> <given-names>RK</given-names></string-name>, <string-name><surname>Gerstein</surname> <given-names>MB</given-names></string-name> (<year>2011</year>) <article-title>The real cost of sequencing: higher than you think</article-title>! <source>Genome Biol</source> <volume>12</volume>: <fpage>125</fpage>. doi:<pub-id pub-id-type="doi">10.1186/gb-2011-12-8-125</pub-id>.</mixed-citation></ref>
<ref id="c6"><label>6.</label><mixed-citation publication-type="journal"><string-name><surname>Cock</surname> <given-names>PJA</given-names></string-name>, <string-name><surname>Fields</surname> <given-names>CJ</given-names></string-name>, <string-name><surname>Goto</surname> <given-names>N</given-names></string-name>, <string-name><surname>Heuer</surname> <given-names>ML</given-names></string-name>, <string-name><surname>Rice</surname> <given-names>PM</given-names></string-name> (<year>2010</year>) <article-title>The Sanger FASTQ file format for sequences with quality scores, and the Solexa/Illumina FASTQ variants</article-title>. <source>Nucleic Acids Res</source> <volume>38</volume>: <fpage>1767</fpage>&#x2013;<lpage>1771</lpage>.</mixed-citation></ref>
<ref id="c7"><label>7.</label><mixed-citation publication-type="journal"><string-name><surname>Wan</surname> <given-names>R</given-names></string-name>, <string-name><surname>Anh</surname> <given-names>VN</given-names></string-name>, <string-name><surname>Asai</surname> <given-names>K</given-names></string-name> (<year>2012</year>) <article-title>Transformations for the compression of FASTQ quality scores of next-generation sequencing data</article-title>. <source>Bioinformatics</source> <volume>28</volume>: <fpage>628</fpage>&#x2013;<lpage>635</lpage>. doi:<pub-id pub-id-type="doi">10.1093/bioinformatics/btr689</pub-id>.</mixed-citation></ref>
<ref id="c8"><label>8.</label><mixed-citation publication-type="journal"><string-name><surname>Bonfield</surname> <given-names>JK</given-names></string-name>, <string-name><surname>Mahoney</surname> <given-names>M V</given-names></string-name> (<year>2013</year>) <article-title>Compression of FASTQ and SAM format sequencing data</article-title>. <source>PLoS One</source> <volume>8</volume>: <fpage>e59190</fpage>.</mixed-citation></ref>
<ref id="c9"><label>9.</label><mixed-citation publication-type="journal"><string-name><surname>Deorowicz</surname> <given-names>S</given-names></string-name>, <string-name><surname>Grabowski</surname> <given-names>S</given-names></string-name> (<year>2011</year>) <article-title>Compression of DNA sequence reads in FASTQ format</article-title>. <source>Bioinformatics</source> <volume>27</volume>: <fpage>860</fpage>&#x2013;<lpage>862</lpage>.</mixed-citation></ref>
<ref id="c10"><label>10.</label><mixed-citation publication-type="journal"><string-name><surname>Li</surname> <given-names>H</given-names></string-name>, <string-name><surname>Handsaker</surname> <given-names>B</given-names></string-name>, <string-name><surname>Wysoker</surname> <given-names>A</given-names></string-name>, <string-name><surname>Fennell</surname> <given-names>T</given-names></string-name>, <string-name><surname>Ruan</surname> <given-names>J</given-names></string-name>, <etal>et al.</etal> (<year>2009</year>) <article-title>The Sequence Alignment/Map format and SAMtools</article-title>. <source>Bioinformatics</source> <volume>25</volume>: <fpage>2078</fpage>&#x2013;<lpage>2079</lpage>. doi:<pub-id pub-id-type="doi">10.1093/bioinformatics/btp352</pub-id>.</mixed-citation></ref>
<ref id="c11"><label>11.</label><mixed-citation publication-type="journal"><string-name><surname>Hsi-Yang Fritz</surname> <given-names>M</given-names></string-name>, <string-name><surname>Leinonen</surname> <given-names>R</given-names></string-name>, <string-name><surname>Cochrane</surname> <given-names>G</given-names></string-name>, <string-name><surname>Birney</surname> <given-names>E</given-names></string-name> (<year>2011</year>) <article-title>Efficient storage of high throughput DNA sequencing data using reference-based compression</article-title>. <source>Genome Res</source> <volume>21</volume>: <fpage>734</fpage>&#x2013;<lpage>740</lpage>. doi:<pub-id pub-id-type="doi">10.1101/gr.114819.110</pub-id>.</mixed-citation></ref>
<ref id="c12"><label>12.</label><mixed-citation publication-type="journal"><string-name><surname>Loh</surname> <given-names>P-R</given-names></string-name>, <string-name><surname>Baym</surname> <given-names>M</given-names></string-name>, <string-name><surname>Berger</surname> <given-names>B</given-names></string-name> (<year>2012</year>) <article-title>Compressive genomics</article-title>. <source>Nat Biotechnol</source> <volume>30</volume>: <fpage>627</fpage>&#x2013;<lpage>630</lpage>. doi:<pub-id pub-id-type="doi">10.1038/nbt.2241</pub-id>.</mixed-citation></ref>
<ref id="c13"><label>13.</label><mixed-citation publication-type="journal"><string-name><surname>Jordan</surname> <given-names>C</given-names></string-name>, <string-name><surname>Stanzione</surname> <given-names>D</given-names></string-name>, <string-name><surname>Ware</surname> <given-names>D</given-names></string-name>, <string-name><surname>Lu</surname> <given-names>J</given-names></string-name>, <string-name><surname>Noutsos</surname> <given-names>C</given-names></string-name> (<year>2010</year>) <source>Comprehensive data infrastructure for plant bioinformatics</source>. <conf-name>2010 IEEE Int Conf Clust Comput Work Posters</conf-name> (CLUSTER Work: <fpage>1</fpage>&#x2013;<lpage>5</lpage>. doi:<pub-id pub-id-type="doi">10.1109/CLUSTERWKSP.2010.5613093</pub-id>.</mixed-citation></ref>
<ref id="c14"><label>14.</label><mixed-citation publication-type="journal"><string-name><surname>Lampa</surname> <given-names>S</given-names></string-name>, <string-name><surname>Dahl&#x00F6;</surname> <given-names>M</given-names></string-name>, <string-name><surname>Olason</surname> <given-names>PI</given-names></string-name>, <string-name><surname>Hagberg</surname> <given-names>J</given-names></string-name>, <string-name><surname>Spjuth</surname> <given-names>O</given-names></string-name> (<year>2013</year>) <article-title>Lessons learned from implementing a national infrastructure in Sweden for storage and analysis of next-generation sequencing data</article-title>. <source>Gigascience</source> <volume>2</volume>: <fpage>9</fpage>. doi:<pub-id pub-id-type="doi">10.1186/2047-217X-2-9</pub-id>.</mixed-citation></ref>
<ref id="c15"><label>15.</label><mixed-citation publication-type="journal"><string-name><surname>Chiang</surname> <given-names>G-T</given-names></string-name>, <string-name><surname>Clapham</surname> <given-names>P</given-names></string-name>, <string-name><surname>Qi</surname> <given-names>G</given-names></string-name>, <string-name><surname>Sale</surname> <given-names>K</given-names></string-name>, <string-name><surname>Coates</surname> <given-names>G</given-names></string-name> (<year>2011</year>) <article-title>Implementing a genomic data management system using iRODS in the Wellcome Trust Sanger Institute</article-title>. <source>BMC Bioinformatics</source> <volume>12</volume>: <fpage>361</fpage>.</mixed-citation></ref>
<ref id="c16"><label>16.</label><mixed-citation publication-type="journal"><string-name><surname>Noble</surname> <given-names>WS</given-names></string-name> (<year>2009</year>) <article-title>A Quick Guide to Organizing Computational Biology Projects</article-title>. <source>PLoS Comput Biol</source> <volume>5</volume>. doi:<pub-id pub-id-type="doi">10.1371/journal.pcbi.1000424</pub-id>.</mixed-citation></ref>
<ref id="c17"><label>17.</label><mixed-citation publication-type="journal"><string-name><surname>Sandve</surname> <given-names>GK</given-names></string-name>, <string-name><surname>Nekrutenko</surname> <given-names>A</given-names></string-name>, <string-name><surname>Taylor</surname> <given-names>J</given-names></string-name>, <string-name><surname>Hovig</surname> <given-names>E</given-names></string-name> (<year>2013</year>) <article-title>Ten Simple Rules for Reproducible Computational Research</article-title>. <source>PLoS Comput Biol</source> <volume>9</volume>: <fpage>e1003285</fpage>.</mixed-citation></ref>
<ref id="c18"><label>18.</label><mixed-citation publication-type="journal"><string-name><surname>Szalay</surname> <given-names>A</given-names></string-name>, <string-name><surname>Gray</surname> <given-names>J</given-names></string-name> (<year>2006</year>) <article-title>2020 computing: science in an exponential world</article-title>. <source>Nature</source> <volume>440</volume>: <fpage>413</fpage>&#x2013;<lpage>414</lpage>. doi:<pub-id pub-id-type="doi">10.1038/440413a</pub-id>.</mixed-citation></ref>
<ref id="c19"><label>19.</label><mixed-citation publication-type="journal"><string-name><surname>Stein</surname> <given-names>LD</given-names></string-name> (<year>2010</year>) <article-title>The case for cloud computing in genome informatics</article-title>. <source>Genome Biol</source> <volume>11</volume>: <fpage>207</fpage>.</mixed-citation></ref>
<ref id="c20"><label>20.</label><mixed-citation publication-type="journal"><string-name><surname>Yilmaz</surname> <given-names>P</given-names></string-name>, <string-name><surname>Kottmann</surname> <given-names>R</given-names></string-name>, <string-name><surname>Field</surname> <given-names>D</given-names></string-name>, <string-name><surname>Knight</surname> <given-names>R</given-names></string-name>, <string-name><surname>Cole</surname> <given-names>JR</given-names></string-name>, <etal>et al.</etal> (<year>2011</year>) <article-title>Minimum information about a marker gene sequence (MIMARKS) and minimum information about any (x) sequence (MIxS) specifications</article-title>. <source>Nat Biotechnol</source> <volume>29</volume>: <fpage>415</fpage>&#x2013;<lpage>420</lpage>. doi:<pub-id pub-id-type="doi">10.1038/nbt.1823</pub-id>.</mixed-citation></ref>
<ref id="c21"><label>21.</label><mixed-citation publication-type="website"><article-title>MINSEQE: Minimum Information about a high-throughput Nucleotide SeQuencing Experiment - a proposal for standards in functional genomic data reporting</article-title> (<year>2012</year>). 0. Available: <ext-link ext-link-type="uri" xlink:href="http://www.fged.org/site_media/pdf/MINSEQE_1.0.pdf">http://www.fged.org/site_media/pdf/MINSEQE_1.0.pdf</ext-link>.</mixed-citation></ref>
<ref id="c22"><label>22.</label><mixed-citation publication-type="journal"><string-name><surname>Rocca-Serra</surname> <given-names>P</given-names></string-name>, <string-name><surname>Brandizi</surname> <given-names>M</given-names></string-name>, <string-name><surname>Maguire</surname> <given-names>E</given-names></string-name>, <string-name><surname>Sklyar</surname> <given-names>N</given-names></string-name>, <string-name><surname>Taylor</surname> <given-names>C</given-names></string-name>, <etal>et al.</etal> (<year>2010</year>) <article-title>ISA software suite: supporting standards-compliant experimental annotation and enabling curation at the community level</article-title>. <source>Bioinformatics</source> <volume>26</volume>: <fpage>2354</fpage>&#x2013;<lpage>2356</lpage>. doi:<pub-id pub-id-type="doi">10.1093/bioinformatics/btq415</pub-id>.</mixed-citation></ref>
<ref id="c23"><label>23.</label><mixed-citation publication-type="journal"><string-name><surname>Katayama</surname> <given-names>T</given-names></string-name>, <string-name><surname>Wilkinson</surname> <given-names>MD</given-names></string-name>, <string-name><surname>Aoki-Kinoshita</surname> <given-names>KF</given-names></string-name>, <string-name><surname>Kawashima</surname> <given-names>S</given-names></string-name>, <string-name><surname>Yamamoto</surname> <given-names>Y</given-names></string-name>, <etal>et al.</etal> (<year>2014</year>) <article-title>BioHackathon series in 2011 and 2012: penetration of ontology and linked data in life science domains</article-title>. <source>J Biomed Semantics</source> <volume>5</volume>: <fpage>5</fpage>. doi:<pub-id pub-id-type="doi">10.1186/2041-1480-5-5</pub-id>.</mixed-citation></ref>
</ref-list>
<fn-group>
<fn id="fn1"><label><sup>1</sup></label><p>Data Management International: <ext-link ext-link-type="uri" xlink:href="http://www.dama.org/i4a/pages/index.cfm?pageid=3339">http://www.dama.org/i4a/pages/index.cfm?pageid=3339</ext-link></p></fn>
<fn id="fn2"><label><sup>2</sup></label><p>e.g. see <ext-link ext-link-type="uri" xlink:href="http://blogs.princeton.edu/onpopdata/2012/03/12/data-life-cycle/">http://blogs.princeton.edu/onpopdata/2012/03/12/data-life-cycle/</ext-link></p></fn>
<fn id="fn3"><label><sup>3</sup></label><p><ext-link ext-link-type="uri" xlink:href="http://dans.knaw.nl">http://dans.knaw.nl</ext-link></p></fn>
<fn id="fn4"><label><sup>4</sup></label><p><ext-link ext-link-type="uri" xlink:href="http://datadryad.org">http://datadryad.org</ext-link></p></fn>
<fn id="fn5"><label><sup>5</sup></label><p><ext-link ext-link-type="uri" xlink:href="http://www.insdc.org/">http://www.insdc.org/</ext-link></p></fn>
<fn id="fn6"><label><sup>6</sup></label><p>e.g. see <ext-link ext-link-type="uri" xlink:href="http://www.dcc.ac.uk/sites/default/files/documents/publications/DCCLifecycle.pdf">http://www.dcc.ac.uk/sites/default/files/documents/publications/DCCLifecycle.pdf</ext-link></p></fn>
<fn id="fn7"><label><sup>7</sup></label><p><ext-link ext-link-type="uri" xlink:href="http://www.slideshare.net/gcoates/sharing-data-sanger-experiences">http://www.slideshare.net/gcoates/sharing-data-sanger-experiences</ext-link></p></fn>
<fn id="fn8"><label><sup>8</sup></label><p><ext-link ext-link-type="uri" xlink:href="http://www.slideshare.net/gcoates/nextgeneration-sequencing-data-mangement">http://www.slideshare.net/gcoates/nextgeneration-sequencing-data-mangement</ext-link></p></fn>
<fn id="fn9"><label><sup>9</sup></label><p><ext-link ext-link-type="uri" xlink:href="http://www.genengnews.com/gen-articles/managing-data-from-next-gen-sequencing/2449/">http://www.genengnews.com/gen-articles/managing-data-from-next-gen-sequencing/2449/</ext-link></p></fn>
<fn id="fn10"><label><sup>10</sup></label><p><ext-link ext-link-type="uri" xlink:href="http://samtools.github.io/htsjdk/">http://samtools.github.io/htsjdk/</ext-link></p></fn>
<fn id="fn11"><label><sup>11</sup></label><p><ext-link ext-link-type="uri" xlink:href="http://www.ncbi.nlm.nih.gov/books/NBK47537/#File_Format_Guide_B.Overview_of_Input_Fo">http://www.ncbi.nlm.nih.gov/books/NBK47537/#File_Format_Guide_B.Overview_of_Input_Fo</ext-link></p></fn>
<fn id="fn12"><label><sup>12</sup></label><p><ext-link ext-link-type="uri" xlink:href="http://www.ncbi.nlm.nih.gov/Traces/trace.cgi?cmd=show&#x0026;f=formats&#x0026;m=doc&#x0026;s=format#sff">http://www.ncbi.nlm.nih.gov/Traces/trace.cgi?cmd=show&#x0026;f=formats&#x0026;m=doc&#x0026;s=format#sff</ext-link></p></fn>
<fn id="fn13"><label><sup>13</sup></label><p><ext-link ext-link-type="uri" xlink:href="http://irods.org/">http://irods.org/</ext-link></p></fn>
<fn id="fn14"><label><sup>14</sup></label><p><ext-link ext-link-type="uri" xlink:href="https://usegalaxy.org/">https://usegalaxy.org/</ext-link></p></fn>
<fn id="fn15"><label><sup>15</sup></label><p><ext-link ext-link-type="uri" xlink:href="https://aws.amazon.com/s3/">https://aws.amazon.com/s3/</ext-link></p></fn>
<fn id="fn16"><label><sup>16</sup></label><p><ext-link ext-link-type="uri" xlink:href="http://ceph.com/ceph-storage/object-storage/">http://ceph.com/ceph-storage/object-storage/</ext-link></p></fn>
<fn id="fn17"><label><sup>17</sup></label><p><ext-link ext-link-type="uri" xlink:href="http://www.vagrantup.com/">http://www.vagrantup.com/</ext-link></p></fn>
<fn id="fn18"><label><sup>18</sup></label><p><ext-link ext-link-type="uri" xlink:href="https://puppetlabs.com/">https://puppetlabs.com/</ext-link></p></fn>
<fn id="fn19"><label><sup>19</sup></label><p><ext-link ext-link-type="uri" xlink:href="https://www.docker.com/">https://www.docker.com/</ext-link></p></fn>
<fn id="fn20"><label><sup>20</sup></label><p><ext-link ext-link-type="uri" xlink:href="https://virtualenv.pypa.io">https://virtualenv.pypa.io</ext-link></p></fn>
<fn id="fn21"><label><sup>21</sup></label><p>For example: Galaxy (<ext-link ext-link-type="uri" xlink:href="http://galaxyproject.org/">http://galaxyproject.org/</ext-link>), Taverna (<ext-link ext-link-type="uri" xlink:href="http://www.taverna.org.uk/">http://www.taverna.org.uk/</ext-link>), eHive (<ext-link ext-link-type="uri" xlink:href="http://www.ensembl.org/info/docs/eHive/index.html">http://www.ensembl.org/info/docs/eHive/index.html</ext-link>)</p></fn>
<fn id="fn22"><label><sup>22</sup></label><p>For example, make-like tools such as SnakeMake (<ext-link ext-link-type="uri" xlink:href="https://bitbucket.org/johanneskoester/snakemake/wiki/Home">https://bitbucket.org/johanneskoester/snakemake/wiki/Home</ext-link>)</p></fn>
<fn id="fn23"><label><sup>23</sup></label><p>For example the statistics language R (<ext-link ext-link-type="uri" xlink:href="http://www.r-project.org/">http://www.r-project.org/</ext-link>)</p></fn>
<fn id="fn24"><label><sup>24</sup></label><p>For example, Python (<ext-link ext-link-type="uri" xlink:href="https://www.python.org/">https://www.python.org/</ext-link>), Ruby (<ext-link ext-link-type="uri" xlink:href="https://www.ruby-lang.org/en/">https://www.ruby-lang.org/en/</ext-link>) or Perl (<ext-link ext-link-type="uri" xlink:href="http://www.perl.org/">http://www.perl.org/</ext-link>)</p></fn>
<fn id="fn25"><label><sup>25</sup></label><p><ext-link ext-link-type="uri" xlink:href="https://www.docker.com/">https://www.docker.com/</ext-link></p></fn>
<fn id="fn26"><label><sup>26</sup></label><p><ext-link ext-link-type="uri" xlink:href="https://virtualenv.pypa.io/en/latest/">https://virtualenv.pypa.io/en/latest/</ext-link></p></fn>
<fn id="fn27"><label><sup>27</sup></label><p><ext-link ext-link-type="uri" xlink:href="http://www.git-scm.com/">http://www.git-scm.com/</ext-link></p></fn>
<fn id="fn28"><label><sup>28</sup></label><p><ext-link ext-link-type="uri" xlink:href="http://dans.knaw.nl">https://subversion.apache.org/</ext-link></p></fn>
<fn id="fn29"><label><sup>29</sup></label><p>e.g. <ext-link ext-link-type="uri" xlink:href="http://bitbucket.org">http://bitbucket.org</ext-link>, <ext-link ext-link-type="uri" xlink:href="http://github.com">http://github.com</ext-link>, <ext-link ext-link-type="uri" xlink:href="http://sourceforge.net">http://sourceforge.net</ext-link></p></fn>
<fn id="fn30"><label><sup>30</sup></label><p><ext-link ext-link-type="uri" xlink:href="http://galaxyproject.org">http://galaxyproject.org</ext-link></p></fn>
<fn id="fn31"><label><sup>31</sup></label><p>for a good example of this, see <ext-link ext-link-type="uri" xlink:href="https://usegalaxy.org/u/aun1/p/windshield-splatter">https://usegalaxy.org/u/aun1/p/windshield-splatter</ext-link></p></fn>
<fn id="fn32"><label><sup>32</sup></label><p><ext-link ext-link-type="uri" xlink:href="http://git-annex.branchable.com/">http://git-annex.branchable.com/</ext-link></p></fn>
<fn id="fn33"><label><sup>33</sup></label><p><ext-link ext-link-type="uri" xlink:href="http://git-annex.branchable.com/special_remotes/">http://git-annex.branchable.com/special_remotes/</ext-link></p></fn>
<fn id="fn34"><label><sup>34</sup></label><p><ext-link ext-link-type="uri" xlink:href="http://www.slideshare.net/gcoates/nextgeneration-sequencing-data-mangement">http://www.slideshare.net/gcoates/nextgeneration-sequencing-data-mangement</ext-link></p></fn>
<fn id="fn35"><label><sup>35</sup></label><p><ext-link ext-link-type="uri" xlink:href="http://www.slideshare.net/gcoates/nextgeneration-sequencing-data-mangement">http://www.slideshare.net/gcoates/nextgeneration-sequencing-data-mangement</ext-link></p></fn>
</fn-group>
</back>
</article>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.2d1 20170631//EN" "JATS-archivearticle1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" article-type="article" dtd-version="1.2d1" specific-use="production" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">BIORXIV</journal-id>
<journal-title-group>
<journal-title>bioRxiv</journal-title>
<abbrev-journal-title abbrev-type="publisher">bioRxiv</abbrev-journal-title>
</journal-title-group>
<publisher>
<publisher-name>Cold Spring Harbor Laboratory</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1101/210682</article-id>
<article-version>1.1</article-version>
<article-categories>
<subj-group subj-group-type="author-type">
<subject>Regular Article</subject>
</subj-group>
<subj-group subj-group-type="heading">
<subject>New Results</subject>
</subj-group>
<subj-group subj-group-type="hwp-journal-coll">
<subject>Bioinformatics</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>runibic: a Bioconductor package for parallel row-based biclustering of gene expression data</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<name><surname>Orzechowski</surname><given-names>Patryk</given-names></name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a2">2</xref>
<xref ref-type="corresp" rid="cor1">&#x002A;</xref>
</contrib>
<contrib contrib-type="author">
<name><surname>Pa&#x0144;szczyk</surname><given-names>Artur</given-names></name>
<xref ref-type="aff" rid="a2">2</xref>
</contrib>
<contrib contrib-type="author">
<name><surname>Huang</surname><given-names>Xiuzhen</given-names></name>
<xref ref-type="aff" rid="a3">3</xref>
</contrib>
<contrib contrib-type="author" corresp="yes">
<name><surname>Moore</surname><given-names>Jason H.</given-names></name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="corresp" rid="cor1">&#x002A;</xref>
</contrib>
<aff id="a1"><label>1</label><institution>Institute for Biomedical Informatics, University of Pennsylvania</institution>, Philadelphia, PA 19104, <country>USA</country></aff>
<aff id="a2"><label>2</label><institution>Department of Automatics and Biomedical Engineering, AGH University of Science and Technology</institution>, al. Mickiewicza 30, 30-059 Krakow, <country>Poland</country></aff>
<aff id="a3"><label>3</label><institution>Department of Computer Science, Arkansas State University</institution>, Jonesboro, AR 72467, <country>USA</country></aff>
</contrib-group>
<author-notes>
<corresp id="cor1"><label>&#x002A;</label>To whom correspondence should be addressed</corresp></author-notes>
<pub-date pub-type="epub">
<year>2017</year>
</pub-date>
<elocation-id>210682</elocation-id>
<history>
<date date-type="received">
<day>28</day>
<month>10</month>
<year>2017</year>
</date>
<date date-type="rev-recd">
<day>28</day>
<month>10</month>
<year>2017</year>
</date>
<date date-type="accepted">
<day>28</day>
<month>10</month>
<year>2017</year>
</date>
</history><permissions><copyright-statement>&#x00A9; 2017, Posted by Cold Spring Harbor Laboratory</copyright-statement>
<copyright-year>2017</copyright-year><license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by/4.0/"><license-p>This pre-print is available under a Creative Commons License (Attribution 4.0 International), CC BY 4.0, as described at <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link></license-p></license></permissions>
<self-uri xlink:href="210682.pdf" content-type="pdf" xlink:role="full-text"/>
<abstract><title>Abstract</title>
<sec><title>Motivation</title>
<p>Biclustering (called also co-clustering) is an unsupervised technique of simultaneous analysis of rows and columns of input matrix. From the first application to gene expression data, multiple algorithms have been proposed. Only a handful of them were able to provide accurate results and were fast enough to be suitable for large-scale genomic datasets.</p>
</sec>
<sec><title>Results</title>
<p>In this paper we introduce a Bioconductor package with parallel version of UniBic biclustering algorithm: one of the most accurate biclustering methods that have been developed so far. For the convenience of usage, we have wrapped the algorithm in an R package called <italic>runibic</italic>. The package includes: (1) a couple of times faster parallel version of the original sequential algorithm,(2) muchmore efficient memory management, (3) modularity which allows to build new methods on top of the provided one, (4) integration with the modern Bioconductor packages such as <italic>SummarizedExperiment</italic>, <italic>ExpressionSet</italic>and <italic>biclust</italic>.</p>
</sec>
<sec sec-type="availability"><title>Availability</title>
<p>The package is implemented in R (3.4) and will be available in the new release of Bioconductor (3.6). Currently it could be downloaded from the following URL: <ext-link ext-link-type="uri" xlink:href="http://github.com/athril/runibic/">http://github.com/athril/runibic/</ext-link></p>
</sec>
<sec><title>Contact</title>
<p><email>patryk.orzechowski@gmail.com</email>, <email>jhmoore@upenn.edu</email></p>
</sec>
<sec sec-type="supplementary-material"><title>Supplementary information</title>
<p>Supplementary informations are available in vignette of the package.</p>
</sec>
</abstract>
<counts>
<page-count count="3"/>
</counts>
</article-meta>
</front>
<body>
<sec id="s1"><label>1.</label><title>Introduction</title>
<p>The recent advantages in transcriptomic analysis, including development of high-throughput and high-resolution platforms including RNA-seq, single-cell RNA-sequencing (scRNA-seq) or high-throughput PCR have allowed to design experiments that provide datasets with even hundreds of thousands columns and thousands rows. This have set new requirements for data analytics. Modern methods need to yield accurate results. They are required to handle large datasets and are expected to finish computations in reasonable time.</p>
<p>With growing amount of genomic data there is an urgent need for efficient and precise methods that are able to capture the underlying patterns in gene expression datasets. One of the techniques that proved to be very insightful in gene expression analysis is biclustering, which allows to detect subsets of genes and samples in complex and noisy data. Biclustering is considered NP-hard as it investigates relations between multiple rows that occur in different subsets of columns. The running time of the algorithms is usually highly dependent on the size of the input data.</p>
<p>The vast majority of biclustering methods are sequential. There area couple of common reasons for this. Some methods are specifically designed to yield only one bicluster at a time. Each runofthealgorithm depends on the previous findings. Other methods use graph- based structures, which are difficult to parallelize, or perform hardly scalable statistical analyses. For some group of the methods parallel implementation may not be beneficial, as they extensively use binary operations. Bioconductor in version 3.5 provides the following biclustering methods and packages for gene expression analysis:</p>
<list list-type="bullet">
<list-item>
<p>ISA (<xref ref-type="bibr" rid="c2">Bergmann <italic>et al.</italic>, 2003</xref>) - implemented in eisa and isa2 Bioconductor packages (<xref ref-type="bibr" rid="c4">Csardi <italic>et al.</italic>, 2010</xref>),</p>
</list-item>
<list-item>
<p>CC (<xref ref-type="bibr" rid="c3">Cheng and Church, 2000</xref>), Plaid methods <xref ref-type="bibr" rid="c14">Lazzeroni and Owen (2002)</xref>, Bimax (<xref ref-type="bibr" rid="c19">Prelic&#x00B4; <italic>et al.</italic>, 2006</xref>), xMotifs (<xref ref-type="bibr" rid="c18">Murali and Kasif, 2003</xref>), Quest (<xref ref-type="bibr" rid="c11">Kaiser, 2011</xref>), Spectral <xref ref-type="bibr" rid="c13">Kluger <italic>et al.</italic> (2003)</xref> - all available in biclust package (<xref ref-type="bibr" rid="c12">Kaiser <italic>et al.</italic>, 2015</xref>),</p>
</list-item>
<list-item>
<p>FABIA, FABIAS, FABIAP - available in Bioconductor package fabia (<xref ref-type="bibr" rid="c10">Hochreiter <italic>et al.</italic>, 2010</xref>),</p>
</list-item>
<list-item>
<p>HapFABIA - implemented in package hapfabia (<xref ref-type="bibr" rid="c9">Hochreiter, 2013</xref>)</p>
</list-item>
<list-item>
<p>QUBIC (<xref ref-type="bibr" rid="c16">Li <italic>et al.</italic>, 2009</xref>) - implemented in more modern package QUBIC (<xref ref-type="bibr" rid="c24">Zhang <italic>et al.</italic>, 2017</xref>) and package older rqubic (<xref ref-type="bibr" rid="c23">Zhang, 2015</xref>),</p>
</list-item>
<list-item>
<p>MCbiclust - available in Bioconductor package MCbiclust (<xref ref-type="bibr" rid="c1">Bentham, 2017</xref>),</p>
</list-item>
<list-item>
<p>SSVD (<xref ref-type="bibr" rid="c15">Lee <italic>et al.</italic>, 2010</xref>) and S4VD (<xref ref-type="bibr" rid="c21">Sill <italic>et al.</italic>, 2011</xref>) - available in Bioconductor package s4vd <xref ref-type="bibr" rid="c20">Sill and Kaiser (2015)</xref>,</p>
</list-item>
<list-item>
<p>Iterative Binary Biclustering of Gene sets - available in Bioconductor package iBBiG <xref ref-type="bibr" rid="c8">Gusenleitner <italic>et al.</italic>(2012)</xref></p>
</list-item>
</list>
<p>The vast majority of the method are implemented in R, which is slower than C. Some of the methods, e.g. QUBIC, benefit from calls to high-performance C&#x002B;&#x002B; linear algebra libraries, such as <italic>Rcpp</italic> (<xref ref-type="bibr" rid="c6">Eddelbuettel and Fran&#x00E7;ois, 2011</xref>) and <italic>RcppArmadilo</italic> (<xref ref-type="bibr" rid="c7">Eddelbuettel and Sanderson, 2014</xref>). The comparison of R packages functionality is presented in <xref rid="tbl1" ref-type="table">Table 1</xref>.</p>
<table-wrap id="tbl1" orientation="portrait" position="float"><label>Table 1.</label>
<caption><p>Comparison of functionalities of different R packages. (&#x002A;) - Only Bimax algorithm uses wrapped C function call.</p></caption>
<graphic xlink:href="210682_tbl1.tif"/>
</table-wrap>
<p>One of the recent breakthroughs in gene expression analysis was UniBic (<xref ref-type="bibr" rid="c22">Wang <italic>et al.</italic>, 2016</xref>). The algorithm originally implemented in C managed to capture biologically meaningful trend-preserving patterns and proved to outperform multiple other methods. The method also showed great potential for parallelization. Unfortunately the implementation of the method wasn&#x2019;t efficient enough and the code had some memory leaks.</p>
</sec>
<sec id="s2"><label>2</label><title>Methods</title>
<p>In this paper we introduce aBioconductorpackagecalled <italic>runibic</italic> with parallel implementation of one of the most accurate biclustering methods: UniBic. Thealgorithm, orignally released as sequential, has proven to outperform multiple popular biclustering state-of-the-art biclustering methods (<xref ref-type="bibr" rid="c22">Wang <italic>et al.</italic>, 2016</xref>). We have redesigned the code and reimplemented the method into more modern C&#x002B;&#x002B;11 programming language. By parallelizing chunks of the code using OpenMP standard <xref ref-type="bibr" rid="c5">Dagum and Menon (1998)</xref>, we obtained approximately up to a couple of times speedup in terms of execution time for popular genomic datasets. By fixing some of the memory management bugs, our package provides more stable and reliable implementation of UniBic algorithm.</p>
<sec id="s2a"><label>2.1</label><title>Implementation</title>
<p>In the provided implementation of UniBic algorithm, we migrated the original code from C to C&#x002B;&#x002B;11 programming language and added OpenMP support. Code refactoring allowed us to take advantage of multiple aspects of modern-style language programming:</p>
<list list-type="bullet">
<list-item>
<p>safer and more modern memory management replaced difficult to maintain C style memory allocations and deallocations,</p>
</list-item>
<list-item>
<p>fast and efficient containers from Standard Template Library (STL), such as vectors, sets and algorithms, were used for acceleration of common operations like iterate, sort, search, count, or copy,</p>
</list-item>
<list-item>
<p>the original implementation in most cases allocated a large number of simple arrays and used loops with slow indexing for common operations,</p>
</list-item>
<list-item>
<p>removing many redundant copying and memory allocations,</p>
</list-item>
<list-item>
<p>fixing a couple of memory leaks, which caused segmentation fault for some datasets.</p>
</list-item>
</list>
<p>Porting thecodeimprovedinterpretabilityofthecodeallowedto remove multiple redundancies present in the previous UniBic implementation. For example, we replaced the original four functions that calculated the Longest Common Subsequence with a single one with multiple options. Similar improvements were made in other code sections, for example: in discretization, in calculation of Longest Common Subsequence between each pair of rows, in clustering and bicluster expansion parts. In order to provide more insightful analysis into the modules of UniBic algorithm, we separated and exported the major steps of the original method. Thus, the algorithm may be run using either a single command, or executed step by step. This provides much better control, improves clarity of the method,and allows its future customization. The algorithm provided in <italic>runibic</italic> package is divided into the following sections:</p>
<list list-type="bullet">
<list-item>
<p><italic>set_runibic_params</italic> - a function that sets parameters for algorithm,</p>
</list-item>
<list-item>
<p><italic>runiDiscretize</italic> - the original UniBic discretize approach, which take into account the number of ranks from &#x2018;div&#x2019; parameter and quantile value from &#x2018;q&#x2019; parameter (Step 1 of the method),</p>
</list-item>
<list-item>
<p><italic>unisort</italic> - a function that sorts the rows of a matrix and returns the indexes of sorted columns in each row (Step 2),</p>
</list-item>
<list-item>
<p><italic>calculateLCS</italic> - a function that calculates the Longest Common Subsequence (LCS) between each unique pair of rows in the matrix, returns a list of LCS lengths and row pairs (Step 3),</p>
</list-item>
<list-item>
<p><italic>cluster</italic> - the main biclustering method which builds biclusters based on the input data and <italic>calculateLCS</italic> results (Steps 4 and 5).</p>
</list-item>
</list>
<p>By designing a modular structure of the package we intended to simplify flexible modifications of the original algorithm. Such methods may use different preprocessing or ranking techniques, or expand bicusters using different rows as seeds. An example includes different method of sorting results from <italic>calculateLCS</italic>. The proposed method, which is based on a stable STL sort, could be used as an alternative to the old C style pointer and sorting based on Fibonacci Heap. In our opinion the proposed method is more robust and better reflects the original intention. The choice of the method may implicate the outcome of the algorithm, as different LCSes of the same length may be chosen as seeds.</p>
</sec>
<sec id="s2b"><label>2.2</label><title>Parallelization</title>
<p>In order to improve the algorithmexecutiontimethemostcrucialand computationally intensive parts of the code were parallelized using OpenMP standard. One of the most time consuming steps of UniBic is calculating Longest Common Subsequence (LCS) between unique pairs of rows. We rearranged the code and achieved parallelization whereeach core of the CPU calculates unique LCS between unique pair of rows simultaneously. Similarly, we also paralleled the data preprocessing required by the method, so as expansions of each of the biclusters, which required calculations of LCS between each row and the seed. All mentioned operations allowed us to obtain biclustering results in several minutes on the modern computer with modern processor.</p>
</sec>
<sec id="s2c"><label>2.3</label><title>Integration with Bioconductor packages</title>
<p>The <italic>runibic</italic> package takes advantage of <italic>Rcpp</italic> library that allows seamless integration of C&#x002B;&#x002B; code with R environment. The <italic>runibic</italic> package is also integrated with <italic>biclust</italic> package methods for biclustering process. Results returned from <italic>runibic</italic> are wrapped into a <italic>Biclust</italic> object, which can be used for further examination, including visualization and analysis provided by <italic>biclust</italic> package. The examples of usage are presented in Supplementary material as well as in the package manual.</p>
<preformat>
library (runibic)
library (biclust)
test &#x003C;&#x2212; matrix (rnorm(1000), 100, 100)
res &#x003C;&#x2212; runibic (test)
res &#x003C;&#x2212; biclust :: biclust (test, method &#x003D; BCUnibic())
</preformat>
<p>Similarly, the biclust method could be applied to any matrix extracted from <italic>ExpressionSet</italic> using <italic>exprs</italic>() function.</p>
</sec>
<sec id="s2d"><label>2.4</label><title>Support for SummarizedExperiment</title>
<p>Apart from allowing analysis of genomic data from historical <italic>ExpressionSet</italic>, <italic>runibic</italic> package is compatible with <italic>SummarizedExperiment</italic> class (<xref ref-type="bibr" rid="c17">Morgan <italic>et al.</italic>, 2017</xref>). This class offers much more flexibility in terms of experiment design and supports both RNA-Seq and Chip-Seq. This makes <italic>runibic</italic> a very easy tool for performing biclustering analysis of modern genomic experiments. An example of using <italic>runibic</italic> with Single-Cell RNA-Seq Datasets is provided in Supplementary material.</p>
</sec>
</sec>
<sec id="s3"><label>3</label><title>Results</title>
<p>To investigate running times of the method, we have applied it to several popular datasets. The running times of the revised and the original UniBic algorithm as well as the revised parallel version are presented in <xref rid="tbl2" ref-type="table">Table 2</xref>.</p>
<table-wrap id="tbl2" orientation="portrait" position="float"><label>Table 2.</label>
<caption><p>Running times of the original version of UniBic <xref ref-type="bibr" rid="c22">Wang et al. (2016)</xref> and parallel UniBic in R from Bioconductor package.</p></caption>
<graphic xlink:href="210682_tbl2.tif"/>
</table-wrap>
<p>By refactoring and optimizing the code,the new parallel version of UniBic biclustering algorithm provided by <italic>runibic</italic> package is approximately 2-5 times faster than the original version of the algorithm for popular genomic datasets.</p>
</sec>
<sec id="s4"><label>4</label><title>Conclusions</title>
<p>In this paper we introduce <italic>runibic</italic> package with revised and parallelized version of UniBic algorithm. The package is going to be available in the newest Bioconductor 3.6 release.. Providing a modular structure of the package allows to easily understand steps of the method and makes code much more interpretable. The <italic>runibic</italic> package provide <italic>runibic</italic> method that could be applied to any matrix in R, expression set extracted from <italic>ExpressionSet</italic> or <italic>SummarizedExperiment</italic> class. Integration with many common R and Bioconductor packages (e.g. <italic>biclust</italic>, <italic>QUBIC</italic>), as well as extensive documentation on one of the most accurate biclustering methods developed so far, make <italic>runibic</italic> package easily accessible and very flexible for gene expression analysis.</p>
</sec>
</body><back><sec id="s5"><label>5</label><title>Funding</title>
<p>This research was supported in part by PL-Grid Infrastructure and by grant LM012601 from the National Institutes of Health (USA).</p>
</sec>
<ref-list><title>References</title>
<ref id="c1"><mixed-citation publication-type="other"><string-name><surname>Bentham</surname>, <given-names>R.</given-names></string-name> (<year>2017</year>). <source>MCbiclust: Massive correlating biclusters for gene expression data and associated methods</source>. <article-title>R package version 1.0.1</article-title>.</mixed-citation></ref>
<ref id="c2"><mixed-citation publication-type="journal"><string-name><surname>Bergmann</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Ihmels</surname>, <given-names>J.</given-names></string-name>, and <string-name><surname>Barkai</surname>, <given-names>N.</given-names></string-name> (<year>2003</year>). <article-title>Iterative signature algorithm for the analysis of large-scale gene expression data</article-title>. <source>Physical review E</source>, <volume>67</volume>(<issue>3</issue>), <fpage>031902</fpage>.</mixed-citation></ref>
<ref id="c3"><mixed-citation publication-type="journal"><string-name><surname>Cheng</surname>, <given-names>Y.</given-names></string-name> and <string-name><surname>Church</surname>, <given-names>G. M.</given-names></string-name> (<year>2000</year>). <article-title>Biclustering of expression data</article-title>. In <source>Proceedings of the eighth international conference on intelligent systems for molecular biology</source>, volume <volume>8</volume>, pages <fpage>93</fpage>&#x2013;<lpage>103</lpage>.</mixed-citation></ref>
<ref id="c4"><mixed-citation publication-type="journal"><string-name><surname>Csardi</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Kutalik</surname>, <given-names>Z.</given-names></string-name>, and <string-name><surname>Bergmann</surname>, <given-names>S.</given-names></string-name> (<year>2010</year>). <article-title>Modular analysis of gene expression data with r</article-title>. <source>Bioinformatics</source>, <volume>26</volume>, <fpage>1376</fpage>&#x2013;<lpage>7</lpage>.</mixed-citation></ref>
<ref id="c5"><mixed-citation publication-type="journal"><string-name><surname>Dagum</surname>, <given-names>L.</given-names></string-name> and <string-name><surname>Menon</surname>, <given-names>R.</given-names></string-name> (<year>1998</year>). <article-title>Openmp: an industry standard api for shared-memory programming</article-title>. <source>IEEE computational science and engineering</source>, <volume>5</volume>(<issue>1</issue>), <fpage>46</fpage>&#x2013;<lpage>55</lpage>.</mixed-citation></ref>
<ref id="c6"><mixed-citation publication-type="journal"><string-name><surname>Eddelbuettel</surname>, <given-names>D.</given-names></string-name> and <string-name><surname>Fran&#x00E7;ois</surname>, <given-names>R.</given-names></string-name> (<year>2011</year>). <article-title>Rcpp: Seamless R and C&#x002B;&#x002B; integration</article-title>. <source>Journal of Statistical Software</source>, <volume>40</volume>(<issue>8</issue>), <fpage>1</fpage>&#x2013;<lpage>18</lpage>.</mixed-citation></ref>
<ref id="c7"><mixed-citation publication-type="journal"><string-name><surname>Eddelbuettel</surname>, <given-names>D.</given-names></string-name> and <string-name><surname>Sanderson</surname>, <given-names>C.</given-names></string-name> (<year>2014</year>). <article-title>Rcpparmadillo: Accelerating r with high-performance c&#x002B;&#x002B; linear algebra</article-title>. <source>Computational Statistics &#x0026; Data Analysis</source>, <volume>71</volume>, <fpage>1054</fpage>&#x2013;<lpage>1063</lpage>.</mixed-citation></ref>
<ref id="c8"><mixed-citation publication-type="journal"><string-name><surname>Gusenleitner</surname>, <given-names>D.</given-names></string-name>, <string-name><surname>Howe</surname>, <given-names>E. A.</given-names></string-name>, <string-name><surname>Bentink</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Quackenbush</surname>, <given-names>J.</given-names></string-name>, and <string-name><surname>Culhane</surname>, <given-names>A. C.</given-names></string-name> (<year>2012</year>). <article-title>ibbig: iterative binary bi-clustering of gene sets</article-title>. <source>Bioinformatics</source>, <volume>28</volume>(<issue>19</issue>), <fpage>2484</fpage>&#x2013;<lpage>2492</lpage>.</mixed-citation></ref>
<ref id="c9"><mixed-citation publication-type="journal"><string-name><surname>Hochreiter</surname>, <given-names>S.</given-names></string-name> (<year>2013</year>). <article-title>Hapfabia: identification of very short segments of identity by descent characterized by rare variants in large sequencing data</article-title>. <source>Nucleic acids research</source>, <volume>41</volume>(<issue>22</issue>), <fpage>e202</fpage>&#x2013;<lpage>e202</lpage>.</mixed-citation></ref>
<ref id="c10"><mixed-citation publication-type="journal"><string-name><surname>Hochreiter</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Bodenhofer</surname>, <given-names>U.</given-names></string-name>, <string-name><surname>Heusel</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Mayr</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Mitterecker</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Kasim</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Khamiakova</surname>, <given-names>T.</given-names></string-name>, <string-name><surname>Van Sanden</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Lin</surname>, <given-names>D.</given-names></string-name>, <string-name><surname>Talloen</surname>, <given-names>W.</given-names></string-name>, <string-name><surname>Bijnens</surname>, <given-names>L.</given-names></string-name>, <string-name><surname>G&#x201D;ohlmann</surname>, <given-names>H. W. H.</given-names></string-name>, <string-name><surname>Shkedy</surname>, <given-names>Z.</given-names></string-name>, and <string-name><surname>Clevert</surname>, <given-names>D.-A.</given-names></string-name> (<year>2010</year>). <article-title>FABIA: Factor analysis for bicluster acquisition</article-title>. <source>Bioinformatics</source>, <volume>26</volume>(<issue>12</issue>), <fpage>1520</fpage>&#x2013;<lpage>1527</lpage>. doi:<pub-id pub-id-type="doi">10.1093/bioinformatics/btq227</pub-id>.</mixed-citation></ref>
<ref id="c11"><mixed-citation publication-type="other"><string-name><surname>Kaiser</surname>, <given-names>S.</given-names></string-name> (<year>2011</year>). <source>Biclustering: methods, software and application</source>. <article-title>Ph.D. thesis, lmu</article-title>.</mixed-citation></ref>
<ref id="c12"><mixed-citation publication-type="other"><string-name><surname>Kaiser</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Santamaria</surname>, <given-names>R.</given-names></string-name>, <string-name><surname>Khamiakova</surname>, <given-names>T.</given-names></string-name>, <string-name><surname>Sill</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Theron</surname>, <given-names>R.</given-names></string-name>, <string-name><surname>Quintales</surname>, <given-names>L.</given-names></string-name>, <string-name><surname>Leisch</surname>, <given-names>F.</given-names></string-name>, and <string-name><surname>De Troyer.</surname>, <given-names>E.</given-names></string-name> (<year>2015</year>). <source>biclust: BiCluster Algorithms</source>. <article-title>R package version 1.2.0</article-title>.</mixed-citation></ref>
<ref id="c13"><mixed-citation publication-type="journal"><string-name><surname>Kluger</surname>, <given-names>Y.</given-names></string-name>, <string-name><surname>Basri</surname>, <given-names>R.</given-names></string-name>, <string-name><surname>Chang</surname>, <given-names>J. T.</given-names></string-name>, and <string-name><surname>Gerstein</surname>, <given-names>M.</given-names></string-name> (<year>2003</year>). <article-title>Spectral biclustering of microarray data: coclustering genes and conditions</article-title>. <source>Genome research</source>, <volume>13</volume>(<issue>4</issue>), <fpage>703</fpage>&#x2013;<lpage>716</lpage>.</mixed-citation></ref>
<ref id="c14"><mixed-citation publication-type="other"><string-name><surname>Lazzeroni</surname>, <given-names>L.</given-names></string-name> and <string-name><surname>Owen</surname>, <given-names>A.</given-names></string-name> (<year>2002</year>). <article-title>Plaid models for gene expression data</article-title>. <source>Statistica sinica</source>, pages <fpage>61</fpage>&#x2013;<lpage>86</lpage>.</mixed-citation></ref>
<ref id="c15"><mixed-citation publication-type="journal"><string-name><surname>Lee</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Shen</surname>, <given-names>H.</given-names></string-name>, <string-name><surname>Huang</surname>, <given-names>J. Z.</given-names></string-name>, and <string-name><surname>Marron</surname>, <given-names>J.</given-names></string-name> (<year>2010</year>). <article-title>Biclustering via sparse singular value decomposition</article-title>. <source>Biometrics</source>, <volume>66</volume>(<issue>4</issue>), <fpage>1087</fpage>&#x2013;<lpage>1095</lpage>.</mixed-citation></ref>
<ref id="c16"><mixed-citation publication-type="journal"><string-name><surname>Li</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Ma</surname>, <given-names>Q.</given-names></string-name>, <string-name><surname>Tang</surname>, <given-names>H.</given-names></string-name>, <string-name><surname>Paterson</surname>, <given-names>A. H.</given-names></string-name>, and <string-name><surname>Xu</surname>, <given-names>Y.</given-names></string-name> (<year>2009</year>). <article-title>QUBIC: a qualitative biclustering algorithm for analyses of gene expression data</article-title>. <source>Nucleic acids research</source>, <volume>37</volume>(<issue>15</issue>), <fpage>e101</fpage>&#x2013;<lpage>e101</lpage>.</mixed-citation></ref>
<ref id="c17"><mixed-citation publication-type="other"><string-name><surname>Morgan</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Obenchain</surname>, <given-names>V.</given-names></string-name>, <string-name><surname>Hester</surname>, <given-names>J.</given-names></string-name>, and <string-name><surname>Pag&#x00C3;s</surname>, <given-names>H.</given-names></string-name> (<year>2017</year>). <source>SummarizedExperiment: SummarizedExperiment container</source>. <article-title>R package version 1.6.5</article-title>.</mixed-citation></ref>
<ref id="c18"><mixed-citation publication-type="journal"><string-name><surname>Murali</surname>, <given-names>T.</given-names></string-name> and <string-name><surname>Kasif</surname>, <given-names>S.</given-names></string-name> (<year>2003</year>). <article-title>Extracting conserved gene expression motifs from gene expression data</article-title>. In <source>Pacific symposium on biocomputing</source>, volume <volume>8</volume>, pages <fpage>77</fpage>&#x2013;<lpage>88</lpage>.</mixed-citation></ref>
<ref id="c19"><mixed-citation publication-type="journal"><string-name><surname>Preli&#x0107;</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Bleuler</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Zimmermann</surname>, <given-names>P.</given-names></string-name>, <string-name><surname>Wille</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>B&#x00FC;hlmann</surname>, <given-names>P.</given-names></string-name>, <string-name><surname>Gruissem</surname>, <given-names>W.</given-names></string-name>, <string-name><surname>Hennig</surname>, <given-names>L.</given-names></string-name>, <string-name><surname>Thiele</surname>, <given-names>L.</given-names></string-name>, and <string-name><surname>Zitzler</surname>, <given-names>E.</given-names></string-name> (<year>2006</year>). <article-title>A systematic comparison and evaluation of biclustering methods for gene expression data</article-title>. <source>Bioinformatics</source>, <volume>22</volume>(<issue>9</issue>), <fpage>1122</fpage>&#x2013;<lpage>1129</lpage>.</mixed-citation></ref>
<ref id="c20"><mixed-citation publication-type="other"><string-name><surname>Sill</surname>, <given-names>M.</given-names></string-name> and <string-name><surname>Kaiser</surname>, <given-names>S.</given-names></string-name> (<year>2015</year>). <source>s4vd: Biclustering via Sparse Singular Value Decomposition Incorporating Stability Selection</source>. <article-title>R package version 1.1-1</article-title>.</mixed-citation></ref>
<ref id="c21"><mixed-citation publication-type="journal"><string-name><surname>Sill</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Kaiser</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Benner</surname>, <given-names>A.</given-names></string-name>, and <string-name><surname>Kopp-Schneider</surname>, <given-names>A.</given-names></string-name> (<year>2011</year>). <article-title>Robust biclustering by sparse singular value decomposition incorporating stability selection</article-title>. <source>Bioinformatics</source>, <volume>27</volume>(<issue>15</issue>), <fpage>2089</fpage>&#x2013;<lpage>2097</lpage>.</mixed-citation></ref>
<ref id="c22"><mixed-citation publication-type="journal"><string-name><surname>Wang</surname>, <given-names>Z.</given-names></string-name>, <string-name><surname>Li</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Robinson</surname>, <given-names>R. W.</given-names></string-name>, and <string-name><surname>Huang</surname>, <given-names>X.</given-names></string-name> (<year>2016</year>). <article-title>Unibic: Sequential row-based biclustering algorithm for analysis of gene expression data</article-title>. <source>Scientific reports</source>, <volume>6</volume>.</mixed-citation></ref>
<ref id="c23"><mixed-citation publication-type="other"><string-name><surname>Zhang</surname>, <given-names>J. D.</given-names></string-name> (<year>2015</year>). <source>rqubic: Qualitative biclustering algorithm for expression data analysis in R</source>. <article-title>R package version 1.22.0</article-title>.</mixed-citation></ref>
<ref id="c24"><mixed-citation publication-type="journal"><string-name><surname>Zhang</surname>, <given-names>Y.</given-names></string-name>, <string-name><surname>Xie</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Yang</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Fennell</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Zhang</surname>, <given-names>C.</given-names></string-name>, and <string-name><surname>Ma</surname>, <given-names>Q.</given-names></string-name> (<year>2017</year>). <article-title>QUBIC: a bioconductor package for qualitative biclustering analysis of gene co-expression data</article-title>. <source>Bioinformatics</source>, <volume>33</volume>(<issue>3</issue>), <fpage>450</fpage>&#x2013;<lpage>452</lpage>.</mixed-citation></ref>
</ref-list>
</back>
</article>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.2d1 20170631//EN" "JATS-archivearticle1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" article-type="article" dtd-version="1.2d1" specific-use="production" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">BIORXIV</journal-id>
<journal-title-group>
<journal-title>bioRxiv</journal-title>
<abbrev-journal-title abbrev-type="publisher">bioRxiv</abbrev-journal-title>
</journal-title-group>
<publisher>
<publisher-name>Cold Spring Harbor Laboratory</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1101/261768</article-id>
<article-version>1.1</article-version>
<article-categories>
<subj-group subj-group-type="author-type">
<subject>Regular Article</subject>
</subj-group>
<subj-group subj-group-type="heading">
<subject>New Results</subject>
</subj-group>
<subj-group subj-group-type="hwp-journal-coll">
<subject>Bioinformatics</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>Reconstructing complex lineage trees from scRNA-seq data using MERLoT</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-2446-016X</contrib-id>
<name>
<surname>Parra</surname>
<given-names>R. Gonzalo</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Papadopoulos</surname>
<given-names>Nikolaos</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="author-notes" rid="n1">&#x002A;</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Ahumada-Arranz</surname>
<given-names>Laura</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Kholtei</surname>
<given-names>Jakob El</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Treutlein</surname>
<given-names>Barbara</given-names>
</name>
<xref ref-type="aff" rid="a2">2</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Soeding</surname>
<given-names>Johannes</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
</contrib>
<aff id="a1"><label>1</label><institution>Quantitative and Computational Biology Group, Max Planck Institute for Biophysical Chemistry</institution>, Goettingen, <country>Germany</country></aff>
<aff id="a2"><label>2</label><institution>Department of Evolutionary Genetics, Max Planck Institute for Evolutionary Anthropology</institution>, Leipzig, <country>Germany</country></aff>
</contrib-group>
<author-notes>
<fn id="n1" fn-type="other"><label>&#x002A;</label><p>equal contribution</p></fn>
</author-notes>
<pub-date pub-type="epub"><year>2018</year></pub-date>
<elocation-id>261768</elocation-id>
<history>
<date date-type="received">
<day>07</day>
<month>2</month>
<year>2018</year>
</date>
<date date-type="rev-recd">
<day>07</day>
<month>2</month>
<year>2018</year>
</date>
<date date-type="accepted">
<day>08</day>
<month>2</month>
<year>2018</year>
</date>
</history>
<permissions>
<copyright-statement>&#x00A9; 2018, Posted by Cold Spring Harbor Laboratory</copyright-statement>
<copyright-year>2018</copyright-year>
<license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by/4.0/"><license-p>This pre-print is available under a Creative Commons License (Attribution 4.0 International), CC BY 4.0, as described at <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link></license-p></license>
</permissions>
<self-uri xlink:href="261768.pdf" content-type="pdf" xlink:role="full-text"/>
<abstract>
<p>Advances in single-cell transcriptomics techniques are revolutionising studies of cellular differentiation and heterogeneity. However, reconstruction of cellular lineage trees with more than a few cell fates has proved challenging. We present MERLoT (<ext-link ext-link-type="uri" xlink:href="https://github.com/soedinglab/merlot">https://github.com/soedinglab/merlot</ext-link>), a tool to reconstruct complex lineage trees from single-cell transcriptomics data. We demonstrate MERLoT&#x2019;s robustness, flexibility and capabilities on various real and simulated datasets.</p>
</abstract>
<counts>
<page-count count="17"/>
</counts>
</article-meta>
</front>
<body>
<p>Recent advances in single-cell sequencing techniques [<xref ref-type="bibr" rid="c1">1</xref>, <xref ref-type="bibr" rid="c2">2</xref>, <xref ref-type="bibr" rid="c3">3</xref>] permit to measure the expression profiles of tens of thousands of cells making ambitious projects like the single-cell transcriptional profiling of a whole organism [<xref ref-type="bibr" rid="c4">4</xref>] or the human cell atlas [<xref ref-type="bibr" rid="c5">5</xref>] possible. These efforts will better characterize the different cell types in multicellular organisms and their lineage relationships [<xref ref-type="bibr" rid="c6">6</xref>]. These advances also put within reach the question of how single cells develop into tissues, organs or entire organisms, one of the most fascinating and ambitious goals in biology that would also have wide-ranging consequences for the study of many human diseases.</p>
<p>A critical step is to develop methods that can reliably reconstruct cellular lineage trees that reflect the process by which mature cell types differentiate from progenitor cells. This is challenging due to the inherently high statistical noise levels in single cell transcriptomes, the high-dimensionality of gene expression space, and the strong non-linearities [<xref ref-type="bibr" rid="c6">6</xref>]. A cellular lineage tree does not only give us insight into the temporal order of branching and emergence of intermediary cell types. It can also substantially reduce the high noise levels by model-based averaging: Since many cells contribute to the idealized, smoothly varying expected gene expression rates that are imputed for every point on the tree, noise can be averaged out, and accuracy increases with the number of cells in the dataset.</p>
<p>A few methods exist for the reconstruction of lineage trees [<xref ref-type="bibr" rid="c7">7</xref>, <xref ref-type="bibr" rid="c8">8</xref>, <xref ref-type="bibr" rid="c9">9</xref>, <xref ref-type="bibr" rid="c10">10</xref>]. All but the first start by embedding the set of high-dimensional gene expression vectors into a low-dimensional space, by which much of the noise is filtered out: SLICER uses local linear embedding [<xref ref-type="bibr" rid="c8">8</xref>], Monocle2 uses Reverse Graph Embedding (DDRtree) [<xref ref-type="bibr" rid="c9">9</xref>] and Destiny [<xref ref-type="bibr" rid="c10">10</xref>] uses diffusion maps [<xref ref-type="bibr" rid="c11">11</xref>].</p>
<p>We present MERLoT, a tool that can robustly reconstruct complex lineage trees. We first demonstrate MERLoT&#x2019;s performance on real datasets using different low-dimensional embedding methods. Our results on simulated data show that MERLoT&#x2019;s lineage tree reconstructions retrieve 18-95&#x0025; more of the mutual information between predicted and known tree branch assignments, compared to the best next tool, Monocle2. Additionally, MERLoT can impute pseudotime courses [<xref ref-type="bibr" rid="c12">12</xref>] of gene expression levels along each trajectory on the lineage tree. This information can facilitate the analysis of gene regulatory networks controlling cell fate decisions and development.</p>
<p>Given a set of embedded coordinates for the cells, MERLoT reconstructs a lineage tree in three steps: (1) Calculation of a robust scaffold tree in the low-dimensional space combining the Dijkstra&#x2019;s shortest path [<xref ref-type="bibr" rid="c13">13</xref>] and Neighbor Joining [<xref ref-type="bibr" rid="c14">14</xref>] algorithms to define the location of endpoints, branchpoints and their connectivity; (2) smoothing and optimization of the scaffold tree using the Elastic Principal Tree (EPT) algorithm [<xref ref-type="bibr" rid="c15">15</xref>]; (3) embedding of the low-dimensional EPT into the high-dimensional gene expression space to impute pseudotime courses of gene expression profiles along the tree.</p>
<p>To build the scaffold tree, we select as first two endpoints the pair of cells that holds the maximum number of cells on their shortest path, and add those cells to the scaffold tree. We select as next endpoint the cell whose shortest path to any of the cells on the scaffold tree adds the most cells to it (Methods and <xref rid="figS1" ref-type="fig">Fig. S1</xref>). This process is iterated until new branches do not contain enough cells (auto mode, default threshold <inline-formula><alternatives><inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="261768_inline1.gif"/></alternatives></inline-formula>, with <italic>N</italic> number of cells) or until a user-specified number of endpoints has been found (fixed mode). Subsequently, we apply the Neighbour Joining criterion to find the branchpoints and their connectivity with the endpoints (Methods and <xref rid="figS2" ref-type="fig">Fig. S2</xref>). When tested on many different datasets and embeddings, MERLoT&#x2019;s scaffold tree reconstructions proved to be very robust (<xref rid="fig1" ref-type="fig">Fig. 1A, B and C</xref>, <xref rid="figS4" ref-type="fig">Fig. S4</xref>).</p>
<fig id="fig1" position="float" orientation="portrait" fig-type="figure">
<label>Figure 1:</label>
<caption>
<title>MERLoT&#x2019;s scaffold tree reconstructions</title>
<p>in combination with <bold>(a)</bold> DDRTree coordinates for analyzing the data from Paul et al. [<xref ref-type="bibr" rid="c16">16</xref>]; <bold>(b)</bold> diffusion maps coordinates for analyzing the data from Guo et al. [<xref ref-type="bibr" rid="c17">17</xref>] (this data corresponds to 3D data with coordinates 2 and 3 being rotated around coordinate 1 in order to produce a 2D representation of the data);<bold>(c)</bold> STEMNET coordinates for analyzing the data from Velten et al. [<xref ref-type="bibr" rid="c18">18</xref>]. Cells are colored according to cell type annotations provided by the authors of each dataset. <bold>(d)</bold>, <bold>(e)</bold> and <bold>(f)</bold> EPT reconstructions using the scaffold trees above as an initialization point. Cells are colored according to MERLoT&#x2019;s branch assignments.</p></caption>
<graphic xlink:href="261768_fig1.tif"/>
</fig>
<fig id="fig2" position="float" orientation="portrait" fig-type="figure">
<label>Figure 2</label>
<caption>
<title>Pseudotime assignment and imputation of gene expression profiles</title>
<p>(a) Pseudotime assignment in color code for cells from Figs <xref rid="fig1" ref-type="fig">1B</xref> and <xref rid="fig1" ref-type="fig">1E</xref>, taking the zygote state as t0. (b) Color-coded matrix of gene expression values for tree pseudo cells (rows) times genes (columns) before (top) and after (bottom) the gene expression space interpolation using the EPT. Pseudo cells are ordered according to their pseudotime and genes were hierarchically clustered. Numbers indicate specific genes shown in panel C. The color code in the bar on the left side of the heatmaps refers to pseudo cells branch assignments. <bold>(c)</bold> Gene expression profiles over pseudotime for 4 genes that are differentially expressed between the EPI and PE lineages. Semi-trasparent circles represent the expression values of individual cells and solid lines are the interpolations calculated by the EPT algorithm. Colors as in <xref rid="fig1" ref-type="fig">Fig. 1E</xref>.</p></caption>
<graphic xlink:href="261768_fig2.tif"/>
</fig>
<p>Next, we use the scaffold tree to initialize an Elastic Principal Tree (EPT) [<xref ref-type="bibr" rid="c15">15</xref>] with it. The EPT algorithm fits a smooth tree to the cells, represented by connected, discretized support nodes. It minimizes the sum of squared distances of each cell to its nearest tree support node plus two terms enforcing smooth and unkinked trees. These terms allow us to interpolate through empty or low-density regions (Methods) and to aggregate in each support node information from many cells in its near and farther neigbourhood.</p>
<p>We applied MERLoT on three real datasets (details in Methods) (1) scRNA-seq data (with Unique Molecular Identifiers, UMIs) for myeloid progenitor differentiation (2730 cells, 3460 genes) [<xref ref-type="bibr" rid="c16">16</xref>], embedded in DDRTree coordinates (<xref rid="fig1" ref-type="fig">Fig. 1A,D</xref>), (2) single-cell qPCR data for zygote to blastocyst differentiation (428 cells, 48 genes) [<xref ref-type="bibr" rid="c17">17</xref>], embedded in a diffusion map (<xref rid="fig1" ref-type="fig">Fig. 1B,E</xref>), and (3) scRNA-seq data (index omics) for Haematopoietic Stem and Progenitor Cells (HSPCs) (1034 cells, 469 genes), using STEMNET coordinates [<xref ref-type="bibr" rid="c18">18</xref>]. The number of endpoints of the lineage tree, found by MERLoT in auto mode, are consistent with what has been reported in the original articles.</p>
<p>After the lineage tree reconstruction, each node on it will be assigned a pseudotime value equal to the number of edges that separate it from the initial point, <italic>t</italic><sub>0</sub>. Subsequently, each cell will be assigned the pseudotime value of its closest tree node. In <xref rid="fig2" ref-type="fig">Fig. 2A</xref>, pseudotime values for the zygote to blastocyts dataset are shown. Because scRNA-seq data contain much technical and biological noise [<xref ref-type="bibr" rid="c6">6</xref>], cells with similar pseudotime values may have large variations in gene expression. MERLoT imputes denoised gene expression profiles by embedding the reconstructed lineage tree into the original gene expression space. Each tree support node in the low-dimensional space is mapped one-to-one to a tree support node in the gene expression space: We first assign each cell in the low-dimensional space to its nearest support node. Then, we initialize the corresponding support node in the gene expression space to the average gene expression level of all cells assigned to it (<xref rid="fig2" ref-type="fig">Fig. 2B</xref> top), and we run the EPT algorithm again (Methods). In this way, we impute the gene expression values of all the support nodes. These can be considered as pseudo cells representing idealized cell differentiation paths (<xref rid="fig2" ref-type="fig">Fig. 2B</xref> bottom, <xref rid="fig2" ref-type="fig">Fig. 2C</xref>). This model-based imputation results in denoised pseudotime courses of gene expression for the entire tree. As an example, <xref rid="fig2" ref-type="fig">Fig. 2C</xref> shows the expression profiles of four genes that are differentially expressed between EPI (red) and PE (blue) cell lineages (Methods). Note how the expression values of the pseudo cells (solid lines) interpolate and smooth the noisy single-cell expression values (circles).</p>
<p>We quantitatively estimated the performances of SLICER [<xref ref-type="bibr" rid="c8">8</xref>] and Monocle2 [<xref ref-type="bibr" rid="c9">9</xref>] to infer lineage trees from scRNA-seq data. Due to the lack of a gold standard set of real or simulated datasets on which to assess these tools, we developed PROSSTT (Methods, [<xref ref-type="bibr" rid="c19">19</xref>]), a software that can simulate scRNA-seq expression matrices with complex lineage tree structures. PROSSTT provides pseudotime and branch assignment labels for the cells, and branch connectivity information. Examples of diffusion maps for PROSSTT simulations and their lineage tree reconstructions performed by MERLoT are shown in <xref rid="fig3" ref-type="fig">Fig. 3A</xref>.</p>
<fig id="fig3" position="float" orientation="portrait" fig-type="figure">
<label>Figure 3:</label>
<caption>
<title>Simulated datasets and benchmarking</title>
<p><bold>(a)</bold> Examples for diffusion map embeddings for simulations with one, two and three bifurcations. Cell colors represent PROSST labeled branch assigments. The double and triple bifurcation simulations correspond to 3D data. Double bifurcation: Diffusion coordinates 1, 2 and 3 were used. Coordinates 1 and 2 were rotated around coordinate 3. Triple bifurcation: Diffusion coordinates 1, 3 and 4 were used. Coordinates 3 and 4 were rotated around coordinate 1. <bold>(b)</bold> Branch assignment comparison using Monocle2, SLICER and 2 &#x00D7; 2 flavours of MERLoT combining Diffusion maps and DDRTree coordinates with the fixed and auto modes. <bold>(c)</bold> Pseudotime assignment comparison using Monocle2, SLICER, Destiny and the same four MERLoT versions as in panel B.</p></caption>
<graphic xlink:href="261768_fig3.tif"/>
</fig>
<p>We generated a set of 1000 simulations divided into subsets of 100, each containing trees with 3 to 12 different cell fates and 1 to 10 bifurcations (Methods). We reconstructed the underlying lineage trees and assigned cells to branches using SLICER, Monocle2 and four flavours of MERLoT with diffusion maps or DDRTree coordinates, with and without providing the correct number of cell fates (fixed and auto modes).</p>
<p>For branch assignment (<xref rid="fig3" ref-type="fig">Fig. 3B</xref>), we assessed the agreement between predicted and labeled assignments in the simulations, using the Normalized Mutual Information (NMI) (<xref rid="fig3" ref-type="fig">Fig. 3B</xref>) and other scoring measures (Methods and <xref rid="figS4" ref-type="fig">Fig. S4</xref>). NMI rewards grouping cells in the same branch when they belong together and penalizes splitting them up. MERLoT using fixed mode, combined with diffusion maps, captures almost twice as much NMI as Monocle2, the second best method. <xref rid="figS5" ref-type="fig">Supplementary Fig. S5</xref> shows branch assignments in color on the simulated trees, giving an intuitive sense of the large differences in quality between the MERLoT&#x2019;s branch assignments and the ones of Monocle and SLICER. NMI increases for more complex topologies since it gets harder to missassign cells between branches that are far apart in the tree. MERLoT&#x2019;s performance in auto mode decreases, because its default threshold to add branches is too strict and hence several branches are missed as the topology complexity increases. Monocle2 has a stable performance for all topology complexities, comparable to MERLoT when using DDRTree coordinates. SLICER shows a low performance mainly because the recursive branch assignment function stalls for many datasets, especially for complex topologies.</p>
<p>In a multi-branched lineage tree, multiple trajectories exist between progenitors and differentiated cell fates. Pseudotime imprints only a partial ordering which can only be assessed within each trajectory and pseudotimes values are not comparable between non-consecutive tree branches. We test pseudotime orderings on the longest path between cells with the lowest and highest pseudotime value according to the topology assigned by PROSSTT. We use the Goodman-Kruskal (<xref rid="fig3" ref-type="fig">Fig. 3C1</xref>) and other indexes (see Methods and <xref rid="figS6" ref-type="fig">Fig. S6</xref>) as a measure of concordance between the true and predicted orderings along the longest trajectory. Although predictions for simple topologies show marked differences for the different methods, as the topology complexity increases, they all converge to similar performance values, except for Destiny&#x2019;s Diffusion Pseudotime (DPT), which becomes better beyond eight bifurcations.</p>
<p>MERLoT outperforms other lineage tree reconstruction methods leading to an NMI increase of up to 95&#x0025; mainly because of the high performance of the Scaffold Tree (<xref rid="figS4" ref-type="fig">Fig. S4</xref>), which performs almost as well as the full method. In terms of pseudotime assignments MERLoT is only outperformed by Destiny&#x2019;s DPT assignments for datasets with more than 6 bifurcations. However, MERLoT can be easily combined with DPT pseudotime orderings.</p>
<p>The single-cell RNA sequencing field is growing rapidly. Tools like MERLoT will be of great importance to study these challenging datasets and gain insights into the gene regulatory networks governing cellular differentiation and development under healthy and disease conditions. By its model-based averaging, the limitations set by the high noise-level in singlecell transcriptomes can be overcome, opening up the way for quantitative modeling of the gene regulatory networks underlying complex developmental processes.</p>
<sec id="s1">
<title>Methods</title>
<p>Methods, including statements of data availability and any associated accession codes and references, are available in the <bold>online version of the paper</bold>.</p>
</sec>
</body>
<back>
<ref-list>
<title>References</title>
<ref id="c1"><label>1.</label><mixed-citation publication-type="journal"><string-name><surname>Klein</surname>, <given-names>A. M.</given-names></string-name> <etal>et al.</etal><article-title>Droplet barcoding for single-cell transcriptomics applied to embryonic stem cells</article-title>. <source>Cell</source> <volume>161</volume>, <fpage>1187</fpage>&#x2013;<lpage>1201</lpage> (<year>2015</year>).</mixed-citation></ref>
<ref id="c2"><label>2.</label><mixed-citation publication-type="journal"><string-name><surname>Macosko</surname>, <given-names>E. Z.</given-names></string-name> <etal>et al.</etal><article-title>Highly parallel genome-wide expression profiling of individual cells using nanoliter droplets</article-title>. <source>Cell</source> <volume>161</volume>, <fpage>1202</fpage>&#x2013;<lpage>1214</lpage> (<year>2015</year>).</mixed-citation></ref>
<ref id="c3"><label>3.</label><mixed-citation publication-type="journal"><string-name><surname>Trapnell</surname>, <given-names>C.</given-names></string-name> <article-title>Defining cell types and states with single-cell genomics</article-title>. <source>Genome Res</source> <volume>25</volume>, <fpage>1491</fpage>&#x2013;<lpage>1498</lpage> (<year>2015</year>).</mixed-citation></ref>
<ref id="c4"><label>4.</label><mixed-citation publication-type="journal"><string-name><surname>Cao</surname>, <given-names>J.</given-names></string-name> <etal>et al.</etal><article-title>Comprehensive single-cell transcriptional profiling of a multicellular organism</article-title>. <source>Science</source> <volume>357</volume>, <fpage>661</fpage>&#x2013;<lpage>667</lpage> (<year>2017</year>).</mixed-citation></ref>
<ref id="c5"><label>5.</label><mixed-citation publication-type="journal"><string-name><surname>Regev</surname>, <given-names>A.</given-names></string-name> <etal>et al.</etal><article-title>The human cell atlas</article-title>. <source>bioRxiv <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1101/121202">https://doi.org/10.1101/121202</ext-link></source> (<year>2017</year>).</mixed-citation></ref>
<ref id="c6"><label>6.</label><mixed-citation publication-type="journal"><string-name><surname>Wagner</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Regev</surname>, <given-names>A.</given-names></string-name> &#x0026; <string-name><surname>Yosef</surname>, <given-names>N.</given-names></string-name> <article-title>Revealing the vectors of cellular identity with single-cell genomics</article-title>. <source>Nat Biotechnol</source> <volume>34</volume>, <fpage>1145</fpage>&#x2013;<lpage>1160</lpage> (<year>2016</year>).</mixed-citation></ref>
<ref id="c7"><label>7.</label><mixed-citation publication-type="journal"><string-name><surname>Herring</surname>, <given-names>C. A.</given-names></string-name> <etal>et al.</etal><article-title>Unsupervised trajectory analysis of single-cell rna-seq and imaging data reveals alternative tuft cell origins in the gut</article-title>. <source>Cell systems</source>(<year>2017</year>).</mixed-citation></ref>
<ref id="c8"><label>8.</label><mixed-citation publication-type="journal"><string-name><surname>Welch</surname>, <given-names>J. D.</given-names></string-name>, <string-name><surname>Hartemink</surname>, <given-names>A. J.</given-names></string-name> &#x0026; <string-name><surname>Prins</surname>, <given-names>J. F.</given-names></string-name> <article-title>Slicer: inferring branched, nonlinear cellular trajectories from single cell rna-seq data</article-title>. <source>Genome Biol</source> <volume>17</volume>, <fpage>106</fpage> (<year>2016</year>).</mixed-citation></ref>
<ref id="c9"><label>9.</label><mixed-citation publication-type="journal"><string-name><surname>Qiu</surname>, <given-names>X.</given-names></string-name> <etal>et al.</etal><article-title>Reversed graph embedding resolves complex single-cell trajectories</article-title>. <source>Nat Methods</source> <volume>14</volume>, <fpage>979</fpage>&#x2013;<lpage>982</lpage> (<year>2017</year>).</mixed-citation></ref>
<ref id="c10"><label>10.</label><mixed-citation publication-type="journal"><string-name><surname>Angerer</surname>, <given-names>P.</given-names></string-name> <etal>et al.</etal><article-title>destiny: diffusion maps for large-scale single-cell data in r</article-title>. <source>Bioinformatics</source> <volume>32</volume>, <fpage>1241</fpage>&#x2013;<lpage>1243</lpage> (<year>2016</year>).</mixed-citation></ref>
<ref id="c11"><label>11.</label><mixed-citation publication-type="journal"><string-name><surname>Coifman</surname>, <given-names>R. R.</given-names></string-name> <etal>et al.</etal><article-title>Geometric diffusions as a tool for harmonic analysis and structure definition of data: Diffusion maps</article-title>. <source>Proc Natl Acad Sci U S A</source> <volume>102</volume>, <fpage>7426</fpage>&#x2013;<lpage>7431</lpage> (<year>2005</year>).</mixed-citation></ref>
<ref id="c12"><label>12.</label><mixed-citation publication-type="journal"><string-name><surname>Trapnell</surname>, <given-names>C.</given-names></string-name> <etal>et al.</etal><article-title>The dynamics and regulators of cell fate decisions are revealed by pseudotemporal ordering of single cells</article-title>. <source>Nat Biotechnol</source> <volume>32</volume>, <fpage>381</fpage> (<year>2014</year>).</mixed-citation></ref>
<ref id="c13"><label>13.</label><mixed-citation publication-type="journal"><string-name><surname>Dijkstra</surname>, <given-names>E. W.</given-names></string-name> <article-title>A note on two problems in connexion with graphs</article-title>. <source>Numerische mathematik</source> <volume>1</volume>, <fpage>269</fpage>&#x2013;<lpage>271</lpage> (<year>1959</year>).</mixed-citation></ref>
<ref id="c14"><label>14.</label><mixed-citation publication-type="journal"><string-name><surname>Saitou</surname>, <given-names>N.</given-names></string-name> &#x0026; <string-name><surname>Nei</surname>, <given-names>M.</given-names></string-name> <article-title>The neighbor-joining method: a new method for reconstructing phylogenetic trees</article-title>. <source>Mol Biol and Evol</source> <volume>4</volume>, <fpage>406</fpage>&#x2013;<lpage>425</lpage> (<year>1987</year>).</mixed-citation></ref>
<ref id="c15"><label>15.</label><mixed-citation publication-type="journal"><string-name><surname>Gorban</surname>, <given-names>A.</given-names></string-name> &#x0026; <string-name><surname>Zinovyev</surname>, <given-names>A.</given-names></string-name> <article-title>Elastic principal graphs and manifolds and their practical applications</article-title>. <source>Computing</source> <volume>75</volume>, <fpage>359</fpage>&#x2013;<lpage>379</lpage> (<year>2005</year>).</mixed-citation></ref>
<ref id="c16"><label>16.</label><mixed-citation publication-type="journal"><string-name><surname>Paul</surname>, <given-names>F.</given-names></string-name> <etal>et al.</etal><article-title>Transcriptional heterogeneity and lineage commitment in myeloid progenitors</article-title>. <source>Cell</source> <volume>163</volume>, <fpage>1663</fpage>&#x2013;<lpage>1677</lpage> (<year>2015</year>).</mixed-citation></ref>
<ref id="c17"><label>17.</label><mixed-citation publication-type="journal"><string-name><surname>Guo</surname>, <given-names>G.</given-names></string-name> <etal>et al.</etal><article-title>Resolution of cell fate decisions revealed by single-cell gene expression analysis from zygote to blastocyst</article-title>. <source>Dev Cell</source> <volume>18</volume>, <fpage>675</fpage>&#x2013;<lpage>685</lpage> (<year>2010</year>).</mixed-citation></ref>
<ref id="c18"><label>18.</label><mixed-citation publication-type="journal"><string-name><surname>Velten</surname>, <given-names>L.</given-names></string-name> <etal>et al.</etal><article-title>Human haematopoietic stem cell lineage commitment is a continuous process</article-title>. <source>Nat Cell Biol</source> <volume>19</volume>, <fpage>271</fpage> (<year>2017</year>).</mixed-citation></ref>
<ref id="c19"><label>19.</label><mixed-citation publication-type="journal"><string-name><surname>Papadopoulos</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Parra</surname>, <given-names>R. G.</given-names></string-name> &#x0026; <string-name><surname>Soeding</surname>, <given-names>J.</given-names></string-name> <article-title>Prosstt: probabilistic simulation of single-cell rna-seq data for complex differentiation processes</article-title>. <source>bioRxiv</source>(<year>2018</year>) <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1101/256941">https://doi.org/10.1101/256941</ext-link>.</mixed-citation></ref>
</ref-list>
<sec id="s2">
<title>Online Methods</title>
<sec id="s2a">
<label>1</label>
<title>Lineage Tree Reconstruction by MERLoT</title>
<p>Given an expression matrix with <italic>N</italic> cells as rows and <italic>G</italic> genes as columns, a manifold embedding can be performed using techiques like Diffusion Maps or DDRTree embedding. Subsequently, informative coordinates can be kept in order to reduce dimensionality. Once cells are embedded into the low dimensional space, MERLoT can perform a lineage tree reconstruction following three steps which will be detailed in the followingsections: (1) Calculating a Scaffold Tree with the location of endpoints, branchpoints and their connectivity. (2) Smoothing of the Scaffold Tree by using an Elastic Principal Tree (EPT) in the low dimensional manifold.(3) Embedding the EPT into the high-dimensional gene expression space and assigning pseudotime values to the cells.</p>
<sec id="s2a1">
<title>Scaffold Tree Reconstruction</title>
<sec id="s2a1a">
<title>Matrix of shortest paths between cells</title>
<p>We used the Dijkstra&#x2019;s algorithm as implemented in the csgraph module from the scipy python library to calculate the shortest paths between all pairs of cells <italic>i</italic> and <italic>j</italic> based on their squared Euclidean distance <inline-formula><alternatives><inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="261768_inline2.gif"/></alternatives></inline-formula>. We use <inline-formula><alternatives><inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="261768_inline3.gif"/></alternatives></inline-formula> instead of <italic>d</italic><sub><italic>ij</italic></sub> given that in a fully connected graph the shortest path between two nodes, based on <italic>d</italic><sub><italic>ij</italic></sub>, corresponds to the direct path between them. The csgraph shortest path function returns the lenght D<sub>ij</sub> of shortest path that connects cells <italic>i</italic> and <italic>j</italic>. We extended the function to also return the number of cells <italic>S</italic><sub><italic>ij</italic></sub> on the shortest path connecting cells <italic>i</italic> and <italic>j</italic>. The modified code for csgraph is available at github.com/soedinglab/csgraph mod.</p>
</sec>
<sec id="s2a1b">
<title>Endpoints search</title>
<p>MERLoT does not require users to define a starting point in order to reconstruct the tree topology. The first two endpoints in the tree correspond to the pair of cells <italic>k, l</italic> that maximizes the number of nodes S<sub>kl</sub> on their shortest path (<xref rid="figS1" ref-type="fig">Fig. S1A</xref>): (k, l) &#x003D; arg max{S<sub>kl</sub>: 1 &#x2264; k &#x2264; l &#x2264; N}. In case of ties, the pair of cells with the longest shortest path distance will be selected.</p>
<p>The next endpoint to be selected will correspond to the cell <italic>n</italic> that maximizes <italic>s&#x03B5;</italic>(<italic>n</italic>), the number of cells being added to the scaffold tree structure. To compute <italic>s&#x03B5;</italic>(<italic>n</italic>) we note that the new endpoint <italic>n</italic> must branch off from an internal node of the tree whose next-neighbour nodes must lie on the path of two already selected endpoints <italic>k</italic> and <italic>l</italic>. Therefore, the increase in number of cells is 0.5 times the minimum of the cells between <italic>k</italic> and <italic>l via n</italic> minus the cells between <italic>k</italic> and <italic>l</italic>, minimised over all pairs of endpoints (<italic>k, l</italic>) in the set of already selected endpoints <italic>&#x03B5;</italic>.
<disp-formula id="eqn1">
<alternatives><graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="261768_eqn1.gif"/></alternatives>
</disp-formula></p>
</sec>
<sec id="s2a1c">
<title>Stop criterion for endpoints search</title>
<p>In auto mode every time a new endpoint is selected we evaluate if max <inline-formula><alternatives><inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="261768_inline4.gif"/></alternatives></inline-formula> holds true. Otherwise, we calculate the branchpoints and tree connectivity for the endpoints in <italic>&#x03B5;</italic>, including <italic>n</italic>, using the methodology explained in the next subsection. After this, all cells are mapped to their closest branch. If the branch added by the selected <italic>n</italic> endpoint contains more than MinBranchCells <inline-formula><alternatives><inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="261768_inline5.gif"/></alternatives></inline-formula> cells mapped to it, the branch is kept in the tree scaffold structure and the endpoints search is repeated. Otherwise, the endpoint search terminates and <italic>n</italic> is discarded as endpoint. The MinBranchCells threshold can be modified by the user. Alternatively, instead of using a stop criterium, users can set the number of endpoints that are aimed to be found (fixed mode) regardless of the branch lengths.</p>
</sec>
</sec>
<sec id="s2a2">
<title>Branchpoints search and tree connectivity definition</title>
<p>Once endpoints are found, we apply the in combination with a heuristic criterion to find the cells that best represent the branchpoints in the tree structure. By doing this, we also detect the tree connectivity among endpoints and branchpoints Given a set of endpoint and branchpoint nodes we iterate the following steps: (1) Use the Neighbour Joining (NJ) criterion [<xref ref-type="bibr" rid="sc1">1</xref>] to select the pair of (<italic>k, l</italic>) nodes that will be joined <italic>via</italic> a branchpoint next. 2) Find the cell <italic>m</italic> that bestrepresents the branchpoint between <italic>k</italic> and <italic>l</italic> and add the <italic>l &#x2212; m</italic> and <italic>m &#x2212; k</italic> edges to the tree (<xref rid="figS2" ref-type="fig">Fig. S2</xref>).</p>
<p>Let <italic>V</italic> be the set of yet unprocessed endpoint and branchpoint nodes of the tree. We initialise <italic>V</italic> &#x2190; &#x03B5; with the endpoint set &#x03B5; determined in the previous subsection.</p>
<p>(1) Given the matrix D<sub>kl</sub> of shortest path lengths between nodes in V (section 1.1), the NJ criterion allows us to pick two nodes <italic>k</italic>, <italic>l</italic> in <italic>V</italic> that are guaranteed to be next neighbours and therefore can be linked via a single branchpoint. The nodes to be joined are chosen such that (<italic>k, l</italic>) &#x003D; arg min <italic><inline-formula><alternatives><inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="261768_inline6.gif"/></alternatives></inline-formula></italic> where <italic><inline-formula><alternatives><inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="261768_inline7.gif"/></alternatives></inline-formula></italic> is the neighbour-joining distance,
<disp-formula id="eqn2">
<alternatives><graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="261768_eqn2.gif"/></alternatives>
</disp-formula>
(2) We determine the branchpoint cell <italic>m</italic> as the one that minimizes the sum of distances to nodes <italic>k</italic>, <italic>l</italic> and the mean distances to all other nodes included in <italic>V</italic>,
<disp-formula id="eqn3">
<alternatives><graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="261768_eqn3.gif"/></alternatives>
</disp-formula></p>
<p>Next, <italic>k</italic> and <italic>l</italic> are removed from <italic>V</italic> and the new branchpoint <italic>m</italic> is added to <italic>V</italic>, <italic>V &#x2190; V\{k, l} &#x222A; {m}.</italic>. Also, the edges l &#x2212; m and m &#x2212; k are added to the tree (<xref rid="figS2" ref-type="fig">Fig. S2</xref>).</p>
<p>We iterate (1) and (2) until &#x2502;<italic>V</italic> &#x2502; &#x003D; 2, which means no further branchpoints exist. After termination, we have determined the tree topology with its &#x2502;&#x03B5; &#x2502; endpoints and &#x2502;&#x03B5; &#x2502; &#x2212; 2 branchpoints, each represented by a cell. The same cell can be detected more than once as a branchpoint and hence bifurcations with higher orders than binary ones are possible.</p>
</sec>
<sec id="s2a3">
<title>Elastic Principal Tree in the Low Dimensional Manifold</title>
<p>To produce smoother, more homogenously interpolated lineage trees MERLoT uses the Elastic Principal Trees (EPT) algorithm [<xref ref-type="bibr" rid="sc2">2</xref>] as implemented in the rpgraph module (<ext-link ext-link-type="uri" xlink:href="https://github.com/Albluca/rpgraph">https://github.com/Albluca/rpgraph</ext-link>). The EPT algorithm is used to approximate the distribution of cells in a given space with a tree structure composed of <italic>k</italic> nodes. Direct application of the EPT algorithm is unstable as it often returns trees that are manifastly far from the global optimum, e.g. wrong number of endpoints or grossly missplaced branchpoints). We initialize the EPT with the coordinates of a set of <italic>l</italic> nodes consisting of the endpoints and branchpoints in the scaffold tree and their connectivity. Further nodes are then added by the EPT algorithm by iterative bisection of edges until it reaches the specified number of <italic>k</italic> support nodes. This procedure cannot modify the number of endpoints and branchpoints specified at the initialization step.</p>
<p>In every iteration an energy potential defined as follows is minimized:
<disp-formula id="eqn4">
<alternatives><graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="261768_eqn4.gif"/></alternatives>
</disp-formula></p>
<p>MSE is sum of squared distances of cells to their closest tree support nodes. <italic>U<sub>E</sub></italic> and <italic>U<sub>R</sub></italic> are two regularization terms that ensure that we learn trees with regularly spaced points and with edges without kinks, respectively.</p>
<p>We performed a grid search around the EPT default values in order to optimize <italic>&#x03BC;</italic> and <italic>&#x03BB;</italic> and visually examined the reconstructed EPTs on the datasets shown in <xref rid="fig1" ref-type="fig">Fig. 1</xref>. Using <italic>k</italic> &#x003D; 100, we obtained <italic>&#x03BC;</italic>0 &#x003D; 0.00625 and <italic>&#x03BB;</italic><sub>0</sub> &#x003D; 2.03 <italic>e &#x2212;</italic>09. If the number of nodes used for calculating the EPT is changed, <italic>&#x03BC;</italic> and <italic>&#x03BB;</italic> are adjusted according to <italic>&#x03BC;</italic> &#x003D; (<italic>k &#x2212;</italic>1)<italic>&#x03BC;</italic><sub>0</sub> and <italic>&#x03BB;</italic> &#x003D; (<italic>k &#x2212;</italic>2)<sup>3</sup><italic>&#x03BB;</italic><sub>0</sub>. All reconstructions in our benchmark were performed with the standard function using <italic>k</italic> &#x003D; 100. However, for some particular topologies <italic>&#x03BC;</italic> and <italic>&#x03BB;</italic> might need to be tuned in order to produce optimal results, in particular if <italic>k</italic> is increased a lot. Alternatively, MERLoT can bisect the edges in a given EPT, by additional nodes producing a new EPT with almost 2 <italic>k</italic> support nodes. Note that these are special cases.</p>
</sec>
<sec id="s2a4">
<title>Elastic Principal Tree Embedding into the Gene Expression Space</title>
<p>First, cells are assigned to their closest support node. Next, every node is assigned to the average expression profile of all cells assigned to it. If a given node is not the closest node to any cell in the set, a null vector is assigned to it. In this way, we translate the positions of cells in the low-dimensional manifold space to approximate positions in the full gene expression space by constructing <italic>k</italic> pseudocells with averaged values for each gene coordinate.</p>
<p>Finally, the EPT algorithm is initialized with the average expression profiles and a list of edges representing their connectivity in the low dimensional EPT to calculate an EPT in the high-dimensional gene expression space.</p>
<sec id="s2a4a">
<title>Pseudotime Assignment</title>
<p>Pseudotime is a quantitative measure of the progress of a cell through a biological process [<xref ref-type="bibr" rid="sc3">3</xref>]. Given the reconstruction of a lineage tree by MERLoT, cells can be assigned pseudotime values as a function of the number of edges along the structure that separate them from the initial point of the process. MERLoT automatically sets the initial pseudotime, <italic>t</italic> <sub>0</sub>, to one of the first two detected endpoints. Users can also set <italic>t</italic><sub>0</sub> to any endpoint, branchpoint or to any individual cell. In the latter case, the closest node to that cell will be assigned as <italic>t</italic><sub>0</sub> and the pseudotime values for the other nodes will be assigned as before. After a pseudotime value is assigned to each support node, cells will take the pseudotime value from their closest node in the tree. MERLoT can calculate pseudotime in both the low-dimensional manifold space and in the high-dimensional gene expression space.</p>
</sec>
</sec>
</sec>
<sec id="s2b">
<label>2</label>
<title>Benchmark on Synthetic Datasets</title>
<sec id="s2b1">
<label>2.1</label>
<title>Simulating count data of branching processes with PROSSTT</title>
<p>To evaluate method performance on reconstructing lineage tree structures we used our tool PROSSTT [<xref ref-type="bibr" rid="sc4">4</xref>] to simulate 10 &#x00D7;100 scRNA-seq datasets with topologies with between 1 and 10 branchpoints (3-12 endpoints).</p>
<p>PROSSTT generates a simulated scRNA-seq dataset in four steps: (1) it generates a tree (number and length of branches, connectivity), (2) it simulates average gene expression levels <italic>&#x03BC;g</italic>(<italic>t, b</italic>) (pseudotime <italic>t</italic>, branch <italic>b</italic>), (3) it samples points in the tree (<italic>t</italic>, <italic>b</italic>) (4) it retrieves &#x03BC;<sub>g</sub> (<italic>t, b</italic>) for each sampled point and draws UMI counts from a negative binomial distribution</p>
<sec id="s2b1a">
<label>1.</label>
<title>Generate tree</title>
<p>We sample the number of genes from a uniform distribution between 100 and 1000. These are typical numbers left after filtering out uninformative genes.</p>
<p>Each tree segment in every simulation had a pseudotime length of 50, corresponding to 50 cells on the branch (in homogeneous sampling model). This length allows the expression programs to diffuse enough to be distinct from each other. Starting at 2 bifurcations, alternative segment connectivity possibilities become available (<xref rid="figS3" ref-type="fig">Fig. S3</xref>). We chose the lineage tree topology randomly for every simulation.</p>
</sec>
<sec id="s2b1b">
<label>2.</label>
<title>Simulate average gene expression along tree</title>
<p>PROSSTT models relative gene expression as a linear mixture of a small number of expression programs. For each tree segment, we simulate the time evolution of expression programs as a random walk with momentum term. Each simulation uses <italic>K</italic> &#x003D; 10 expression programs. We use the weighted sum of only two randomly chosen programs per gene, with weights drawn from a beta distribution (parameters <italic>a</italic> &#x003D; 2 <italic>, b</italic> &#x003D; 2). Program indices are picked with replacement, so some genes are only influenced by one program. A scaling factor (library size) was sampled for each cell and multiplied to the average gene expression values. We used a log-normal distribution with <italic>&#x03BC;</italic> &#x003D; 0 and <italic>&#x03C3;</italic> &#x003D; 0.8.</p>
</sec>
<sec id="s2b1c">
<label>3.</label>
<title>Sample cells from tree</title>
<p>PROSSTT can sample cells in the tree according to a given density function. Here we simply drew one cell per pseudotime unit for all branches.</p>
</sec>
<sec id="s2b1d">
<label>4.</label>
<title>Simulate UMI counts</title>
<p>We simulate unique molecular identifier (UMI) counts using a negative binomial distribution. Following [<xref ref-type="bibr" rid="sc5">5</xref>] and [<xref ref-type="bibr" rid="sc6">6</xref>], we make the variance <italic><inline-formula><alternatives><inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="261768_inline8.gif"/></alternatives></inline-formula></italic> depend on the expected expression &#x03BC;<sub>g</sub> as <inline-formula><alternatives><inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="261768_inline9.gif"/></alternatives></inline-formula> The <italic>&#x03B1;</italic><sub>g</sub> and <italic>&#x03B2;</italic><sub>g</sub> values were sampled from log-normal distributions with <inline-formula><alternatives><inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="261768_inline10.gif"/></alternatives></inline-formula> and <inline-formula><alternatives><inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="261768_inline11.gif"/></alternatives></inline-formula> respectively. These values are typical for single-cell RNA sequencing UMI counts. For more information about default parameters choices and the algorithm, please refer to [<xref ref-type="bibr" rid="sc4">4</xref>].</p>
</sec>
</sec>
<sec id="s2b2">
<label>2.2</label>
<title>Assessing Methods Performance</title>
<p>Tree reconstruction tools need to succeed at two intertwined tasks: to arrange all cells according to their internal developmental time, while also detecting and separating different branches of the tree. Ideally, one would evaluate algorithm performance on both tasks at once. However, we were not able to find such a measure and so evaluate branch assignment and pseudotime prediction separately.</p>
<p><bold>Branch assignment</bold> We treated branch assignment evaluation as a clustering problem. We can consider all cells mapped to a given branch of a tree as a cluster and compare the set of labels produced by PROSSTT with those that are predicted by each algorithm.</p>
<p>We used four measures to assess method performance: the F1 measure, the Matthews Correlation Coefficient, the Jaccard Index and Adjusted Mutual Information (called Normalized Mutual Information, or NMI, here) (<xref rid="figS4" ref-type="fig">Fig. S4</xref>), which all produce similar results. In our opinion the NMI is best for assessment of branch assignment, since it captures the amount of information present in the original clustering that was recovered by the prediction (values between 0 and 1). It corrects the effect of agreement solely due to chance between clusterings by using a hypergeometric background distribution and punishes overbranching and merging branches almost equally [<xref ref-type="bibr" rid="sc7">7</xref>]. Given the predicted and real cluster assignments <italic>U</italic> and <italic>V</italic> with <italic>R</italic> and <italic>C</italic> clusters respectively, NMI is defined as
<disp-formula>
<alternatives><graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="261768_ueqn1.gif"/></alternatives>
</disp-formula></p>
<p><bold>Pseudotime prediction</bold> Evaluating the performance of the different methods consists of quantifying the degree of agreement between the true/labeled and the predicted orderings provided by the different algorithms. Pseudotime only establishes a partial ordering on cells and no absolute time. Therefore, cells on branches not passed through one after the other cannot be compared. We find the longest path in the tree (from the root to a leaf) and compare the predicted pseudotime with the simulated one for the cells on this path.</p>
<p>We used the Goodman-Kruskall index and the Kendall index (weighted and unweighted) to assess pseudotime prediction, as proposed by [<xref ref-type="bibr" rid="sc8">8</xref>]. All four indices count how many pairs of cells have been ordered correctly (<italic>S</italic> <sub>&#x002B;</sub>) or incorrectly (S<sub>&#x2212;</sub>) and produce similar results for the benchmark. The unweighted Goodman-Kruskall index is the simplest approach: (S<sub>&#x002B;</sub> &#x2212; S<sub>&#x2212;</sub>)/(S<sub>&#x002B;</sub> &#x002B; S<sub>&#x2212;</sub>).</p>
</sec>
<sec id="s2b3">
<label>2.3</label>
<title>Benchmarked Methods and Parameters</title>
<sec id="s2b3a">
<title>Monocle2</title>
<p>Monocle2 (version 2.6.1) uses a reverse graph embedding (RGE) technique called DDRTree [<xref ref-type="bibr" rid="sc9">9</xref>] to create a lineage tree and map points from the low-dimensional embedding of the tree to the original gene space. Based on the vignette for (monocle 2.4.0), we used the negbinomial() expression family for the data and the proposed defaults for lower detection limit (1), minimum expression (detectGenes function, 0.1), mean expression threshold (gene ordering, 0.5), and empirical dispersion threshold (2 <italic>&#x00B7; dispersion f it</italic>).</p>
<p>Generally, a successful dimensionality reduction will capture a topology with <italic>B</italic> bifurcations in its first <italic>d</italic> &#x003D; <italic>B</italic> &#x002B; 1 dimensions. While Monocle2 runs DDRTree by default on two dimensions, in our benchmarks we used <italic>B</italic> &#x002B; 1 dimensions, as it performed better. DDRTree did not always return <italic>d</italic> dimensions; if fewer dimensions were provided we used the maximum possible number.</p>
<p>Monocle2 assigns a branch identity to each cell in the State column of the phenotypic data table (pData). It calculates pseudotime as distance from one of the endpoints of the lineage tree it produces. In order to pick the correct endpoint, we checked if the cell with simulated pseudotime <italic>t</italic><sub>0</sub> &#x003D; 0 was in an outer branch; if true, the corresponding endpoint was assigned <italic>t</italic> <sub>0</sub>. In the rare event that it was placed in an inner branch, we used Monocle&#x2019;s chosen starting State for pseudotime calculation.</p>
</sec>
<sec id="s2b3b">
<title>SLICER</title>
<p>SLICER uses locally linear embedding to perform dimensionality reduction and uses a neighbour graph to order cells according to their distance from a user-specified starting cell (pseudotime prediction). It uses geodesic entropy to recursively detect branches.</p>
<p>We used SLICER version 0.2.0 (commit cb1be8a) by following the instructions that accompany the software on its github page (<ext-link ext-link-type="uri" xlink:href="https://github.com/jw156605/SLICER/">https://github.com/jw156605/SLICER/</ext-link>). We used the software&#x2019;s gene selection process as-is and used the selected genes to determine the best <italic>k</italic> value for the LLE, with a <italic>k</italic><sub>min</sub> value of 5. Much like with Monocle2, using <italic>d</italic> &#x003D; <italic>B</italic> &#x002B; 1 LLE dimensions (over the default 2) for a dataset with <italic>B</italic> bifurcations improved performance. We used the same <italic>k</italic> value for the creation of the low-dimensional k-nearest neighbour graph as we did for LLE. For every simulation, we used the cell with labeled pseudotime <italic>t</italic>0 &#x003D; 0 as the starting point of the cell order function, which predicts pseudotime for each cell. Finally, we used the same start point for the branch assignment step (assign branches). This step very often failed to execute; these cases were assigned the worst possible score of each branch assignment measure. The issue was reported to the authors (<ext-link ext-link-type="uri" xlink:href="https://github.com/jw156605/SLICER/issues/7">https://github.com/jw156605/SLICER/issues/7</ext-link>) but until the time of this writing was not resolved.</p>
</sec>
<sec id="s2b3c">
<title>Destiny</title>
<p>Destiny produces a dimensionality reduction and a pseudotime prediction based on it. We used the destiny diffusion map space as input for MERLoT, and benchmarked destiny&#x2019;s Diffusion Pseudotime (DPT). We used destiny (version 2.6.1) as described in the Bioconductor vignette. First we normalized the input data by correcting for library size and then log-transformed them. The only free parameter is the number <italic>k</italic> of nearest neighbours. By default, destiny uses a heuristic to determine it. For a dataset with <italic>B</italic> bifurcations we gave destiny <italic>d</italic> &#x003D; <italic>B</italic> &#x002B; 1 dimensions of the diffusion map to determine pseudotime, following the same reasoning as with Monocle2 and SLICER. We retrieved pseudotime predictions from destiny by calling the DPT function on the diffusion map object and then using the dimension which corresponded to diffusion pseudotime distances from the cell with pseudotime <italic>t</italic> <sub>0</sub> &#x003D; 0.</p>
</sec>
<sec id="s2b3e">
<title>MERLoT: We ran different flavors of MERLoT on embeddings from different dimensionality reduction tools</title>
<list list-type="order">
<list-item><p><bold>MERLoT &#x002B; diffusion maps:</bold> destiny was run to produce diffusion maps for MERLoT. The same protocol as in <xref rid="s2b3" ref-type="sec">section 2.3</xref> was used, except for the selection of free parameter <italic>k</italic>, which was done by a simple optimization. For a simulated lineage tree with <italic>B</italic> bifurcations we tested values of <italic>k</italic> between 5 and 100 and kept the <italic>k</italic> value that maximized the drop-off after the <italic>d</italic> &#x002B; 1&#x2019;th eigenvalue of the diffusion map, where <italic>d</italic> &#x003D; <italic>B</italic> &#x002B; 1.</p></list-item>
<list-item><p>2.<bold>MERLoT &#x002B; DDRTree:</bold> Monocle2 was run in order to produce DDRTRee cordinates. The number of coordinates to be used to reconstruct the lineage tree was selected as described in <xref rid="s2b3" ref-type="sec">section 2.3</xref>.</p></list-item>
</list>
<p>Each of these two options was combined with two different ways in which MERLoT finds the number of endpoints in the dataset.</p>
<list list-type="order">
<list-item><p><bold>MERLoT auto:</bold> MERLoT is run without the specification of the number of endpoints in the tree. MERLoT will use its internal branch length heuristic to determine new branches. The algorithm stops finding new endpoints when the new branch aimed to be included in the tree structure does not contain more than <inline-formula><alternatives><inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="261768_inline12.gif"/></alternatives></inline-formula> number of cells, with N being the total number of cells in the dataset.</p></list-item>
<list-item><p><bold>MERLoT fixed:</bold> MERLoT is run with a specified number of endpoints (tree leaves) to be found. MERLoT will ignore its internal branch length heuristic and will keep searching for branches until it reaches the specified number of endpoints regardless of how many cells are mapped to them.</p>
<p>All 2 &#x00D7; 2 combinations were tested (MERLoT on diffusion maps auto/fixed and MERLoT on DDRTree coordinates auto/fixed).</p></list-item>
</list>
</sec>
</sec>
</sec>
<sec id="s2c">
<label>3</label>
<title>Datasets</title>
<sec id="s2c1">
<title>Myeloid progenitors differentiation (Paul, et al. Cell, 2015 [<xref ref-type="bibr" rid="sc10">10</xref>])</title>
<p>This dataset was produced applying massively parallel single-cell RNA-seq (MARS-seq) which uses unique molecular identifiers (UMIs). After filtering those cells that passed the quality checks and selecting a set of informative genes we obtained a matrix of 2730 cells and 3459 genes. Originally the authors reported 3461 informative genes with some of them being incorrectly formated as dates, e.g 5-Mar, 4-Sep. We were able to correct the IDs of most of them to valid GeneIDs except two (IDs: 7-Sep and 2-Mar) which were excluded from the analysis. The script for calculating the DDRTree coordinates using Monocle2 and the subsequent lineage tree calculation (<xref rid="fig1" ref-type="fig">Fig. 1A</xref> and <xref rid="fig1" ref-type="fig">Fig. 1D</xref>) is available at: <ext-link ext-link-type="uri" xlink:href="https://github.com/soedinglab/merlot/tree/master/inst/example/ExamplePaul2015.R">https://github.com/soedinglab/merlot/tree/master/inst/example/ExamplePaul2015.R</ext-link>.</p>
</sec>
<sec id="s2c2">
<title>Mouse zygote to blastocyst (Guo et. al, Developmental Cell, 2010 [<xref ref-type="bibr" rid="sc11">11</xref>])</title>
<p>The dataset was produced by the Biomark RT-qPCR system and contains Ct values for 48 genes measured in 442 mouse embryonic stem cells at 7 different developmental time points, from the zygote to blastocyst [<xref ref-type="bibr" rid="sc11">11</xref>]. The data was cleaned and normalized by following the vignette from the Destiny package. A total number of 428 cells and 48 genes were kept in the final expression matrix. A diffusion map was calculated using Destiny and the first three diffusion coordinates were used to calculate the lineage tree. We rotated the cells and tree nodes coordinates around the first axis in order to produce a two-dimensional representation of the data and improve visualization. The script for calculating the diffusion maps and the subsequent lineage tree calculation (<xref rid="fig1" ref-type="fig">Fig. 1B</xref> and <xref rid="fig1" ref-type="fig">Fig. 1E</xref>) is available at: <ext-link ext-link-type="uri" xlink:href="https://github.com/soedinglab/merlot/tree/master/inst/example/ExampleGuo2010.R">https://github.com/soedinglab/merlot/tree/master/inst/example/ExampleGuo2010.R</ext-link>.</p>
</sec>
<sec id="s2c3">
<title>Haematopoietic Stem and Progenitor Cells (HSPCs) (Velten et. al, Nature Cell Biology, 2017 [<xref ref-type="bibr" rid="sc12">12</xref>])</title>
<p>The scRNA-seq data was generated samples taken from two donor individuals. The authors used both smart-seq2.HSC (individual 1) and QUARTZ-seq (individual 2), and all findings were systematically compared between individuals. For obtaining the processed data we followed the vignette for the STEMNET software available as part of its R package. From that analysis we obtained the normalized data, the cell types labels and the STEMNET coordinates. The script for calculating the the STEMNET coordinates and the subsequent lineage tree calculation (<xref rid="fig1" ref-type="fig">Fig. 1C</xref> and <xref rid="fig1" ref-type="fig">Fig. 1F</xref>) is available at: <ext-link ext-link-type="uri" xlink:href="https://github.com/soedinglab/merlot/tree/master/inst/example/ExampleVelten2017.R">https://github.com/soedinglab/merlot/tree/master/inst/example/ExampleVelten2017.R</ext-link>.</p>
</sec>
<sec id="s2c4">
<title>Differentially expressed genes detection</title>
<p>After a linear tree reconstruction has been performed, MERLoT can easily find groups of genes being differentially expressed among different groups of cells. If two groups of cells are provided, e.g cells assigned to two branches in the tree (2C)), MERLoT performs a Kruskall-Wallis rank sum test to evaluate which genes in the full expression matrix are differentially expressed on them. If a single subpopulation of cells is provided, the comparisson is made against the rest of cells in the data. The entire list of genes is given as output, ordered by the test p-values results. Also, e-values are provided by multiplying the p-values bby the number of <italic>G</italic> genes being tested.</p>
<p><bold>Data availability</bold></p>
<p content-type="availability">The 10 simulation sets with 100 simulated differentiations each are available at <ext-link ext-link-type="uri" xlink:href="http://wwwuser.gwdg.de/compbiol/merlot/">http://wwwuser.gwdg.de/compbiol/merlot/</ext-link>. The code necessary to run the benchmark on the simulations as well as instructions about how to set up a similar bench-mark are available at <ext-link ext-link-type="uri" xlink:href="https://github.com/soedinglab/merlot-scripts">https://github.com/soedinglab/merlot-scripts</ext-link>. Formatted expression data for the three datasets in <xref rid="fig1" ref-type="fig">Fig. 1</xref> are available at: <ext-link ext-link-type="uri" xlink:href="https://github.com/soedinglab/merlot/tree/master/inst/example/">https://github.com/soedinglab/merlot/tree/master/inst/example/</ext-link></p>
</sec>
</sec>
</sec>
<ref-list>
<title>References</title>
<ref id="sc1"><label>1.</label><mixed-citation publication-type="journal"><string-name><surname>Naruya</surname> <given-names>Saitou</given-names></string-name> and <string-name><surname>Masatoshi</surname> <given-names>Nei.</given-names></string-name> <article-title>The neighbor-joining method: a new method for reconstructing phylogenetic trees</article-title>. <source>Mol Biol Evol</source>, <volume>4</volume>(<issue>4</issue>):<fpage>406</fpage>&#x2013;<lpage>425</lpage>, <year>1987</year>.</mixed-citation></ref>
<ref id="sc2"><label>2.</label><mixed-citation publication-type="journal"><string-name><surname>Alexander</surname> <given-names>Gorban</given-names></string-name> and <string-name><surname>Andrey</surname> <given-names>Zinovyev.</given-names></string-name> <article-title>Elastic principal graphs and manifolds and their practical applications</article-title>. <source>Computing</source>, <volume>75</volume>(<issue>4</issue>):<fpage>359</fpage>&#x2013;<lpage>379</lpage>, <year>2005</year>.</mixed-citation></ref>
<ref id="sc3"><label>3.</label><mixed-citation publication-type="journal"><string-name><surname>Cole</surname> <given-names>Trapnell</given-names></string-name>, <string-name><surname>Davide</surname> <given-names>Cacchiarelli</given-names></string-name>, <string-name><surname>Jonna</surname> <given-names>Grimsby</given-names></string-name>, <string-name><surname>Prapti</surname> <given-names>Pokharel</given-names></string-name>, <string-name><surname>Shuqiang</surname> <given-names>Li</given-names></string-name>, <string-name><surname>Michael</surname> <given-names>Morse</given-names></string-name>, <string-name><given-names>Niall J</given-names> <surname>Lennon</surname></string-name>, <string-name><given-names>Kenneth J</given-names> <surname>Livak</surname></string-name>, <string-name><given-names>Tarjei S</given-names> <surname>Mikkelsen</surname></string-name>, and <string-name><given-names>John L</given-names> <surname>Rinn.</surname></string-name> <article-title>Pseudo-temporal ordering of individual cells reveals dynamics and regulators of cell fate decisions</article-title>. <source>Nat Biotechnol</source>, <volume>32</volume>(<issue>4</issue>):<fpage>381</fpage>, <year>2014</year>.</mixed-citation></ref>
<ref id="sc4"><label>4.</label><mixed-citation publication-type="journal"><string-name><surname>Papadopoulos</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Parra</surname>, <given-names>R. G.</given-names></string-name> &#x0026; <string-name><surname>Soeding</surname>, <given-names>J.</given-names></string-name> <article-title>Prosstt: probabilistic simulation of single-cell rna-seq data for complex differentiation processes</article-title>. <source>bioRxiv</source>(<year>2018</year>) <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1101/256941">https://doi.org/10.1101/256941</ext-link>.</mixed-citation></ref>
<ref id="sc5"><label>5.</label><mixed-citation publication-type="journal"><string-name><surname>Dominic</surname> <given-names>Gru&#x00FC;n</given-names></string-name>, <string-name><surname>Lennart</surname> <given-names>Kester</given-names></string-name>, and <string-name><surname>Alexander</surname> <given-names>Van Oudenaarden.</given-names></string-name> <article-title>Validation of noise models for single-cell transcriptomics</article-title>. <source>Nat Methods</source>, <volume>11</volume>(<issue>6</issue>):<fpage>637</fpage>, <year>2014</year>.</mixed-citation></ref>
<ref id="sc6"><label>6.</label><mixed-citation publication-type="journal"><string-name><given-names>Kenneth D</given-names> <surname>Harris</surname></string-name>, <string-name><given-names>Carolina Bengtsson</given-names> <surname>Gonzales</surname></string-name>, <string-name><surname>Hannah</surname> <given-names>Hochgerner</given-names></string-name>, <string-name><given-names>Nathan G</given-names> <surname>Skene</surname></string-name>, <string-name><surname>Lorenza</surname> <given-names>Magno</given-names></string-name>, <string-name><surname>Linda</surname> <given-names>Katona</given-names></string-name>, <string-name><surname>Peter</surname> <given-names>Somogyi</given-names></string-name>, <string-name><surname>Nicoletta</surname> <given-names>Kessaris</given-names></string-name>, <string-name><surname>Sten</surname> <given-names>Linnarsson</given-names></string-name>, and <string-name><surname>Jens</surname> <given-names>Hjerling-Leffler</given-names></string-name>. <article-title>Classes and continua of hippocampal CA1 inhibitory neurons revealed by single-cell transcriptomics</article-title>. <source>bioRxiv</source>, <year>2017</year>.</mixed-citation></ref>
<ref id="sc7"><label>7.</label><mixed-citation publication-type="journal"><string-name><given-names>Nguyen Xuan</given-names> <surname>Vinh</surname></string-name>, <string-name><surname>Julien</surname> <given-names>Epps</given-names></string-name>, and <string-name><surname>James</surname> <given-names>Bailey.</given-names></string-name> <article-title>Information theoretic measures for clusterings comparison: Variants, properties, normalization and correction for chance</article-title>. <source>J. Mach. Learn. Res.</source>, <volume>11</volume>:<fpage>2837</fpage>&#x2013;<lpage>2854</lpage>, December <year>2010</year>.</mixed-citation></ref>
<ref id="sc8"><label>8.</label><mixed-citation publication-type="journal"><string-name><given-names>Ricardo Jos&#x00E9; Gabrielli Barreto</given-names> <surname>Campello</surname></string-name> and <string-name><given-names>Eduardo R</given-names> <surname>Hruschka.</surname></string-name> <article-title>On comparing two sequences of numbers and its applications to clustering analysis</article-title>. <source>Information Sciences</source>, <volume>179</volume>(<issue>8</issue>):<fpage>1025</fpage>&#x2013;<lpage>1039</lpage>, <year>2009</year>.</mixed-citation></ref>
<ref id="sc9"><label>9.</label><mixed-citation publication-type="journal"><string-name><surname>Qi</surname> <given-names>Mao</given-names></string-name>, <string-name><surname>Li</surname> <given-names>Wang</given-names></string-name>, <string-name><surname>Steve</surname> <given-names>Goodison</given-names></string-name>, and <string-name><surname>Yijun</surname> <given-names>Sun.</given-names></string-name> <article-title>Dimensionality reduction via graph structure learning</article-title>. <source>In Proceedings of the 21th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, KDD &#x2019;15</source>, pages <fpage>765</fpage>&#x2013;<lpage>774</lpage>, New York, NY, USA, <year>2015</year>. ACM.</mixed-citation></ref>
<ref id="sc10"><label>10.</label><mixed-citation publication-type="journal"><string-name><surname>Franziska</surname> <given-names>Paul</given-names></string-name>, <string-name><surname>Yaara</surname> <given-names>Arkin</given-names></string-name>, <string-name><surname>Amir</surname> <given-names>Giladi</given-names></string-name>, <string-name><given-names>Diego Adhemar</given-names> <surname>Jaitin</surname></string-name>, <string-name><surname>Ephraim</surname> <given-names>Kenigsberg</given-names></string-name>, <string-name><surname>Hadas</surname> <given-names>Keren-Shaul</given-names></string-name>, <string-name><surname>Deborah</surname> <given-names>Winter</given-names></string-name>, <string-name><surname>David</surname> <given-names>Lara-Astiaso</given-names></string-name>, <string-name><surname>Meital</surname> <given-names>Gury</given-names></string-name>, <string-name><surname>Assaf</surname> <given-names>Weiner</given-names></string-name>, <etal>et al.</etal> <article-title>Transcriptional heterogeneity and lineage commitment in myeloid progenitors</article-title>. <source>Cell</source>, <volume>163</volume>(<issue>7</issue>):<fpage>1663</fpage>&#x2013;<lpage>1677</lpage>, <year>2015</year>.</mixed-citation></ref>
<ref id="sc11"><label>11.</label><mixed-citation publication-type="journal"><string-name><surname>Guoji</surname> <given-names>Guo</given-names></string-name>, <string-name><surname>Mikael</surname> <given-names>Huss</given-names></string-name>, <string-name><given-names>Guo Qing</given-names> <surname>Tong</surname></string-name>, <string-name><surname>Chaoyang</surname> <given-names>Wang</given-names></string-name>, <string-name><given-names>Li Li</given-names> <surname>Sun</surname></string-name>, <string-name><given-names>Neil D</given-names> <surname>Clarke</surname></string-name>, and <string-name><surname>Paul</surname> <given-names>Robson.</given-names></string-name> <article-title>Resolution of cell fate decisions revealed by single-cell gene expression analysis from zygote to blastocyst</article-title>. <source>Dev Cell</source>, <volume>18</volume>(<issue>4</issue>):<fpage>675</fpage>&#x2013;<lpage>685</lpage>, <year>2010</year>.</mixed-citation></ref>
<ref id="sc12"><label>12.</label><mixed-citation publication-type="journal"><string-name><surname>Lars</surname> <given-names>Velten</given-names></string-name>, <string-name><given-names>Simon F</given-names> <surname>Haas</surname></string-name>, <string-name><surname>Simon</surname> <given-names>Raffel</given-names></string-name>, <string-name><surname>Sandra</surname> <given-names>Blaszkiewicz</given-names></string-name>, <string-name><surname>Saiful</surname> <given-names>Islam</given-names></string-name>, <string-name><given-names>Bianca P</given-names> <surname>Hennig</surname></string-name>, <string-name><surname>Christoph</surname> <given-names>Hirche</given-names></string-name>, <string-name><surname>Christoph</surname> <given-names>Lutz</given-names></string-name>, <string-name><given-names>Eike C</given-names> <surname>Buss</surname></string-name>, <string-name><surname>Daniel</surname> <given-names>Nowak</given-names></string-name>, <etal>et al.</etal> <article-title>Human haematopoietic stem cell lineage commitment is a continuous process</article-title>. <source>Nat Cell Biol</source>, <volume>19</volume>(<issue>4</issue>):<fpage>271</fpage>, <year>2017</year>.</mixed-citation></ref>
</ref-list>
<sec id="s3" sec-type="supplementary-material">
<title>Supplementary Information</title>
<fig id="figS1" position="float" orientation="portrait" fig-type="figure">
<label>Figure S1:</label>
<caption>
<title>MERLoT&#x2019;s method for finding endpoints</title>
<p>(a) Pair of cells that maximize the length of the shortest path distances matrix in the dataset. (b) Every cell <italic>n</italic>, not in the shortest path between already found endpoints is evaluated according to: <italic>s&#x03B5;</italic>(<italic>n</italic>):&#x003D; 0.5 &#x00D7;min <italic>{Skn</italic>&#x002B; <italic>Snl &#x2212; Skl</italic>: <italic>k, l &#x2208; &#x03B5;}</italic>. S<sub><italic>ij</italic></sub> represents the number of nodes in the shortest path between <italic>i, j</italic>. The new enpoint to be added to the tree structure is the one that maximizes its <italic>s<sub>&#x1D4B;</sub></italic>(<italic>n</italic>) value respect to the other cells in the dataset.</p></caption>
<graphic xlink:href="261768_figS1.tif"/>
</fig>
<fig id="figS2" position="float" orientation="portrait" fig-type="figure">
<label>Figure S2:</label>
<caption>
<title>MERLoT&#x2019;s method for finding branchpoints and tree connectivity</title>
<p>The algorithm has two steps (1) Neighbour Joining (NJ) Criterion and (2) branchpoint search. The NJ criterion is applied over the <italic>V</italic> vector which is initially set to the set of endpoints (green). In every NJ iteration, two <italic>k</italic>, <italic>l</italic> nodes are selected to be joined (orange) for which a branchpoint <italic>m</italic> is found (red) and the edges between the branchpoint and the joined nodes are added to the topology. The <italic>V</italic> vector is updated in every iteration by substracting the <italic>k</italic> and <italic>l</italic> nodes and adding the <italic>m</italic> node. The procedure stops when <italic>&#x2502;V&#x2502;</italic>&#x003D;2. <bold>(a)</bold> Two-dimensional embedding of cells and initial endpoints used to initialize <italic>V</italic>. <bold>(b)</bold> First iteration: e3 and e4 and joined through b1. e3-b1 and e4-b1 edges are added to the tree. e3 and e4 are deleted from <italic>V</italic> and b1 is added instead. <bold>(c)</bold> Second iteration: e2 and b1 and joined through b2. e2-b2 and b1-b2 edges are added to the tree. e2 and b1 are deleted from <italic>V</italic> and b2 is added instead. <bold>(d)</bold> Third iteration: <italic>&#x2502;V&#x2502;</italic>&#x003D;2, procedure stops and the b2-e1 edge is added to the tree.</p></caption>
<graphic xlink:href="261768_figS2.tif"/>
</fig>
<fig id="figS3" position="float" orientation="portrait" fig-type="figure">
<label>Figure S3:</label>
<caption>
<title>Topology Complexity</title>
<p><bold>(a)</bold> With one bifurcation only one topology is possible. <bold>(b)</bold> With two bifurcations two topologies are possible. However, they are equivalent in terms of length of the longest subtree. <bold>(c)</bold> More topologies are possible. For the upper case in panel B, three more topologies can be constructed by adding a new bifurcation. Not all topologies are equivalent in terms of the length of the longest sub tree.</p></caption>
<graphic xlink:href="261768_figS3.tif"/>
</fig>
<fig id="figS4" position="float" orientation="portrait" fig-type="figure">
<label>Figure S4:</label>
<caption>
<title>Branch assignment benchmarking.</title>
<p>We calculated different scores to assess how good the different methods are for assigning cells to the different measures. <bold>(a)</bold> F1 measure, <bold>(b)</bold> Mathews Correlation Coefficient, <bold>(c)</bold> Jaccard Index and (d) Normalized Mutual Information. For MERLoT, for every flavour, we have included in dotted lines the performance of the Scaffold Tree alone.</p></caption>
<graphic xlink:href="261768_figS4.tif"/>
</fig>
<fig id="figS5" position="float" orientation="portrait" fig-type="figure">
<label>Figure S5:</label>
<caption>
<title>Examples of branch assignments for MERLoT, Monocle2, and SLICER.</title>
<p>We show three typical examples from the single (left), triple (middle) and five-fold (right) bifurcation benchmark sets (simulation names at bottom). In each panel we show the lineage tree of the simulated tree, with vertical lines representing the cells, ordered by pseudotime. The color of each line is the branch label predicted for it by the respective method. The NMI of each prediction is in the top left of each panel. We picked examples with NMI values near the average values for each tool and tree topology.</p></caption>
<graphic xlink:href="261768_figS5.tif"/>
</fig>
<fig id="figS6" position="float" orientation="portrait" fig-type="figure">
<label>Figure S6:</label>
<caption>
<title>Pseudotime assignment benchmarking.</title>
<p>We calculated different scores to assess how good the different methods are for assigning pseudotime values for cells along the longest sub tree in simulations: <bold>(a)</bold> Goodman-Kruskall index (unweighted), <bold>(b)</bold> Kendall index (unweighted), <bold>(c)</bold> Goodman-Kruskall index (weighted) and <bold>(d)</bold> Kendall index (weighted.</p></caption>
<graphic xlink:href="261768_figS6.tif"/>
</fig>
</sec>
<sec id="s4">
<title>Suppl. Note 1: Use of external cluster evaluation measures for branch assignment predictions</title>
<p>As discussed in the main paper, branch assignment predictions can be treated as a clustering problem. A tree reconstruction produces a clustering by assigning cells to branches. This clustering can be compared to the cluster identity of each cell is the branch of the simulated lineage tree it belongs to.</p>
<p>Given a cell <italic>c</italic>, let <italic>Tr</italic>(<italic>c</italic>) be the cluster identity of <italic>c</italic> in the ground truth and <italic>A</italic>(<italic>c</italic>) the cluster assigned to <italic>c</italic> by the algorithm. We define a pair of two cells <italic>c</italic><sub><italic>i</italic></sub>, <italic>c</italic><sub><italic>j</italic></sub> as a&#x2026;
<disp-formula>
<alternatives><graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="261768_ueqn2.gif"/></alternatives>
</disp-formula>
Using these four values, many popular clustering indices can be computed (<xref rid="figS4" ref-type="fig">Fig S4</xref>): the F1 measure (<xref rid="figS4" ref-type="fig">Fig. S4A</xref>) is 2<italic>P R/</italic>(<italic>P</italic> &#x002B; <italic>R</italic>), (where <italic>P</italic> is the precision <italic>T P /</italic>(<italic>T P</italic> &#x002B; <italic>F P</italic>) and <italic>R</italic> is the recall <italic>T P /</italic>(<italic>T P</italic> &#x002B; <italic>F N</italic>)), the Matthews Correlation Coefficient (MCC) (<xref rid="figS4" ref-type="fig">Fig. S4B</xref>) is
<disp-formula>
<alternatives><graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="261768_ueqn3.gif"/></alternatives>
</disp-formula>
and the Jaccard Index (<xref rid="figS4" ref-type="fig">Fig. S4C</xref>) is <italic>T P /</italic>(<italic>T P</italic>&#x002B; <italic>F P</italic> &#x002B; <italic>F N</italic>)</p>
<p>While all the aforementioned indices and measures are well established, they are suboptimal performance indicators for the problem at hand, since they don&#x2019;t take cluster structure into consideration. As the simulated lineage trees become bigger and more complex, the number of cell pairs that are not in the same tree segment is going to grow much faster than the number of cell pairs in different tree segments. The number of TPs will grow much slower than the number of TNs, something that will, for example, inflate the the MCC index. Additionally, the number of possible FNs becomes much higher with each additional segment added to the tree, something that affects the Jaccard index and the F1 score. In short, these measures don&#x2019;t take into account the number of clusters in the data, and as such are suboptimal descriptors of clustering performance in comparison to NMI.</p>
</sec>
</back>
</article>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.2d1 20170631//EN" "JATS-archivearticle1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" article-type="article" dtd-version="1.2d1" specific-use="production" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">BIORXIV</journal-id>
<journal-title-group>
<journal-title>bioRxiv</journal-title>
<abbrev-journal-title abbrev-type="publisher">bioRxiv</abbrev-journal-title>
</journal-title-group>
<publisher>
<publisher-name>Cold Spring Harbor Laboratory</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1101/347625</article-id>
<article-version>1.1</article-version>
<article-categories>
<subj-group subj-group-type="author-type">
<subject>Regular Article</subject>
</subj-group>
<subj-group subj-group-type="heading">
<subject>New Results</subject>
</subj-group>
<subj-group subj-group-type="hwp-journal-coll">
<subject>Microbiology</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>Understanding trivial challenges of microbial genomics: An assembly example</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name><surname>Lariviere</surname><given-names>Delphine</given-names></name>
<xref ref-type="aff" rid="a1">1</xref>
</contrib>
<contrib contrib-type="author">
<name><surname>Mei</surname><given-names>Han</given-names></name>
<xref ref-type="aff" rid="a1">1</xref>
</contrib>
<contrib contrib-type="author">
<name><surname>Freeberg</surname><given-names>Mallory</given-names></name>
<xref ref-type="aff" rid="a2">2</xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-4285-6985</contrib-id>
<name><surname>Taylor</surname><given-names>James</given-names></name>
<xref ref-type="aff" rid="a3">3</xref>
</contrib>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-5987-8032</contrib-id>
<name><surname>Nekrutenko</surname><given-names>Anton</given-names></name>
<xref ref-type="aff" rid="a1">1</xref>
</contrib>
<aff id="a1"><label>1</label><institution>Department of Biochemistry and Molecular Biology, The Pennsylvania State University</institution></aff>
<aff id="a2"><label>2</label><institution>European Molecular Biology Laboratory, European Bioinformatics Institute (EMBL-EBI)</institution>, Wellcome Trust Genome Campus, Hinxton, <country>UK</country></aff>
<aff id="a3"><label>3</label><institution>Department of Biology and Computer Science, Johns Hopkins University</institution></aff>
</contrib-group>
<author-notes>
<corresp id="cor1">Correspondence should be addressed to AN (<email>anton@nekrut.org</email>)</corresp>
</author-notes>
<pub-date pub-type="epub"><year>2018</year></pub-date>
<elocation-id>347625</elocation-id>
<history>
<date date-type="received">
<day>14</day>
<month>6</month>
<year>2018</year>
</date>
<date date-type="rev-recd">
<day>14</day>
<month>6</month>
<year>2018</year>
</date>
<date date-type="accepted">
<day>14</day>
<month>6</month>
<year>2018</year>
</date>
</history>
<permissions>
<copyright-statement>&#x00A9; 2018, Posted by Cold Spring Harbor Laboratory</copyright-statement>
<copyright-year>2018</copyright-year>
<license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by/4.0/"><license-p>This pre-print is available under a Creative Commons License (Attribution 4.0 International), CC BY 4.0, as described at <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link></license-p></license>
</permissions>
<self-uri xlink:href="347625.pdf" content-type="pdf" xlink:role="full-text"/>
<abstract>
<p>The perceived &#x201C;simplicity&#x201D; of bacterial genomics (<italic>these genomes are small and easy to assemble</italic>) feeds the decentralized state of the field where computational analysis standards have been slow to evolve. This situation has a historical explanation. In cases of human, mouse, fly, worm and other model organisms there have been large sustained multinational genome sequencing efforts and analysis consortia such as the 1,000 genomes, ENCODE, modENCODE, GTEx and others. These resulted in development and proliferation of common tools, workflows, and data standards. This is not the case in microbiology. After the development of highly parallel sequencing methodologies in mid-2000s bacterial genomes no longer required initiatives of such scale. The flipside of this is the extreme heterogeneity of approaches to many well established microbial genomic analysis problems such as genome assembly. While competition amongst different methods is good, we argue that the quality of data analyses will improve if cutting edge tools are more accessible and microbiologists become more computationally savvy. Here we use genome assembly as an example to highlight current challenges and to provide a possible solution.</p>
</abstract>
<counts>
<page-count count="15"/>
</counts>
</article-meta>
</front>
<body>
<sec>
<p>We develop and maintain a popular genomic analysis platform&#x2014;Galaxy<sup><xref ref-type="bibr" rid="c1">1</xref></sup>. In the course of this long running project we became keenly aware of the fact that developing computational platforms and using them are distinct activities: developer cannot accurately anticipate the needs of an experimental user. But how to ensure that software development priorities are in alignment with the needs of real users&#x003F; Perhaps the best approach is to select a common type of analysis and to understand what is involved in completing one. One of the authors of this manuscript is an experimentalist without prior computational expertise working on in vitro evolution project stemming from our previous work with <italic>E. coli</italic> C and bacteriophage &#x03D5;X174<sup><xref ref-type="bibr" rid="c2">2</xref></sup>. The genome of <italic>E. coli</italic> C has not been previously determined and by sequencing it we wanted to discover, enumerate, and attempt to solve any hurdles that arise. So we set our purely experimental colleague on a journey to perform assembly without any explicit computational help. After this has been painstakingly accomplished we modified Galaxy system to account for all analytical idiosyncrasies discovered during this effort and created a detailed interactive tutorial (<ext-link ext-link-type="uri" xlink:href="https://goo.gl/xP7jyn">https://goo.gl/xP7jyn</ext-link>; our ultimate goal is to create multiple similar tutorials on common types of microbial genomic analyses). The set of issues that we discovered was very illuminating for understanding hurdles preventing microbiologists from embracing an ever growing set of free, community-supported, open-source analysis tools.</p>
<p>The first fully sequenced genome of a free living organism was that of <italic>Haemophilus influenzae</italic> <sup><xref ref-type="bibr" rid="c3">3</xref></sup>. It was a result of a large collaborative effort that involved the development of a dedicated genomes assembler <sup><xref ref-type="bibr" rid="c4">4</xref></sup>. Since that time numerous advances in genome sequencing and assembly have transformed life sciences. Today there are established experimental protocols for preparing sequencing libraries for a variety of currently available platforms. Similarly there are established, well tested, open-source software tools for assembly of sequencing reads of various lengths and error profiles into complete genomic sequences <sup><xref ref-type="bibr" rid="c6">6</xref>,<xref ref-type="bibr" rid="c7">7</xref></sup> As a result bacterial genome sequencing is a common task: for <italic>E. coli</italic> alone over 10,800 genome assemblies (June 2018; both complete and partial) have been deposited to the National Center for Biotechnology Information (NCBI) microbial genome database since the publication of the K-12 sequence in 1997 <sup><xref ref-type="bibr" rid="c5">5</xref></sup>. Given all these advances how easy is it to actually assemble a bacterial genome&#x003F;</p>
<p>A microbiologist experienced in molecular biology techniques will have no trouble isolating genomic DNA and preparing sequencing libraries. To sequence the C-1 strain (Coli Genetic Stock Center &#x0023;3121) of <italic>E. coli</italic> used in our experimental evolution study we chose two commercially available technologies: Illumina and Oxford Nanopore. Illumina is the current standard in short read high coverage sequencing and is widely accessible through institutional core facilities, commercial sequencing service providers and individual labs. Oxford Nanopore (ONT) is a maturing single molecule sequencing technology that produces long reads with relatively high error rate. Combining high accuracy short Illumina reads with error prone but long ONT reads allows performing hybrid assembly <sup><xref ref-type="bibr" rid="c9">9</xref></sup> yielding accurate and, often, complete bacterial assemblies. We specifically chose ONT over the other more established long read single molecule sequencing approach, Pacific Biosciences (PacBio), because ONT&#x2019;s perceived appeal to small labs. This appeal is based on low up-front cost and small physical footprint of ONT sequencer&#x2014;MinION. Additionally, ONT still does not have firmly established data processing and analysis workflows and we were interested in experiencing this first hand. Using Illumina TruSeq library preparation protocol on a MiSeq machine and R7 ONT chemistry on a MinION MK1b device we generated 9,345,897 250 bp Illumina read pairs and 14,093 long nanopore reads with maximum length of 27.5 kb. Both Illumina and ONT data are deposited to Short Read Archive under accession SRP131264 and can also be accessed from Zenodo (DOI:10.5281/zenodo.1257429).</p>
<p>Sobering reality begins immediately upon receiving the data from the MinION machine. While Illumina data comes in well established fastq format <sup><xref ref-type="bibr" rid="c10">10</xref></sup> ONT data poses a challenge. In our case the data was obtained in fast5 format, in which every read is in a separate file. Since our run yielded 14,093 reads this translated into 14,093 files that occupy over 16Gb of disk space. Moving and manipulation of such file collections is inevitably a challenge and to be useful for downstream analyses they need to be converted to fastq format as well. This can be achieved with a free, community-developed package called Poretools <sup><xref ref-type="bibr" rid="c11">11</xref></sup>. Poretools can be installed and used by individuals familiar with any flavor of UNIX environment (e.g., MacOS and Linux) but pose challenge for naive users (like one of the co-authors of this manuscript) and owners of Windows PCs. To address the need to manipulate ONT data we have wrapped Poretools for Galaxy and used them to generate fastq representation of nanopore reads. We retained 12,738 high quality 2D reads ranging from 1 to 27.5kb in length (<italic>N</italic>50 &#x003D; 8,808). Illumina reads were of sufficiently high quality and did not require any additional processing.</p>
<p>Next, one needs to decide which method to be used for read assembly. One possible way to obtain the information necessary to make this decision is to see which tools were used to assemble existing genomes. At the time of writing NCBI microbial genome database contained 10,596 genomes labelled as &#x201C;complete&#x201D; (June 2018). Over half of these (5,849) have been deposited to NCBI in the past three years (after January 2017). Of these 5,404 contained useful metadata with 107 genomes listing both &#x201C;Illumina&#x201D; and &#x201C;Oxford Nanopore&#x201D; as sequencing technologies used. The majority (74) used Unicycler <sup><xref ref-type="bibr" rid="c8">8</xref></sup> with SPAdes <sup><xref ref-type="bibr" rid="c12">12</xref></sup> being second most widely used assembly tool. In reality however, this simple numerical analysis we just described cannot be easily conducted by most experimentalists. It requires downloading tabular datasets from NCBI, writing scripts that would parse these data and download files containing assembly information, processing these files, and generating the report. As a result most of our experimental colleagues will resort to random clicking with, statistically speaking, chances of finding one of 74 genomes assembled with Unicycler among 10,596 being slim. But for the sake of continuing our experiment let us settle on using Unicycler for assembly. Unicycler uses SPAdes as the key component of its assembly process. It is a are pre-configured assembly pipeline that combines read error correction (error correction), various assembly tools tuned for different types of sequencing data such as short accurate reads and/or long noisy reads, and post-assembly steps such as polishing, variant calling, and assembly rotation into a single pipeline.</p>
<p>Now that we have the data and know which assembly tool to use it should be trivial to perform the assembly. It turns out not be the case: our modestly sized dataset (just over 9 million read pairs) cannot be assembled on an ordinary lab desktop&#x2014;assembly is both memory and CPU intensive and while bacterial genomes have the advantage of being compact, these issues still persist. There is a free solution to this challenge. The United States operates a collection of large NSF-funded high performance computing systems dedicated to scientific computing&#x2014;<ext-link ext-link-type="uri" xlink:href="https://www.xsede.org/">https://www.xsede.org/</ext-link>. Free CPU-time and disk space allocations can be obtained on XSEDE resources by writing straightforward, rapidly reviewed applications. However, these resources are underused by experimental life scientists as their proper utilization requires familiarity with scientific computing practices. Galaxy is designed to be able to distribute analyses across geographically distributed heterogeneous computational resources such as various XSEDE components. Galaxy&#x2019;s Unicycler analyses run on the Bridges high performance computing resource at the Pittsburgh Supercomputing Center&#x2014;a large shared-memory XSEDE resource ideally suited for genome assembly (<ext-link ext-link-type="uri" xlink:href="https://www.psc.edu/bridges">https://www.psc.edu/bridges</ext-link>). Using Bridges Unicycler assembled Illumina and ONT sequencing reads into two contigs 4,576,290 and 5,386 bases in length, respectively (assembly took approximately 4 hours utilizing 80 CPUs). The larger contig represents the complete genome of <italic>E. coli</italic> C-1, while the smaller is 100&#x0025; identical to the sequence of bacteriophage <italic>&#x03C6;</italic>X174 used as a spike-in in Illumina sequencing protocols. To assess the quality of the new assembly and to annotate genes we integrated into Galaxy and used Quast <sup><xref ref-type="bibr" rid="c13">13</xref></sup> and Prokka <sup><xref ref-type="bibr" rid="c14">14</xref></sup> tools, respectively.</p>
<p>The newly created assembly should now be analyzed in the comparative context: are there large insertions or deletions that differentiate our strain from those already sequenced? Such an analysis involves alignment of our assembly against already sequenced genomes. Thus the initial logistical challenge is locating and obtaining these already sequenced genomes. NCBI provides means for doing this. For example, at the time of writing there were 592 complete <italic>E. coli</italic> genomes (<ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/genome/genomes/167">https://www.ncbi.nlm.nih.gov/genome/genomes/167</ext-link>). NCBI allows users to download a table with information about individual assemblies. This table contains web addresses pointing to a remote disk folders containing genomic sequences and annotations. But these web addresses are partial (do not contain names of the files) and to download DNA sequence files each address needs to be modified. This will have to be done 592 times. Such editing can potentially be performed in a spreadsheet application, but this still does not make easy to download all the files automatically. To address this we designed &#x201C;rule-based&#x201D; uploader allowing users to fetch complex collections of multiple files (<ext-link ext-link-type="uri" xlink:href="https://vimeo.com/271328293">https://vimeo.com/271328293</ext-link>). Using this tool we uploaded all 592 genomes into Galaxy.</p>
<p>Similarly to assembly problem large scale analyses of sequencing data require robust computational infrastructure and, again, infrastructure provided by XSEDE is superbly appropriate. At this point we needed to align our assembly against 592 finished <italic>E. coli</italic> genomes. Alignment is computationally distinct from assembly in that it does not require large memory allocation and can be performed on conventional clusters. For that purpose Galaxy takes advantage of another high performance shared XSEDE resource&#x2014;JetStream (<ext-link ext-link-type="uri" xlink:href="https://jetstream-cloud.org/">https://jetstream-cloud.org/</ext-link>). As is the case for assembly there is a number of established tools for performing alignments with BLAST <sup><xref ref-type="bibr" rid="c15">15</xref></sup> being the most well known. In the case of this analysis BLAST has to be downloaded and installed, a BLAST database has to be created from the 592 genome set and searched against. None of these steps are particularly difficult given familiarity with UNIX environment but are immensely challenging otherwise. We used a different, BLAST-like aligner LASTZ (<ext-link ext-link-type="uri" xlink:href="https://lastz.github.io/lastz/">https://lastz.github.io/lastz/</ext-link>) designed for long genomic sequences by simultaneously starting 592 jobs in Galaxy each running for approximately 5 min. All alignment data were then combined into a single dataset.</p>
<p>Up to this point, most difficulties experienced by a computational novice were related to choosing appropriate tools, finding sufficiently powerful infrastructure, and downloading bulk data collections from NCBI. What comes next is different. Manipulations we are about to describe are straightforward, but they are punctuated by numerous, ridiculously unsophisticated, issues. These trivial challenges are chiefly responsible for the perception that data analysis in biology is unpleasant and difficult.</p>
<p>Alignment dataset that we just produced represents coordinates of regions that are highly similar between our assembly and each of the 592 <italic>E. coli</italic> genomes. This is a very straightforward dataset to deal with in all aspects except one&#x2014;size&#x2014;it contains &#x007E;13,000,000 rows. This is too much for Excel or Google Sheets to process. The majority of rows in this file are likely to be spurious alignment hits with low similarity, which need to be filtered. But how to assess what should be filtered out from a dataset so large&#x003F; For someone familiar with scientific computing sqlite or Pandas <sup><xref ref-type="bibr" rid="c16">16</xref></sup> will offer a solution. Alternatively, Galaxy does not have restriction on file size. To identify erroneous alignments one can plot the relationship between alignment length and its identity. 13 million rows is still too much data to plot. Instead we generated a random subset with only 10,000 rows and plotted the length/identity relationship (<xref ref-type="fig" rid="fig1a">Fig. 1A</xref>). The majority of alignments are represented by spurious hits below 10,000 bp and 90&#x0025; identity and can be removed. This retains only 0.43&#x0025; of the original data and creates a dataset that is much easier to manipulate. In particular we can aggregate data: for each of the 592 <italic>E. coli</italic> genomes, we compute the number of contiguous alignments, their total length, and plot them against each other (<xref ref-type="fig" rid="fig1b">Fig. 1B</xref>). Such aggregation can be quickly performed with tools like Datamash (<ext-link ext-link-type="uri" xlink:href="https://www.gnu.org/software/datamash/">https://www.gnu.org/software/datamash/</ext-link>) in Galaxy. This identified a cluster of three genomes, LT906474.1 (strain NCTC122), CP024090.1 (strain WG5), and CP020543.1 (another instance of <italic>E. coli</italic> C), that have high total alignment length produced by just a handful of alignments (<xref ref-type="fig" rid="fig1b">Fig. 1B</xref>).</p>
<fig id="fig1a" position="float" fig-type="figure">
<label>Figure 1.</label>
<caption><p>A. The relationship between alignment length and alignment identity allows to identify spurious alignments majority of which are short and have relatively low identity. B. The three genomes most closely related to our assembly appear as a cluster of three dots in the upper left corner of the plot. These have the highest total alignable length over the smallest number of alignment blocks.</p></caption>
<graphic xlink:href="347625_fig1a.tif"/>
</fig>
<fig id="fig1b" position="float" fig-type="figure">
<graphic xlink:href="347625_fig1b.tif"/>
</fig>
<p>With a set of closely-related genomes identified the next step is to perform a detailed comparison. This can be done by regeneration of alignments. As a bonus LASTZ produces dot-plot representations for alignable regions between every pair of genomes (<xref ref-type="fig" rid="fig2">Fig. 2</xref>), highlighting an inversion within CP020543.1 and apparent deletion of approximately 50 kb from our assembly (thus from the three closely related genomes another example of strain C is the most distant from our version of the same strain). It is also possible to create simultaneous representation of pairwise comparisons using tool like Circos <sup><xref ref-type="bibr" rid="c17">17</xref></sup>. Circos is a very powerful graphing tool but is also very challenging to configure. To make Circos accessible to wider audience of users we have integrated it into Galaxy to produce a graphical representation of relationships between our assembly and the three genomes (<xref ref-type="fig" rid="figS1">Fig. S1</xref>). However, both dot-plots and Circos plots are not interactive. Genome browsers such as the Integrative Genome Viewer (IGV<sup><xref ref-type="bibr" rid="c18">18</xref></sup>) are designed to allow interactive explorations of genomes and associated annotations. To create a browser one first needs to select a set of sequences that would form the coordinate system for displaying genomic features. In our case we can combine sequences of our assembly with LT906474.1, CP024090.1, and CP020543.1 in a single file. With minor deviations (cleaning sequence names and retaining accession numbers only) this can be accomplished. Once a browser is created, one can display tracks. In the case of our analysis we will display two kinds of tracks: alignment coordinates and gene annotations. Alignment coordinates were produced by LASTZ, and by moving columns around its output can be coerced into Browser Extensible Data (BED) format understood by IGV. The gene annotations can be downloaded from NCBI directly and displayed as tracks. Finally, it is possible to compute a complement of alignment coordinates (essentially an inverse) to pinpoint location of the gap in our assembly (<xref ref-type="fig" rid="figS2">Fig. S2</xref>) using BEDTools&#x2014;a toolkit for manipulation of BED datasets <sup><xref ref-type="bibr" rid="c19">19</xref></sup>. However, this last set of manipulation involves a large number of small operations (e.g., removing and re-shuffling columns in tab-delimited files) that are difficult to perform on large datasets outside UNIX environments or Galaxy.</p>
<fig id="fig2" position="float" fig-type="figure">
<label>Figure 2.</label>
<caption><p>A low resolution comparison of our assembly against the three most closely related genomes identified in <xref ref-type="fig" rid="fig1b">Fig. 1B</xref>. Query (Y-axis) is indicated above each dot plot. Target (X-axis) is our assembly. Red circle indicates a region deleted in our assembly.</p></caption>
<graphic xlink:href="347625_fig2.tif"/>
</fig>
<p>Finally, to understand if any of the genes missing from our assembly (e.g., corresponding to the deleted region in the other three strains) are essential we compared them (using LT906474.1 data) against a recently published list of essential genes identified in <italic>E. coli</italic> K-12 strain BW25113 <sup><xref ref-type="bibr" rid="c20">20</xref></sup>. We selected LT906474.1 genes because its genome is better annotated compared with CP020543.1 (e.g., contains standard gene names). The caveat of this analysis is that we are comparing LT906474.1 (WG5) and BW25113&#x2014;two relatively distant strains (albeit both belonging to the A phylogenetic group of <italic>E. coli</italic><sup><xref ref-type="bibr" rid="c21">21</xref></sup>) because there is no systematic gene deletion studies for WG5. This analysis was performed by first identifying genes overlapping the deleted region in LT906474.1 and then comparing their names against those listed by Goodall et al. <sup><xref ref-type="bibr" rid="c20">20</xref></sup>. Based on this comparison none of the genes falling within the deleted region appears to be essential.</p>
<p>For experimental co-author of this paper it took approximately two months to figure out numerous minute aspects of the above analysis (computational co-authors deliberately did not provide any help for the duration of this period). After integration of all tools and combining them with existing Galaxy functionality this entire analysis took less than two work-days (because Unicycler assembly and alignment to 592 genomes takes about 12 hours in total). The main take-home-message of our report is that while major analytical problems in bacterial assembly are solved (there are proven, free, open-source, robust tools for assembly, alignment, visualization and so on) the small issues are the true show-stoppers for many experimentalists. These &#x201C;last-mile&#x201D; challenges are as mundane as tabular file manipulation, dealing with multiple files, simple scripting and statistical data analysis. Why is this the case and how to overcome these issues&#x003F;
<list list-type="order">
<list-item><p><bold>Lack of quantitative training.</bold> This is likely the most severe problem but also the one that is easiest to solve because of the abundance of free training resources. While we do not necessarily expect biologists to develop quantitative methods for data analytics, sound statistical and scientific computing training is key to successful career. Quantitative courses must become a required component of undergraduate curriculum in all life science programs. This is not a tall order as most universities and large research institutions already have all necessary expertise in one place.</p></list-item>
<list-item><p><bold>Lack of interdisciplinary crosstalk.</bold> Microbiologists do not often read computational journals. Algorithm developers rarely venture into biological conferences. These sociological trends are very effective in preventing spread of mutually beneficial information across fields. This can potentially change if journals, granting agencies, and domain-specific mindsets would become more receptive to cross-disciplinary efforts or at least acknowledge its importance. Without this, grant proposals describing tailoring of computational tools to the needs of microbiologists will be returned with &#x201C;no novelty&#x201D; review statement. And as many of us know &#x201C;no-novelty&#x201D; kills it all.</p></list-item>
</list>
</p>
</sec>
</body>
<back>
<ack>
<title>Acknowledgements</title>
<p>The authors are grateful to Galaxy Team and Galaxy community as without these resources this work would not be possible. This project was supported by NIH Grants U41 HG006620 and R01 AI134384-01 as well as NSF Grant 1661497 to JT and AN.</p>
</ack>
<ref-list>
<title>References</title>
<ref id="c1"><label>1.</label><mixed-citation publication-type="journal"><string-name><surname>Goecks</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Nekrutenko</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Taylor</surname>, <given-names>J.</given-names></string-name> &#x0026; <string-name><surname>Team</surname>, <given-names>G.</given-names></string-name> <article-title>Galaxy: a comprehensive approach for supporting accessible, reproducible, and transparent computational research in the life sciences</article-title>. <source>Genome Biol</source>. <volume>11</volume>, <fpage>R86</fpage> (<year>2010</year>).</mixed-citation></ref>
<ref id="c2"><label>2.</label><mixed-citation publication-type="journal"><string-name><surname>Dickins</surname>, <given-names>B.</given-names></string-name> &#x0026; <string-name><surname>Nekrutenko</surname>, <given-names>A.</given-names></string-name> <article-title>High-resolution mapping of evolutionary trajectories in a phage</article-title>. <source>Genome Biol. Evol</source>. <volume>1</volume>, <fpage>294</fpage>&#x2013;<lpage>307</lpage> (<year>2009</year>).</mixed-citation></ref>
<ref id="c3"><label>3.</label><mixed-citation publication-type="journal"><string-name><surname>Fleischmann</surname>, <given-names>R. D.</given-names></string-name> <etal>et al.</etal> <article-title>Whole-genome random sequencing and assembly of Haemophilus influenzae Rd</article-title>. <source>Science</source> <volume>269</volume>, <fpage>496</fpage>&#x2013;<lpage>512</lpage> (<year>1995</year>).</mixed-citation></ref>
<ref id="c4"><label>4.</label><mixed-citation publication-type="journal"><string-name><surname>Sutton</surname>, <given-names>G. G.</given-names></string-name>, <string-name><surname>White</surname>, <given-names>O.</given-names></string-name>, <string-name><surname>Adams</surname>, <given-names>M. D.</given-names></string-name> &#x0026; <string-name><surname>Kerlavage</surname>, <given-names>A. R.</given-names></string-name> <article-title>TIGR Assembler: A New Tool for Assembling Large Shotgun Sequencing Projects</article-title>. <source>Genome Science and Technology</source> <volume>1</volume>, <fpage>9</fpage>&#x2013;<lpage>19</lpage> (<year>1995</year>).</mixed-citation></ref>
<ref id="c5"><label>5.</label><mixed-citation publication-type="journal"><string-name><surname>Blattner</surname>, <given-names>F. R.</given-names></string-name> <etal>et al.</etal> <article-title>The complete genome sequence of Escherichia coli K-12</article-title>. <source>Science</source> <volume>277</volume>, <fpage>1453</fpage>&#x2013;<lpage>1462</lpage> (<year>1997</year>).</mixed-citation></ref>
<ref id="c6"><label>6.</label><mixed-citation publication-type="journal"><string-name><surname>Utturkar</surname>, <given-names>S. M.</given-names></string-name>, <string-name><surname>Klingeman</surname>, <given-names>D. M.</given-names></string-name>, <string-name><surname>Hurt</surname>, <given-names>R. A.</given-names>, <suffix>Jr</suffix></string-name> &#x0026; <string-name><surname>Brown</surname>, <given-names>S. D.</given-names></string-name> <article-title>A Case Study into Microbial Genome Assembly Gap Sequences and Finishing Strategies</article-title>. <source>Front. Microbiol</source>. <volume>8</volume>, <fpage>1272</fpage> (<year>2017</year>).</mixed-citation></ref>
<ref id="c7"><label>7.</label><mixed-citation publication-type="journal"><string-name><surname>Forouzan</surname>, <given-names>E.</given-names></string-name>, <string-name><surname>Maleki</surname>, <given-names>M. S. M.</given-names></string-name>, <string-name><surname>Karkhane</surname>, <given-names>A. A.</given-names></string-name> &#x0026; <string-name><surname>Yakhchali</surname>, <given-names>B.</given-names></string-name> <article-title>Evaluation of nine popular de novo assemblers in microbial genome assembly</article-title>. <source>J. Microbiol. Methods</source> <volume>143</volume>, <fpage>32</fpage>&#x2013;<lpage>37</lpage> (<year>2017</year>).</mixed-citation></ref>
<ref id="c8"><label>8.</label><mixed-citation publication-type="journal"><string-name><surname>Wick</surname>, <given-names>R. R.</given-names></string-name>, <string-name><surname>Judd</surname>, <given-names>L. M.</given-names></string-name>, <string-name><surname>Gorrie</surname>, <given-names>C. L.</given-names></string-name> &#x0026; <string-name><surname>Holt</surname>, <given-names>K. E.</given-names></string-name> <article-title>Unicycler: Resolving bacterial genome assemblies from short and long sequencing reads</article-title>. <source>PLoS Comput. Biol</source>. <volume>13</volume>, <fpage>e1005595</fpage> (<year>2017</year>).</mixed-citation></ref>
<ref id="c9"><label>9.</label><mixed-citation publication-type="journal"><string-name><surname>Schatz</surname>, <given-names>M. C.</given-names></string-name> <etal>et al.</etal> <article-title>Hybrid error correction and de novo assembly of single-molecule sequencing reads</article-title>. <source>Nat. Biotechnol</source>. <volume>30</volume>, <fpage>693</fpage>&#x2013;<lpage>700</lpage> (<year>2012</year>).</mixed-citation></ref>
<ref id="c10"><label>10.</label><mixed-citation publication-type="journal"><string-name><surname>Cock</surname>, <given-names>P. J. A.</given-names></string-name>, <string-name><surname>Fields</surname>, <given-names>C. J.</given-names></string-name>, <string-name><surname>Goto</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Heuer</surname>, <given-names>M. L.</given-names></string-name> &#x0026; <string-name><surname>Rice</surname>, <given-names>P. M.</given-names></string-name> <article-title>The Sanger FASTQ file format for sequences with quality scores, and the Solexa/Illumina FASTQ variants</article-title>. <source>Nucleic Acids Res</source>. <fpage>1</fpage>&#x2013;<lpage>5</lpage> (<year>2009</year>).</mixed-citation></ref>
<ref id="c11"><label>11.</label><mixed-citation publication-type="journal"><string-name><surname>Loman</surname>, <given-names>N. J.</given-names></string-name> &#x0026; <string-name><surname>Quinlan</surname>, <given-names>A. R.</given-names></string-name> <article-title>Poretools: a toolkit for analyzing nanopore sequence data</article-title>. <source>Bioinformatics</source> <volume>30</volume>, <fpage>3399</fpage>&#x2013;<lpage>3401</lpage> (<year>2014</year>).</mixed-citation></ref>
<ref id="c12"><label>12.</label><mixed-citation publication-type="journal"><string-name><surname>Antipov</surname>, <given-names>D.</given-names></string-name>, <string-name><surname>Korobeynikov</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>McLean</surname>, <given-names>J. S.</given-names></string-name> &#x0026; <string-name><surname>Pevzner</surname>, <given-names>P. A.</given-names></string-name> <article-title>hybridSPAdes: an algorithm for hybrid assembly of short and long reads</article-title>. <source>Bioinformatics</source> <volume>32</volume>, <fpage>1009</fpage>&#x2013;<lpage>1015</lpage> (<year>2016</year>).</mixed-citation></ref>
<ref id="c13"><label>13.</label><mixed-citation publication-type="journal"><string-name><surname>Gurevich</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Saveliev</surname>, <given-names>V.</given-names></string-name>, <string-name><surname>Vyahhi</surname>, <given-names>N.</given-names></string-name> &#x0026; <string-name><surname>Tesler</surname>, <given-names>G.</given-names></string-name> <article-title>QUAST: quality assessment tool for genome assemblies</article-title>. <source>Bioinformatics</source> <volume>29</volume>, <fpage>1072</fpage>&#x2013;<lpage>1075</lpage> (<year>2013</year>).</mixed-citation></ref>
<ref id="c14"><label>14.</label><mixed-citation publication-type="journal"><string-name><surname>Seemann</surname>, <given-names>T.</given-names></string-name> <article-title>Prokka: rapid prokaryotic genome annotation</article-title>. <source>Bioinformatics</source> <volume>30</volume>, <fpage>2068</fpage>&#x2013;<lpage>2069</lpage> (<year>2014</year>).</mixed-citation></ref>
<ref id="c15"><label>15.</label><mixed-citation publication-type="journal"><string-name><surname>Gish</surname>, <given-names>W.</given-names></string-name>, <string-name><surname>Miller</surname>, <given-names>W.</given-names></string-name>, <string-name><surname>Myers</surname>, <given-names>E. W.</given-names></string-name> &#x0026; <string-name><surname>Lipman</surname>, <given-names>D. J.</given-names></string-name> <article-title>Basic local alignment search tool</article-title>. <source>Journal of molecular</source> &#x2026; (<year>1990</year>).</mixed-citation></ref>
<ref id="c16"><label>16.</label><mixed-citation publication-type="book"><string-name><surname>McKinney</surname>, <given-names>W.</given-names></string-name> <source>Python for Data Analysis: Data Wrangling with Pandas, NumPy, and IPython</source>. (&#x2018;<publisher-name>O&#x2019;Reilly Media, Inc</publisher-name>.&#x2019;, <year>2017</year>).</mixed-citation></ref>
<ref id="c17"><label>17.</label><mixed-citation publication-type="journal"><string-name><surname>Krzywinski</surname>, <given-names>M.</given-names></string-name> <etal>et al.</etal> <article-title>Circos: an information aesthetic for comparative genomics</article-title>. <source>Genome Res</source>. <volume>19</volume>, <fpage>1639</fpage>&#x2013;<lpage>1645</lpage> (<year>2009</year>).</mixed-citation></ref>
<ref id="c18"><label>18.</label><mixed-citation publication-type="journal"><string-name><surname>Robinson</surname>, <given-names>J. T.</given-names></string-name> <etal>et al.</etal> <article-title>Integrative genomics viewer</article-title>. <source>Nat. Biotechnol</source>. <volume>29</volume>, <fpage>24</fpage>&#x2013;<lpage>26</lpage> (<year>2011</year>).</mixed-citation></ref>
<ref id="c19"><label>19.</label><mixed-citation publication-type="journal"><string-name><surname>Quinlan</surname>, <given-names>A. R.</given-names></string-name> &#x0026; <string-name><surname>Hall</surname>, <given-names>I. M.</given-names></string-name> <article-title>BEDTools: a flexible suite of utilities for comparing genomic features</article-title>. <source>Bioinformatics</source> <volume>26</volume>, <fpage>841</fpage>&#x2013;<lpage>842</lpage> (<year>2010</year>).</mixed-citation></ref>
<ref id="c20"><label>20.</label><mixed-citation publication-type="journal"><string-name><surname>Goodall</surname>, <given-names>E. C. A.</given-names></string-name> <etal>et al.</etal> <article-title>The Essential Genome ofEscherichia coliK-12</article-title>. <source>MBio</source> <volume>9</volume>, (<year>2018</year>).</mixed-citation></ref>
<ref id="c21"><label>21.</label><mixed-citation publication-type="journal"><string-name><surname>Chaudhuri</surname>, <given-names>R. R.</given-names></string-name> &#x0026; <string-name><surname>Henderson</surname>, <given-names>I. R.</given-names></string-name> <article-title>The evolution of the Escherichia coli phylogeny</article-title>. <source>Infect. Genet. Evol</source>. <volume>12</volume>, <fpage>214</fpage>&#x2013;<lpage>226</lpage> (<year>2012</year>).</mixed-citation></ref>
</ref-list>
<sec id="s1" sec-type="supplementary-material">
<fig id="figS1" position="float" fig-type="figure">
<label>Supplemental Figure 1.</label>
<caption><p>A Circos representation of data shown in <xref ref-type="fig" rid="fig2">Fig. 2</xref>. 1 &#x003D; CP020543.1, 2&#x003D; CP024090.1, 3 &#x003D; LT906474.1, 4 &#x003D; Our assembly</p></caption>
<graphic xlink:href="347625_figS1.tif"/>
</fig>
<fig id="figS2" position="float" fig-type="figure">
<label>Supplemental Figure 2.</label>
<caption><p>A browser showing alignment, genes, and gaps tracks.</p></caption>
<graphic xlink:href="347625_figS2.tif"/>
</fig>
</sec>
</back>
</article>

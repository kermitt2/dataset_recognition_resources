<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.2d1 20170631//EN" "JATS-archivearticle1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" article-type="article" dtd-version="1.2d1" specific-use="production" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">BIORXIV</journal-id>
<journal-title-group>
<journal-title>bioRxiv</journal-title>
<abbrev-journal-title abbrev-type="publisher">bioRxiv</abbrev-journal-title>
</journal-title-group>
<publisher>
<publisher-name>Cold Spring Harbor Laboratory</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1101/166835</article-id>
<article-version>1.1</article-version>
<article-categories>
<subj-group subj-group-type="author-type">
<subject>Regular Article</subject>
</subj-group>
<subj-group subj-group-type="heading">
<subject>New Results</subject>
</subj-group>
<subj-group subj-group-type="hwp-journal-coll">
<subject>Bioinformatics</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>Fast and memory-efficient noisy read overlapping with KD-trees</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<name>
<surname>Parkhomchuk</surname>
<given-names>Dmitri</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a2">2</xref>
<xref ref-type="author-notes" rid="n1">&#x002A;</xref>
<xref ref-type="corresp" rid="cor1">&#x2020;</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Bremges</surname>
<given-names>Andreas</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a2">2</xref>
<xref ref-type="author-notes" rid="n1">&#x002A;</xref>
</contrib>
<contrib contrib-type="author" corresp="yes">
<name>
<surname>McHardy</surname>
<given-names>Alice C.</given-names>
</name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="corresp" rid="cor1">&#x2020;</xref>
</contrib>
<aff id="a1"><label>1</label><institution>Helmholtz Centre for Infection Research</institution>, 38124 Braunschweig, <country>Germany</country></aff>
<aff id="a2"><label>2</label><institution>German Center for Infection Research (DZIF)</institution>, 38124 Braunschweig, <country>Germany</country></aff>
</contrib-group>
<author-notes>
<fn fn-type="equal" id="n1"><label>&#x002A;</label><p>These authors contributed equally to this work.</p></fn>
<corresp id="cor1"><label>&#x2020;</label>To whom correspondence should be addressed.</corresp>
<fn fn-type="equal" id="n2"><p><bold>Contact:</bold> <email>Alice.McHardy@helmholtz-hzi.de</email>; <email>pdmitri@hotmail.com</email></p></fn>
</author-notes>
<pub-date pub-type="epub">
<year>2017</year>
</pub-date>
<elocation-id>166835</elocation-id>
<history>
<date date-type="received">
<day>21</day>
<month>7</month>
<year>2017</year>
</date>
<date date-type="rev-recd">
<day>21</day>
<month>7</month>
<year>2017</year>
</date>
<date date-type="accepted">
<day>21</day>
<month>7</month>
<year>2017</year>
</date>
</history>
<permissions>
<copyright-statement>&#x00A9; 2017, Posted by Cold Spring Harbor Laboratory</copyright-statement>
<copyright-year>2017</copyright-year>
<license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by/4.0/"><license-p>This pre-print is available under a Creative Commons License (Attribution 4.0 International), CC BY 4.0, as described at <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link></license-p></license>
</permissions>
<self-uri xlink:href="166835.pdf" content-type="pdf" xlink:role="full-text"/>
<abstract>
<sec>
<title>Motivation</title>
<p>Third-generation sequencing technologies produce long, but noisy reads with increasing sequencing throughput and decreasing per-base costs. Detecting read-to-read overlaps in such data is the most computationally intensive step in <italic>de novo</italic> assembly. Recently, efficient algorithms were developed for this task; nearly all of these utilize long <italic>k</italic>-mers (&#x003E;10 bp) to compare reads, but vary in their approaches to indexing, hashing, filtering, and dimensionality reduction.</p>
</sec>
<sec>
<title>Results</title>
<p>We describe an algorithm for efficient overlap detection that directly compares the full spectrum of short <italic>k</italic>-mers, namely tetramers, through geometric embedding and approximate nearest neighbor search in multidimensional KD-trees. A proof of concept implementation detected read-to-read overlaps in bacterial PacBio and ONT datasets with notably lower memory consumption than state-of-the-art approaches and allowed downstream <italic>de novo</italic> assembly into single contigs. We also introduce a sequence-context dependent tagging scheme that contributes to memory and computational efficiency and could be used with other aligning and overlapping algorithms.</p>
</sec>
<sec sec-type="availability">
<title>Availability</title>
<p>A C&#x002B;&#x002B;14 implementation is available under the open source Apache License 2.0 at: <ext-link ext-link-type="uri" xlink:href="https://github.com/dzif/kd-tree-overlapper">https://github.com/dzif/kd-tree-overlapper</ext-link></p>
</sec>
</abstract>
<counts>
<page-count count="10"/>
</counts>
</article-meta>
</front>
<body>
<sec id="s1">
<label>1</label>
<title>Introduction</title>
<p>Genome sequencing and assembly of cultured microbial isolates turned from a challenge into a routine, primarily due to the advent of long-read sequencing (<xref ref-type="bibr" rid="c7">Goodwin <italic>et al</italic>., 2016</xref>; <xref ref-type="bibr" rid="c21">Wibberg <italic>et al</italic>., 2016</xref>). Technologies offered by Pacific Biosciences (PacBio; Menlo Park, CA, USA) and Oxford Nanopore Technologies (ONT; Oxford, UK) currently generate multi-kb sequencing reads resolving long genomic repeats, but deliver a high per-base error rate of around 16&#x0025; (<xref ref-type="bibr" rid="c11">Laehnemann <italic>et al</italic>., 2016</xref>). This inherent noise complicates the identification of read-to-read overlaps, which is typically a prerequisite for <italic>de novo</italic> Overlap-Layout-Consensus (OLC) assembly (<xref ref-type="bibr" rid="c3">Berlin <italic>et al</italic>., 2015</xref>; <xref ref-type="bibr" rid="c13">Loman <italic>et al</italic>., 2015</xref>).</p>
<p>A read-to-read overlap occurs when two reads originate from overlapping genomic regions and thus share the same (local) sequence. General-purpose alignment algorithms have a quadratic dependence on the number of reads when performing an all-vs-all pairwise alignments and thus do not scale well. Moreover, the full base-to-base alignment is not needed to construct an overlap graph; it is sufficient to indicate read-to-read overlap candidates together with their relative orientation (<xref ref-type="bibr" rid="c5">Chu <italic>et al</italic>., 2017</xref>).</p>
<p>As a consequence, multiple programs were developed to efficiently overlap long noisy reads, such as BLASR (<xref ref-type="bibr" rid="c4">Chin <italic>et al</italic>., 2013</xref>), DALIGNER (<xref ref-type="bibr" rid="c16">Myers, 2014</xref>), MHAP (<xref ref-type="bibr" rid="c3">Berlin <italic>et al</italic>., 2015</xref>), GraphMap (<xref ref-type="bibr" rid="c19">Sovi&#x0107; <italic>et al</italic>., 2016</xref>), and Minimap (<xref ref-type="bibr" rid="c12">Li, 2016</xref>). These all search for shared seeds between reads, but differ in the way these seeds are found and thereafter used to determine overlap candidates. A recent review highlights algorithmic features of the available software and evaluates their performance (<xref ref-type="bibr" rid="c5">Chu <italic>et al</italic>., 2017</xref>).</p>
<p>Here, we describe an algorithm that efficiently determines read-to-read overlap candidates by directly comparing short <italic>k</italic>-mer (tetramer) spectra of reads. It maintains a low memory footprint using geometric embedding (<italic>k</italic>mer counting) and approximate nearest neighbor (ANN) search (<xref ref-type="bibr" rid="c15">Muja and Lowe, 2014</xref>) in a KD-tree index (<xref ref-type="bibr" rid="c2">Bentley, 1975</xref>). We show that this approach is as precise as other methods and allows the subsequent assembly of MB-sized bacterial genomes into single contigs.</p>
</sec>
<sec id="s2">
<label>2</label>
<title>Methods</title>
<p>The algorithm consists of five steps: (1) tagging of long reads, to form a set of read subsequences of fixed length; (2) geometric embedding (<italic>k</italic>-mer counting) of each tag; (3) KD-tree index creation; (4) searching approximate nearest neighbors (ANNs) for each tag in this index; and (5) filtering for read overlaps. All steps were implemented in a C&#x002B;&#x002B;14 program available at <ext-link ext-link-type="uri" xlink:href="https://github.com/dzif/kd-tree-overlapper">https://github.com/dzif/kd-tree-overlapper</ext-link>. For convenience, we also provide a statically linked binary and a Docker container adopting the bioboxes standard (<xref ref-type="bibr" rid="c1">Belmann <italic>et al</italic>., 2015</xref>).</p>
<sec id="s2a">
<label>2.1</label>
<title>Tagging of long reads</title>
<p>In this first step, sequence tags, i.e. subsequences of fixed-length, are placed on each read, because eventually a comparison of all tetramer counts between sequences will be utilized (which can straightforwardly be done for tags of the same length). In principle, read tagging can be done by covering long reads either regularly or randomly with the desired tags density. A simple algorithm of GC-profile peak detection is used to anchor tags, because the GC-profile is relatively robust against sequencing errors and invariant to reverse-complementation.</p>
<p>Per default, the GC content is calculated for a sliding window of 100 bp and tags of length 1200 bp are placed at the GC maxima, only allowing the distance between tags to be above a 400 bp. This places tags non-randomly and decreases the overall tag density while keeping all tags aligned in true overlaps, due to them sharing GC-profile peaks in the same subsequences relating to the underlying genome sequence (<xref ref-type="fig" rid="fig1">Fig. 1</xref>). This also prevents that the number of unique tags to grow linearly with increasing sequencing coverage and helps to keep the index size small.</p>
<fig id="fig1" position="float" orientation="portrait" fig-type="figure">
<label>Figure 1:</label>
<caption><p>Tagging of long reads. Sequence tags, i.e. subsequences of fixed-length, are anchored at GC-profile peaks and thus aligned in true overlaps. Shared tags between different reads indicate read-to-read overlap candidates and their relative orientation can be determined if they share at least two pairs of tags.</p></caption>
<graphic xlink:href="166835_fig1.tif"/>
</fig>
</sec>
<sec id="s2b">
<label>2.2</label>
<title>Geometric embedding of each tag</title>
<p>Geometric embedding, or <italic>k</italic>-mer counting, maps a sequence (here: a tag) to a vector of counts (VC) of <italic>k</italic>-mers; the VC contains the ordered set of <italic>k</italic>-mer occurences in a sequence (including zero counts). In our implementation, <italic>k</italic>-mers and their reverse-complements are collapsed in the VC (<xref ref-type="fig" rid="fig2">Figure 2</xref>). If two tags show substantial overlap and have similar sequences the distance between their VCs will be small, corresponding to a small edit distance between the respective tags. Hence, searching for the nearest neighbors of a tag&#x2019;s VC will reveal tags with high sequence similarity to the query tag.</p>
<fig id="fig2" position="float" orientation="portrait" fig-type="figure">
<label>Figure 2:</label>
<caption><p>Geometric embedding of each tag. A sequence tag is mapped to a vector of counts (VC) of canonical <italic>k</italic>-mers, namely tetramers. A small edit distance between two tags also causes a small distance between their VCs, thus enabling an efficient detection of read-to-read overlap candidates.</p></caption>
<graphic xlink:href="166835_fig2.tif"/>
</fig>
</sec>
<sec id="s2c">
<label>2.3</label>
<title>KD-tree index creation</title>
<p>To identify similar VCs (and thus read-to-read overlap candidates) efficiently, we first build a KD-tree index of all VCs using the FLANN software library (<xref ref-type="bibr" rid="c15">Muja and Lowe, 2014</xref>). KD-trees are a generalization of binary search trees for multiple dimensions and allow an efficient exact search in low-dimensional data (<xref ref-type="bibr" rid="c2">Bentley, 1975</xref>). Heuristic methods for finding approximate nearest neighbors (ANNs) in high-dimensional data accelerate the search by several orders of magnitude (<xref ref-type="bibr" rid="c15">Muja and Lowe, 2014</xref>).</p>
</sec>
<sec id="s2d">
<label>2.4</label>
<title>Approximate nearest neighbor search</title>
<p>An exact search in high-dimensional KD-trees is inefficient because of the dimensionality curse (<xref ref-type="bibr" rid="c14">Marimont and Shapiro, 1979</xref>); roughly speaking, the search space grows exponentially with the number of dimensions. However, searching for approximate nearest neighbors (ANNs) is several orders of magnitude faster than exact KD-tree query methods (<xref ref-type="bibr" rid="c15">Muja and Lowe, 2014</xref>). The speed-up is particularly evident for natural, high-dimensional data with high redundancy (i.e. correlation) among the input features, e.g. the number of &#x2018;AAAA&#x2019; tetramers in a sequence is usually positively correlated with the number of &#x2018;AAAC&#x2019; tetramers because they overlap (<xref ref-type="fig" rid="fig2">Figure 2</xref>). ANNs for all VCs are searched for using the KD-tree index created in the previous step.</p>
</sec>
<sec id="s2e">
<label>2.5</label>
<title>Filtering of read overlaps</title>
<p>At this point, each VC (and thus each tag) has been assigned a list of ANNs. ANNs of tags found on different reads indicate that these originate from the same underlying sequence. Double (or more) hits, corresponding to two pairs of tags being nearest neighbors to each other and with the tags of each pair being spread across the same two reads, are extracted. Read-to-read overlap candidates are reported based on the orientation of the tag pairs relative to each other in their correct orientation (<xref ref-type="fig" rid="fig1">Figure 1</xref>). They are reported in the MHAP output format, a tabular format compatible with e.g. the Canu assembler (<xref ref-type="bibr" rid="c9">Koren <italic>et al</italic>., 2017</xref>).</p>
<p>The conceptual correspondence between the overlapping read pairs and the KD-tree index is shown in <xref ref-type="fig" rid="fig3">Figure 3</xref>.</p>
<fig id="fig3" position="float" orientation="portrait" fig-type="figure">
<label>Figure 3:</label>
<caption><p>Schematic representation of overlapping reads and the KD-tree index. Shared tags between two reads indicate read-to-read overlap candidates. These tags&#x2019;s VCs are located close-by in the KD-tree and are detected efficiently using approximate nearest neighbors (ANNs) search.</p></caption>
<graphic xlink:href="166835_fig3.tif"/>
</fig>
</sec>
</sec>
<sec id="s3">
<label>3</label>
<title>Results</title>
<p>Building upon the recent evaluation of long read overlappers, we benchmarked KD-tree using the datasets from <xref ref-type="bibr" rid="c5">Chu <italic>et al</italic>., 2017</xref>, i.e. ONT SQKMAP-006 and PacBio P6-C4 <italic>E. coli</italic> sequencing reads. We include their results, representing the &#x201C;best&#x201D; setting for each tool (those with the highest F1 score after parameter optimization), and additionally ran MHAP v2.1.1, Minimap v0.2-r124, and KD-tree (kd) v1.0 with default and recommended settings. All evaluation steps are documented in a GitHub repository (<ext-link ext-link-type="uri" xlink:href="https://github.com/dzif/kd-tree-evaluation">https://github.com/dzif/kd-tree-evaluation</ext-link>) to enable computational reproducibility.</p>
<sec id="s3a">
<label>3.1</label>
<title>Sensitivity and precision</title>
<p>We experimented with <italic>k</italic>-mers of up to <italic>k</italic>=7 on simulated and real long read datasets to empirically determine the <italic>k</italic>-mer length providing the best performance in terms of sensitivity, precision, CPU consumption and RAM requirements for KD-tree. We found that trimer spectra are not specific enough to detect true overlaps with a high precision and observed that sometimes, unrelated sequences had similar VCs by chance (data not shown). However, in tests with simulated reads from bacterial and mammalian genomes, we found that starting from tetramers, the specificity of VCs was sufficient to detect true read overlaps with high precision. We thus used tetramers, which generates 136-dimensional data points for the VCs.</p>
<p>With default settings, KD-tree generated 2&#x2013;3 times fewer overlapping pairs than MHAP (<xref ref-type="table" rid="tbl1">Table 1</xref>). Yet, we obtained complete and single-contig assemblies for both the PacBio and ONT <italic>E. coli</italic> long read datasets, using KD-tree together with the Canu assembler (v1.5; <xref ref-type="bibr" rid="c9">Koren <italic>et al</italic>., 2017</xref>). This indicates that exhaustive overlap detection is not necessary for genome assembly, especially if the overlapping is precise and sequencing depth high. While this was observed (and exploited) before (<xref ref-type="bibr" rid="c12">Li, 2016</xref>), we found that a sensitivity as low as 20&#x0025; is sufficient for single-contig assembly of microbial genomes. Subsequent assembly polishing, e.g. using Quiver (<xref ref-type="bibr" rid="c4">Chin <italic>et al</italic>., 2013</xref>), Nanopolish (<xref ref-type="bibr" rid="c13">Loman <italic>et al</italic>., 2015</xref>), or Racon (<xref ref-type="bibr" rid="c20">Vaser <italic>et al</italic>., 2017</xref>), is recommended in either case and &#x2013; as long as the assembly is structurally correct &#x2013; determines the per-base assembly quality.</p>
<table-wrap id="tbl1" orientation="portrait" position="float">
<label>Table 1:</label>
<caption><p>Sensitivity, precision, and F1 scores on real PacBio and ONT long read datasets. We determined the ground truth to compare against by mapping the reads to the finished <italic>E. coli</italic> K12 MG1655 reference genome. KD-tree is less sensitive &#x2013; by design &#x2013; but as precise as other tools.</p></caption>
<graphic xlink:href="166835_tbl1.tif"/>
</table-wrap>
<p>For a region with coverage <italic>N</italic>, the number of all possible overlap pairs is (<italic>N &#x2212;</italic> 1)<sup>2</sup><italic>/</italic>2, while the number of non-redundant overlaps is only (<italic>N &#x2212;</italic> 1). A quadratic growth of runtime for high coverage datasets is avoided by our algorithm by reporting a limited number of ANNs (40) for each tag.</p>
</sec>
<sec id="s3b">
<label>3.2</label>
<title>Computational performance</title>
<p>We measured the runtime and memory usage for KD-tree, MHAP, and Minimap. MHAP is the default and widely used overlapper in the Canu assembly pipeline and Minimap is the most computationally efficient software to date (<xref ref-type="bibr" rid="c5">Chu <italic>et al</italic>., 2017</xref>). All programs were run on a single CPU, though the FLANN software library supports and scales well also to multiple cores and distributed configurations.</p>
<p>KD-tree was faster than MHAP and required less memory than MHAP and Minimap (<xref ref-type="table" rid="tbl2">Table 2</xref>). For the ONT <italic>E. coli</italic> dataset with &#x007E;40,000 reads, loading, embedding, and tagging required 12 minutes. The tag number was &#x007E;625,000, the indexing time one minute, and the ANN search time less than two minutes, amounting to a total runtime of 18 minutes. In comparison, MHAP required one hour to detect read-to-read overlaps for this dataset. We anticipate that with less sensitive settings (suitable for higher coverage and lower noise) for a PacBio read dataset, the speed of MHAP would improve.</p>
<table-wrap id="tbl2" orientation="portrait" position="float">
<label>Table 2:</label>
<caption><p>Runtime and memory usage on real long read datasets. The benchmarking PacBio and ONT datasets were generated from <italic>E. coli</italic> K12 MG1655, and contain 82,738 reads (748 Mbp) and 39,921 reads (388 Mbp), respectively. Elapsed time and peak memory usage were measured using GNU time for single-threaded program execution.</p></caption>
<graphic xlink:href="166835_tbl2.tif"/>
</table-wrap>
<p>KD-tree also demonstrated a substantial decrease in memory consumption; it required 15&#x2013;20 times less memory than MHAP (and a few times less than Minimap) for these datasets. Aside from the implementation specifics we assume that the memory efficiency of our implementation is related to the higher compactness of the KD-tree index in comparison to the hash tables used by other programs (<xref ref-type="bibr" rid="c15">Muja and Lowe, 2014</xref>).</p>
</sec>
</sec>
<sec id="s4">
<label>4</label>
<title>Discussion</title>
<p>We have demonstrated the value of a new kind of algorithm for overlapping long and noisy reads, which uses short <italic>k</italic>-mer spectra and ANN KD-tree search. Our implementation performed comparably and in some aspects (e.g. memory efficiency, algorithmic and software implementation simplicity) challenging to state-of-the-art overlappers.</p>
<p>The context-aware tagging technique implemented in KD-tree limits the growth of the index size with increasing coverage, thus allowing a more efficient processing of high-coverage datasets. The computational complexity for all-vs-all comparisons of <italic>N</italic> data points with KD-trees is still <italic>N</italic> &#x002A; <italic>log</italic>(<italic>N</italic>), similar to other overlappers. With context-unaware indexing of a read dataset, the index size will grow linearly with the dataset size. However, if the index is constructed dynamically, discarding redundant entries on-the-fly, our tagging technique can allow processing time to grow linearly with data set size, as the index size stops growing with coverage. Specifically, for high-coverage (hence high redundancy) datasets, the dictionary size of unique (context-specific) tags (and hence the index) can be limited in a genome as coverage grows to multiples of genome size. For example, tagging a mammalian genome with one tag per 1 kb average density would require about 3 millions unique tags, which require less than 4 GB of memory in a KD-tree index. Sequencing data can then be streamed efficiently through this index without further memory consumption (since the index is complete), and each read will be aligned to a few tags, producing an overlap graph.</p>
<p>Surprisingly, short <italic>k</italic>-mers, starting from tetramers we used here, already produced sufficiently precise spectrums for finding overlaps. In comparison, other overlappers and aligners use relatively large values of <italic>k</italic> (&#x003E;10). The algorithm performed well also for short tags (i.e. from 50 bp), thus another usage could be the joint processing of hybrid data sets with both short and long reads (<xref ref-type="bibr" rid="c8">Koren <italic>et al</italic>., 2012</xref>; <xref ref-type="bibr" rid="c10">Kunath <italic>et al</italic>., 2017</xref>). Similarly to Minimap and other programs, it would also be applicable for whole-genome alignments and comparisons, and possibly for other -omics applications where structuring of multidimensional data is needed.</p>
<p>Likely further gains in speed and memory efficiency are possible. For example, it might be possible to significantly reduce the considered number of <italic>k</italic>-mers by with a minimizer-like approach (<xref ref-type="bibr" rid="c18">Roberts <italic>et al</italic>., 2004</xref>). We also found that on-the-fly points insertion/deletion into the KD-tree index and searching tags one-by-one (not in a single batch) did not significantly affect performance, so one could build an index discarding redundant tags one-the-fly, further improving efficiency for datasets with high coverage.</p>
<p>With read lengths and throughput of the long reads sequencing technologies continuously increasing at simultaneously decreasing costs, there will be emerging demand for methods allowing efficient handling of long reads. Single-molecule technologies are likely to retain substantial noise, inherent to experimenting at this physical scale. Hence the demand for efficient error-tolerant overlappers and aligners for long reads is likely sustainable. At the same time the trend of miniaturization of sequencers (e.g. ONT&#x2019;s MinION) and their use as portable devices in field applications (<xref ref-type="bibr" rid="c17">Quick <italic>et al</italic>., 2016</xref>; <xref ref-type="bibr" rid="c6">Faria <italic>et al</italic>., 2017</xref>) will further increase the need for computational processing efficiency.</p>
</sec>
</body>
<back>
<ack>
<title>Acknowledgements</title>
<p>We thank Adrian Fritz for feedback on earlier versions of the manuscript, Justin Chu for helpful advice about benchmarking data and setup, and Peter Belmann for building the KD-tree biobox.</p>
</ack>
<sec id="s5" sec-type="funding">
<title>Funding</title>
<p>Supported by DZIF (German Center for Infection Research).</p>
</sec>
<ref-list>
<title>References</title>
<ref id="c1"><mixed-citation publication-type="journal"><string-name><surname>Belmann</surname>, <given-names>P.</given-names></string-name> <etal>et al.</etal> (<year>2015</year>). <article-title>Bioboxes: standardised containers for interchangeable bioinformatics software</article-title>. <source>Gigascience</source>, <volume>4</volume>, <fpage>47</fpage>. doi:<pub-id pub-id-type="doi">10.1186/s13742-015-0087-0</pub-id>.</mixed-citation></ref>
<ref id="c2"><mixed-citation publication-type="journal"><string-name><surname>Bentley</surname>, <given-names>J. L.</given-names></string-name> (<year>1975</year>). <article-title>Multidimensional binary search trees used for associative searching</article-title>. <source>Commun. ACM</source>, <volume>18</volume>(<issue>9</issue>), <fpage>509</fpage>&#x2013;<lpage>517</lpage>. doi:<pub-id pub-id-type="doi">10.1145/361002.361007</pub-id>.</mixed-citation></ref>
<ref id="c3"><mixed-citation publication-type="journal"><string-name><surname>Berlin</surname>, <given-names>K.</given-names></string-name> <etal>et al.</etal> (<year>2015</year>). <article-title>Assembling large genomes with single-molecule sequencing and locality-sensitive hashing</article-title>. <source>Nat. Biotechnol.</source>, <volume>33</volume>(<issue>6</issue>), <fpage>623</fpage>&#x2013;<lpage>630</lpage>. doi:<pub-id pub-id-type="doi">10.1038/nbt.3238</pub-id>.</mixed-citation></ref>
<ref id="c4"><mixed-citation publication-type="journal"><string-name><surname>Chin</surname>, <given-names>C. S.</given-names></string-name> <etal>et al.</etal> (<year>2013</year>). <article-title>Nonhybrid, finished microbial genome assemblies from long-read SMRT sequencing data</article-title>. <source>Nat. Methods</source>, <volume>10</volume>(<issue>6</issue>), <fpage>563</fpage>&#x2013;<lpage>569</lpage>. doi: <pub-id pub-id-type="doi">10.1038/nmeth.2474</pub-id>.</mixed-citation></ref>
<ref id="c5"><mixed-citation publication-type="journal"><string-name><surname>Chu</surname>, <given-names>J.</given-names></string-name> <etal>et al.</etal> (<year>2017</year>). <article-title>Innovations and challenges in detecting long read overlaps: an evaluation of the state-of-the-art</article-title>. <source>Bioinformatics</source>, <volume>33</volume>(<issue>8</issue>), <fpage>1261</fpage>&#x2013;<lpage>1270</lpage>. doi:<pub-id pub-id-type="doi">10.1093/bioinformatics/btw811</pub-id>.</mixed-citation></ref>
<ref id="c6"><mixed-citation publication-type="journal"><string-name><surname>Faria</surname>, <given-names>N. R.</given-names></string-name> <etal>et al.</etal> (<year>2017</year>). <article-title>Establishment and cryptic transmission of Zika virus in Brazil and the Americas</article-title>. <source>Nature</source>, <volume>546</volume>(<issue>7658</issue>), <fpage>406</fpage>&#x2013;<lpage>410</lpage>. doi:<pub-id pub-id-type="doi">10.1038/nature22401</pub-id>.</mixed-citation></ref>
<ref id="c7"><mixed-citation publication-type="journal"><string-name><surname>Goodwin</surname>, <given-names>S.</given-names></string-name> <etal>et al.</etal> (<year>2016</year>). <article-title>Coming of age: ten years of next-generation sequencing technologies</article-title>. <source>Nat. Rev. Genet.</source>, <volume>17</volume>(<issue>6</issue>), <fpage>333</fpage>&#x2013;<lpage>351</lpage>. doi:<pub-id pub-id-type="doi">10.1038/nrg.2016.49</pub-id>.</mixed-citation></ref>
<ref id="c8"><mixed-citation publication-type="journal"><string-name><surname>Koren</surname>, <given-names>S.</given-names></string-name> <etal>et al.</etal> (<year>2012</year>). <article-title>Hybrid error correction and de novo assembly of single-molecule sequencing reads</article-title>. <source>Nat. Biotechnol.</source>, <volume>30</volume>(<issue>7</issue>), <fpage>693</fpage>&#x2013;<lpage>700</lpage>. doi:<pub-id pub-id-type="doi">10.1038/nbt.2280</pub-id>.</mixed-citation></ref>
<ref id="c9"><mixed-citation publication-type="journal"><string-name><surname>Koren</surname>, <given-names>S.</given-names></string-name> <etal>et al.</etal> (<year>2017</year>). <article-title>Canu: scalable and accurate long-read assembly via adaptive k-mer weighting and repeat separation</article-title>. <source>Genome Res.</source>, <volume>27</volume>(<issue>5</issue>), <fpage>722</fpage>&#x2013;<lpage>736</lpage>. doi:<pub-id pub-id-type="doi">10.1101/gr.215087.116</pub-id>.</mixed-citation></ref>
<ref id="c10"><mixed-citation publication-type="journal"><string-name><surname>Kunath</surname>, <given-names>B. J.</given-names></string-name> <etal>et al.</etal> (<year>2017</year>). <article-title>Metagenomics and CAZyme Discovery</article-title>. <source>Methods Mol. Biol.</source>, <volume>1588</volume>, <fpage>255</fpage>&#x2013;<lpage>277</lpage>. doi:<pub-id pub-id-type="doi">10.1007/978-1-4939-6899-2_20</pub-id>.</mixed-citation></ref>
<ref id="c11"><mixed-citation publication-type="journal"><string-name><surname>Laehnemann</surname>, <given-names>D.</given-names></string-name> <etal>et al.</etal> (<year>2016</year>). <article-title>Denoising DNA deep sequencing data-high-throughput sequencing errors and their correction</article-title>. <source>Brief. Bioinformatics</source>, <volume>17</volume>(<issue>1</issue>), <fpage>154</fpage>&#x2013;<lpage>179</lpage>. doi:<pub-id pub-id-type="doi">10.1093/bib/bbv029</pub-id>.</mixed-citation></ref>
<ref id="c12"><mixed-citation publication-type="journal"><string-name><surname>Li</surname>, <given-names>H.</given-names></string-name> (<year>2016</year>). <article-title>Minimap and miniasm: fast mapping and de novo assembly for noisy long sequences</article-title>. <source>Bioinformatics</source>, <volume>32</volume>(<issue>14</issue>), <fpage>2103</fpage>&#x2013;<lpage>2110</lpage>. doi:<pub-id pub-id-type="doi">10.1093/bioinformatics/btw152</pub-id>.</mixed-citation></ref>
<ref id="c13"><mixed-citation publication-type="journal"><string-name><surname>Loman</surname>, <given-names>N. J.</given-names></string-name> <etal>et al.</etal> (<year>2015</year>). <article-title>A complete bacterial genome assembled de novo using only nanopore sequencing data</article-title>. <source>Nat. Methods</source>, <volume>12</volume>(<issue>8</issue>), <fpage>733</fpage>&#x2013;<lpage>735</lpage>. doi:<pub-id pub-id-type="doi">10.1038/nmeth.3444</pub-id>.</mixed-citation></ref>
<ref id="c14"><mixed-citation publication-type="journal"><string-name><surname>Marimont</surname>, <given-names>R. B.</given-names></string-name> and <string-name><surname>Shapiro</surname>, <given-names>M. B.</given-names></string-name> (<year>1979</year>). <article-title>Nearest neighbour searches and the curse of dimensionality</article-title>. <source>IMA Journal of Applied Mathematics</source>, <volume>24</volume>(<issue>1</issue>), <fpage>59</fpage>&#x2013;<lpage>70</lpage>. doi:<pub-id pub-id-type="doi">10.1093/imamat/24.1.59</pub-id>.</mixed-citation></ref>
<ref id="c15"><mixed-citation publication-type="journal"><string-name><surname>Muja</surname>, <given-names>M.</given-names></string-name> and <string-name><surname>Lowe</surname>, <given-names>D. G.</given-names></string-name> (<year>2014</year>). <article-title>Scalable Nearest Neighbor Algorithms for High Dimensional Data</article-title>. <source>IEEE Trans Pattern Anal Mach Intell</source>, <volume>36</volume>(<issue>11</issue>), <fpage>2227</fpage>&#x2013;<lpage>2240</lpage>. doi:<pub-id pub-id-type="doi">10.1109/TPAMI.2014.2321376</pub-id>.</mixed-citation></ref>
<ref id="c16"><mixed-citation publication-type="confproc"><string-name><surname>Myers</surname>, <given-names>G.</given-names></string-name> (<year>2014</year>). <article-title>Efficient local alignment discovery amongst noisy long reads</article-title>. In <conf-name>Lecture Notes in Computer Science</conf-name>, pages <fpage>52</fpage>&#x2013;<lpage>67</lpage>. <conf-loc>Springer Berlin Heidelberg</conf-loc>. doi:<pub-id pub-id-type="doi">10.1007/978-3-662-44753-6_5</pub-id>].</mixed-citation></ref>
<ref id="c17"><mixed-citation publication-type="journal"><string-name><surname>Quick</surname>, <given-names>J.</given-names></string-name> <etal>et al.</etal> (<year>2016</year>). <article-title>Real-time, portable genome sequencing for Ebola surveillance</article-title>. <source>Nature</source>, <volume>530</volume>(<issue>7589</issue>), <fpage>228</fpage>&#x2013;<lpage>232</lpage>. doi:<pub-id pub-id-type="doi">10.1038/nature16996</pub-id>.</mixed-citation></ref>
<ref id="c18"><mixed-citation publication-type="journal"><string-name><surname>Roberts</surname>, <given-names>M.</given-names></string-name> <etal>et al.</etal> (<year>2004</year>). <article-title>Reducing storage requirements for biological sequence comparison</article-title>. <source>Bioinformatics</source>, <volume>20</volume>(<issue>18</issue>), <fpage>3363</fpage>&#x2013;<lpage>3369</lpage>. doi:<pub-id pub-id-type="doi">10.1093/bioinformatics/bth408</pub-id>.</mixed-citation></ref>
<ref id="c19"><mixed-citation publication-type="journal"><string-name><surname>Sovi&#x0107;</surname>, <given-names>I.</given-names></string-name> <etal>et al.</etal> (<year>2016</year>). <article-title>Fast and sensitive mapping of nanopore sequencing reads with GraphMap</article-title>. <source>Nat Commun</source>, <volume>7</volume>, <fpage>11307</fpage>. doi:<pub-id pub-id-type="doi">10.1038/ncomms11307</pub-id>.</mixed-citation></ref>
<ref id="c20"><mixed-citation publication-type="journal"><string-name><surname>Vaser</surname>, <given-names>R.</given-names></string-name> <etal>et al.</etal> (<year>2017</year>). <article-title>Fast and accurate de novo genome assembly from long uncorrected reads</article-title>. <source>Genome Res.</source>, <volume>27</volume>(<issue>5</issue>), <fpage>737</fpage>&#x2013;<lpage>746</lpage>. doi:<pub-id pub-id-type="doi">10.1101/gr.214270.116</pub-id>.</mixed-citation></ref>
<ref id="c21"><mixed-citation publication-type="journal"><string-name><surname>Wibberg</surname>, <given-names>D.</given-names></string-name> <etal>et al.</etal> (<year>2016</year>). <article-title>Finished genome sequence and methylome of the cyanide-degrading Pseudomonas pseudoalcaligenes strain CECT5344 as resolved by single-molecule real-time sequencing</article-title>. <source>J. Biotechnol.</source>, <volume>232</volume>, <fpage>61</fpage>&#x2013;<lpage>68</lpage>. doi:<pub-id pub-id-type="doi">10.1016/j.jbiotec.2016.04.008</pub-id>.</mixed-citation></ref>
</ref-list>
</back>
</article>
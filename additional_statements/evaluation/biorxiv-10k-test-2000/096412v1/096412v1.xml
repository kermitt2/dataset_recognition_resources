<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.2d1 20170631//EN" "JATS-archivearticle1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" article-type="article" dtd-version="1.2d1" specific-use="production" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">BIORXIV</journal-id>
<journal-title-group>
<journal-title>bioRxiv</journal-title>
<abbrev-journal-title abbrev-type="publisher">bioRxiv</abbrev-journal-title>
</journal-title-group>
<publisher>
<publisher-name>Cold Spring Harbor Laboratory</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1101/096412</article-id>
<article-version>1.1</article-version>
<article-categories>
<subj-group subj-group-type="author-type">
<subject>Regular Article</subject>
</subj-group>
<subj-group subj-group-type="heading">
<subject>New Results</subject>
</subj-group>
<subj-group subj-group-type="hwp-journal-coll">
<subject>Bioinformatics</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>Unicycler: resolving bacterial genome assemblies from short and long sequencing reads</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">http://orcid.org/0000-0001-8349-0778</contrib-id>
<name><surname>Wick</surname><given-names>Ryan R.</given-names></name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a2">2</xref>
<xref ref-type="corresp" rid="cor1">&#x002A;</xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-3613-4839</contrib-id>
<name><surname>Judd</surname><given-names>Louise M.</given-names></name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a2">2</xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-2637-2529</contrib-id>
<name><surname>Gorrie</surname><given-names>Claire L.</given-names></name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a2">2</xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-3949-2471</contrib-id>
<name><surname>Holt</surname><given-names>Kathryn E.</given-names></name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a2">2</xref>
</contrib>
<aff id="a1"><label>1</label><institution>Centre for Systems Genomics, The University of Melbourne</institution>, Victoria, <country>Australia</country></aff>
<aff id="a2"><label>2</label><institution>Department of Biochemistry and Molecular Biology, Bio21 Molecular Science and Biotechnology Institute, The University of Melbourne</institution>, Victoria, <country>Australia</country></aff>
</contrib-group>
<author-notes>
<corresp id="cor1">
<label>&#x002A;</label>Corresponding author, email: <email>rrwick@gmail.com</email>
</corresp>
</author-notes>
<pub-date pub-type="epub">
<year>2016</year>
</pub-date>
<elocation-id>096412</elocation-id>
<history>
<date date-type="received">
<day>22</day>
<month>12</month>
<year>2016</year>
</date>
<date date-type="accepted">
<day>22</day>
<month>12</month>
<year>2016</year>
</date>
</history>
<permissions><copyright-statement>&#x00A9; 2016, Posted by Cold Spring Harbor Laboratory</copyright-statement>
<copyright-year>2016</copyright-year>
<license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by/4.0/"><license-p>This pre-print is available under a Creative Commons License (Attribution 4.0 International), CC BY 4.0, as described at <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link></license-p></license>
</permissions>
<self-uri xlink:href="096412.pdf" content-type="pdf" xlink:role="full-text"/>
<abstract>
<label>1.</label>
<title>Abstract</title>
<p>The Illumina DNA sequencing platform generates accurate but short reads, which can be used to produce accurate but fragmented genome assemblies. Pacific Biosciences and Oxford Nanopore Technologies DNA sequencing platforms generate long reads that can produce more complete genome assemblies, but the sequencing is more expensive and error prone. There is significant interest in combining data from these complementary sequencing technologies to generate more accurate &#x201C;hybrid&#x201D; assemblies. However, few tools exist that truly leverage the benefits of both types of data, namely the accuracy of short reads and the structural resolving power of long reads. Here we present Unicycler, a new tool for assembling bacterial genomes from a combination of short and long reads, which produces assemblies that are accurate, complete and cost-effective. Unicycler builds an initial assembly graph from short reads using the <italic>de novo</italic> assembler SPAdes and then simplifies the graph using information from short and long reads. Unicycler utilises a novel semi-global aligner, which is used to align long reads to the assembly graph. Tests on both synthetic and real reads show Unicycler can assemble larger contigs with fewer misassemblies than other hybrid assemblers, even when long read depth and accuracy are low. Unicycler is open source (GPLv3) and available at <ext-link ext-link-type="uri" xlink:href="http://github.com/rrwick/Unicycler">github.com/rrwick/Unicycler</ext-link>.</p>
</abstract>
<counts>
<page-count count="20"/>
</counts>
</article-meta>
</front>
<body>
<sec id="s1">
<label>2</label>
<title>Introduction</title>
<p>Bacterial genomics is currently dominated by Illumina sequencing platforms. Illumina reads are accurate, have a low cost per base and have enabled widespread use of whole genome sequencing. However, much Illumina sequencing uses short fragments (500 bp or less) that are smaller than many repetitive elements in bacterial genomes<sup><xref ref-type="bibr" rid="c1">1</xref></sup>. This prevents short read assembly tools (assemblers) from resolving the full genome, and their assemblies are instead fragmented into dozens of contiguous sequences (contigs). Consequently, most available bacterial genomes are incomplete, which hinders large-scale comparative genomic studies.</p>
<p>Pacific Biosciences (PacBio) and Oxford Nanopore Technologies (ONT) sequencing platforms can sequence DNA fragments of 10 kbp or longer, but at a much higher cost per base than Illumina platforms. PacBio and ONT also have much higher per-base error rates than Illumina reads (5&#x2013;15&#x0025; vs &#x003C;1&#x0025;), although PacBio and ONT long reads are usually sufficient to complete bacterial genome assemblies with reasonable consensus accuracy<sup><xref ref-type="bibr" rid="c2">2</xref>,<xref ref-type="bibr" rid="c3">3</xref></sup>. Hence most researchers must choose between generating fragmented draft assemblies for many isolates with inexpensive Illumina sequencing, or generating complete assemblies for fewer isolates with expensive long read technologies. Hybrid assembly, which uses a combination of short and long reads, offers an alternative. In this approach, short reads are used to produce accurate contigs and long reads provide the information to scaffold them together. This requires relatively few long reads and can thus be the most cost-effective route to a complete bacterial genome.</p>
<p>Despite recent developments in long read technologies, Illumina reads are widely used in public health and research laboratories<sup><xref ref-type="bibr" rid="c4">4</xref></sup>, and are likely to remain so for some time due to their high accuracy and low cost. Moreover, Illumina data is already available for hundreds of thousands of bacterial isolates, and most of these are unlikely to be replaced with long read-only sequencing data. It is therefore likely that research and clinical labs will continue to use low cost Illumina reads for most samples and generate long reads as necessary to complete genomes of interest. Hybrid assembly, which requires fewer long reads than long read-only assembly, is the most cost-effective means of achieving this goal.</p>
<p>Multiple scaffolding tools exist to join Illumina contigs together using paired short reads or long reads, however mistakes are common and lead to structural errors (misassemblies) in the sequence<sup><xref ref-type="bibr" rid="c5">5</xref></sup>. Such errors could be avoided by performing scaffolding operations on assembly graphs &#x2013; data structures which contain both contigs and their interconnections<sup><xref ref-type="bibr" rid="c6">6</xref></sup> &#x2013; rather than contig sequences alone. Here we present Unicycler, a new hybrid assembly pipeline for bacterial isolate genomes. Unicycler first assembles short reads into a highly accurate and connected assembly graph, and then scaffolds the graph with long reads. If the long read coverage is sufficient, it can produce a completed assembly with one contig per replicon. The assembly graph constrains possible paths through repeat regions, allowing Unicycler to achieve low misassembly rates. It is therefore an ideal assembler where the structural accuracy of the assembly is important.</p>
</sec>
<sec id="s2">
<label>3</label>
<title>Design and Implementation</title>
<p>To maximise ease of use, Unicycler encapsulates its entire pipeline (<xref ref-type="fig" rid="fig1"><bold>Figure 1</bold></xref>) in a single command and automatically determines low-level parameters so users can expect good results with default settings.</p>
<fig id="fig1" position="float">
<label>Figure 1:</label>
<caption><title>Key steps in the Unicycler pipeline.</title>
</caption>
<graphic xlink:href="096412_fig1.tif"/></fig>
<sec id="s2a">
<label>3.1.</label>
<title>Short read assembly</title>
<p>Unicycler uses SPAdes (v3.6.2 or later) to construct a De Bruijn graph assembly using a wide range of k-mer sizes: 10 values spanning 20&#x2013;95&#x0025; of the Illumina read length (not exceeding 127, the largest k-mer possible in SPAdes)<sup><xref ref-type="bibr" rid="c7">7</xref></sup>. In SPAdes, large k-mers result in more complete assemblies, but excessively large k-mers can cause a fragmented graph with dead ends. Unicycler assigns a score to each k-mer graph <inline-formula><alternatives><inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="096412_inline1.gif"/></alternatives></inline-formula> <italic>c</italic> &#x003D; number of contigs, <italic>d</italic> &#x003D; number of dead ends) and the highest scoring graph is selected as an ideal balance between minimising both contig count and dead ends (<xref ref-type="fig" rid="fig1"><bold>Figure 1A</bold></xref>). As some contamination is possible in sequencing read sets (particularly when multiplexing, which is a common strategy for bacterial isolate sequencing on Illumina), Unicycler then removes contigs with a depth of less than half the median graph depth, unless doing so would create a dead end. This removes most contamination while leaving important graph structures intact.</p>
</sec>
<sec id="s2b">
<label>3.2.</label>
<title>Multiplicity</title>
<p>To resolve the graph as accurately as possible, Unicycler must distinguish between single-copy contigs (representing sequences that occur once in the genome, multiplicity <italic>k</italic> &#x003D; 1) and repeat contigs (representing sequences that occur multiple times in the genome, multiplicity <italic>k</italic> &#x003E; 1). When a bacterial genome consists of a single chromosome with no additional replicons, then for each contig <italic>x</italic>, its median read depth <italic>d<sub>x</sub></italic> is a good indicator of its multiplicity <italic>k<sub>x</sub></italic>. Single-copy contigs will have a median depth <italic>d<sub>x</sub></italic> close to <italic>D</italic>, the median depth per base across the entire assembly, while repeat contigs will have a median depth near a multiple of that value (i.e. <italic>d<sub>x</sub></italic> &#x007E; <italic>k<sub>x</sub>D</italic>).</p>
<p>The relationship between median read depth and multiplicity is more complicated when the genome contains multiple replicons present at different copy number per cell. For example, small plasmids are often present in multiple copies, while large conjugative plasmids are often present in a single copy. To accommodate this, Unicycler also considers graph connections to help determine contig multiplicity. Repeat contigs typically have multiple graph connections at their start and end, while single-copy contigs usually have only a single connection at each end. These trends break down when the assembly graph is fragmented, which is one reason why Unicycler aims to minimise the number of dead ends when determining the optimal short read assembly graph. To determine multiplicity values, Unicycler therefore uses both depth and connectivity information. Initially, a multiplicity of one is assigned to all contigs that are near the median depth and have no more than one connection at either end. A greedy algorithm then propagates multiplicity where graph connections and depth are in close agreement (<xref ref-type="fig" rid="fig1"><bold>Figure 1B</bold></xref>). This process is designed to distinguishsingle-copy contigs from repeats, even in plasmid-rich genomes.</p>
</sec>
<sec id="s2c">
<label>3.3.</label>
<title>Bridges</title>
<p>Unicycler scaffolds assembly graphs by constructing bridge contigs to connect pairs of single-copy contigs. Before bridging, single-copy contigs connect via multiple alternative paths containing one or more repeat contigs. After bridging, they connect via a simple, unambiguous path (<xref ref-type="fig" rid="fig1"><bold>Figure 1C</bold></xref>). Bridges thus simplify the graph by resolving repeats. There are two primary sources of information available to Unicycler for creating bridges: read pair orientation and, more importantly, long reads.</p>
</sec>
<sec id="s2d">
<label>3.4.</label>
<title>Graph bridging using read pair information</title>
 <p>When SPAdes assembles paired-end reads, it uses the read pair information to find paths through the assembly graph in a process known as repeat resolution (RR)<sup><xref ref-type="bibr" rid="c8">8</xref></sup>. SPAdes assemblies after RR (contigs.fasta output file) contain longer contigs than the assembly graph, but they are no longer in graph form. Unicycler uses SPAdes RR to build bridges and simplify the assembly while keeping it in graph form (<xref ref-type="fig" rid="fig1"><bold>Figure 1C</bold></xref>). Furthermore, SPAdes RR may introduce misassemblies, so Unicycler excludes RR which spans a repeat longer than the typical read pair insert size, as such repeats are difficult to resolve with short read data alone. In this way, Unicycler produces an assembly graph which contains paired-end RR while avoiding some of the misassemblies that can occur in SPAdes.</p>
</sec>
<sec id="s2e">
<label>3.5.</label>
<title>Semi-global long read alignment</title>
<p>While short reads can resolve repeats up to the insert size of the library (typically &#x003C;1000 bp), long reads provide a much more powerful source of scaffolding information. As a first step in long read bridging, Unicycler aligns all available long reads to the single-copy contigs. Since the long and short reads must be from the same biological sample, there should be no genuine structural discrepancies between the long reads and contigs. Semi-global alignment (end-gap free alignment) is therefore appropriate, where alignments can only clip when the end of a sequence is reached. Most available long read alignment tools such as BLASR<sup><xref ref-type="bibr" rid="c9">9</xref></sup>, BWA-MEM<sup><xref ref-type="bibr" rid="c10">10</xref></sup>, BLAST<sup><xref ref-type="bibr" rid="c11">11</xref></sup> and LAST<sup><xref ref-type="bibr" rid="c12">12</xref></sup> perform local alignment, so Unicycler implements semi-global alignment directly using the SeqAn C&#x002B;&#x002B; library<sup><xref ref-type="bibr" rid="c13">13</xref></sup>. To align low accuracy reads, it uses small alignment seeds (default of 10 bp). This results in many matches between a read and query, making a seed-extension alignment unfeasible. Instead, Unicycler searches for regions of high seed density and performs a banded alignment covering the best scoring regions.</p>
</sec>
<sec id="s2f">
<label>3.6.</label>
<title>Graph bridging using long read alignments</title>
<p>Long reads that align to multiple single-copy contigs can be used for bridging. Such reads contain a sample of the gap sequence between those contigs, and if multiple long reads connect a pair of contigs, Unicycler uses SeqAn to produce a consensus gap sequence<sup><xref ref-type="bibr" rid="c14">14</xref>,<xref ref-type="bibr" rid="c15">15</xref></sup>. Unicycler does not directly use this gap sequence in the bridge but instead uses it to find the best graph path connecting the contigs, via a branch and bound algorithm. Thus, the bridge sequence comes from the graph and reflects base calling accuracy of the short reads rather than the long reads that may have much lower accuracy (<xref ref-type="fig" rid="fig1"><bold>Figure 1D</bold></xref>). Sometimes Unicycler cannot find a graph path connecting two single-copy contigs that are connected via long reads, such as when the short read graph is incomplete and contains dead ends. In these cases, the long read consensus sequence is directly used as the bridging sequence. Such bridges are more likely to contain errors, which is another reason why Unicycler strives to minimise dead ends in the assembly graph.</p>
</sec>
<sec id="s2g">
<label>3.7.</label>
<title>Bridge application</title>
<p>Having produced bridges from both short reads (SPAdes RR) and long reads, Unicycler can now apply them to simplify the graph structure (<xref ref-type="fig" rid="fig1"><bold>Figure 1E</bold></xref>). Since some bridges may be erroneous, Unicycler assigns a quality score to each bridge and applies them in order of decreasingly quality, ensuring that when multiple contradictory bridges exist, the best-supported option is used. Bridge quality is a function of many factors: the number of reads which support the bridge (more is better); the alignment quality between the read consensus and graph path (higher identity is better); the length of the two contigs to be bridged (longer is better); the length and quality of the read alignments to the contigs (longer and higher identity is better); and the read depth consistency between the contigs (closer agreement is better). An ideal bridge connects two long contigs of the same depth, is supported by many reads with long alignments to the contigs, and has a graph path in close agreement with the read sequences.</p>
</sec>
<sec id="s2h">
<label>3.8.</label>
<title>Conservative, normal and bold</title>
<p>Unicycler can be run in three different modes that alter its cutoff for minimum acceptable bridge quality: conservative, normal and bold. In conservative mode, the quality cutoff is high (i.e. only very high quality bridges will be used). This mode is least likely to produce a complete assembly but carries a very low risk of misassembly and is appropriate for contexts where assembly accuracy is paramount. In bold mode, the quality cutoff is low (i.e. lower quality bridges will be used). This mode is most likely to complete the assembly but carries greater risk of error. It is suited to cases where completeness is more important than accuracy. Normal mode uses an intermediate cutoff and is appropriate in most cases.</p>
</sec>
<sec id="s2i">
<label>3.9.</label>
<title>Final steps</title>
<p>Following bridge application, Unicycler performs several actions to finalise the assembly graph. Contigs that have been used in bridges and no longer provide additional connection information are removed. Simple unbranching paths in the graph are merged to form long contigs (<xref ref-type="fig" rid="fig1"><bold>Figure 1F</bold></xref>). Overlapping sequences at contig ends (created by the SPAdes assembly process) are removed so each contig&#x2019;s sequence leads directly into its neighbours. If any circular replicon was completely assembled, it will now be a single contig with a link connecting its end to its start. A circular sequence can be shifted to any starting position without changing the biological information. Unicycler therefore uses TBLASTN to search for <italic>dnaA</italic> or <italic>repA</italic> alleles in each completed replicon<sup><xref ref-type="bibr" rid="c16">16</xref></sup>. If one is found, the sequence is rotated and/or flipped so that it begins with that gene encoded on the forward strand. This provides consistently oriented assemblies and reduces the risk that a gene will be split across the start and end of the sequence. As a final step, Unicycler uses Bowtie2 and Pilon to polish the assembly using short read alignments, reducing the rate of small errors (<xref ref-type="fig" rid="fig1"><bold>Figure 1G</bold></xref>)<sup><xref ref-type="bibr" rid="c17">17</xref>,<xref ref-type="bibr" rid="c18">18</xref></sup>.</p>
</sec>
<sec id="s2j">
<label>3.10.</label>
<title>Included tools</title>
<p>Unicycler&#x2019;s semi-global alignment algorithm is included as a stand-alone command line tool (unicycler&#x005F;align), making it available for use in other pipelines. Unicycler also comes with a polishing tool (unicycler&#x005F;polish) which applies variants identified by Pilon, GenomicConsensus<sup><xref ref-type="bibr" rid="c2">2</xref></sup> and FreeBayes<sup><xref ref-type="bibr" rid="c19">19</xref></sup>, and assesses the assembly using ALE<sup><xref ref-type="bibr" rid="c20">20</xref></sup>. By iteratively polishing the genome with both short and long reads, this process can correct most errors in a completed assembly, including those in repeat regions.</p>
</sec>
</sec>
<sec id="s3">
<label>4.</label>
<title>Results</title>
<p>Unicycler&#x2019;s performance was evaluated using read sets simulated for eight species, and using real read sets from the well-studied <italic>E. coli</italic> K-12 <italic>substr</italic>. MG1655. We further demonstrated the utility of Unicycler by using it to assemble the complete genomes of novel isolates of <italic>Klebsiella pneumoniae</italic> using newly generated Illumina, PacBio and ONT reads.</p>
<p>Unicycler&#x2019;s performance was compared to that of alternative hybrid assemblers SPAdes (v3.8.1 in hybrid mode)<sup><xref ref-type="bibr" rid="c21">21</xref></sup>, ABySS (v1.9.0)<sup><xref ref-type="bibr" rid="c22">22</xref></sup>, npScarf (v1.6-01c)<sup><xref ref-type="bibr" rid="c23">23</xref></sup> and Cerulean (v0.1)<sup><xref ref-type="bibr" rid="c24">24</xref></sup>. Default parameters and recommended settings were used for all tools (<bold>Table S1</bold>). The NaS tool can conduct hybrid assemblies<sup><xref ref-type="bibr" rid="c25">25</xref></sup> but was excluded from this comparison because it depends on Newbler, a closed-source assembler only supported on RedHat/Fedora Linux. We also excluded ALLPATHS-LG<sup><xref ref-type="bibr" rid="c26">26</xref></sup>, which can perform hybrid assemblies but has strict library preparation requirements, restricting its applicability<sup><xref ref-type="bibr" rid="c27">27</xref></sup>.</p>
<sec id="s3a">
<label>4.1.</label>
<title>Metrics</title>
 <p>For both the simulated and real <italic>E. coli</italic> read tests, assemblies were evaluated by comparison to the corresponding complete reference genome using QUAST (v4.3)<sup><xref ref-type="bibr" rid="c28">28</xref></sup>. We focused on the following metrics: misassemblies, small error rate (mismatches and small indels) and NGA50.</p>
<p>QUAST identifies misassemblies as cases where a contig aligns to the reference genome in multiple pieces, not as a single continuous alignment, indicating a structural error in the contig. For the simulated read tests, reads were generated from the reference genome so misassemblies always indicate assembler mistakes. For the <italic>E. coli</italic> tests, there is not a perfect agreement between the reference genome and reads generated in different laboratories from different subcultures of <italic>E. coli</italic> K-12 <italic>substr</italic>. MG1655, so false positive misassemblies are possible.</p>
<p>The well-known N50 metric measures only contig size, not contig correctness, limiting its value. A large N50 can therefore result from inaccurately joining sequences into large misassembled contigs. By aligning contigs to a reference, QUAST produces more useful metrics including NGA50 (GA &#x003D; &#x2018;genome aligned&#x2019;). Whereas N50 is based on contig lengths, NGA50 is based on the lengths of contig-to-reference alignments. A correctly assembled contig will have a single, unbroken alignment to the reference; a misassembled contig will be divided into multiple smaller alignments. Hence NGA50 is a metric for completeness that unlike N50 penalises misassemblies. In our tests, we used QUAST&#x2019;s -- strict-NA option to break contigs at all misassembly locations, including local misassemblies, for particularly stringent NGA50 scores.</p>
</sec>
<sec id="s3b">
<label>4.2.</label>
<title>Simulated read sets</title>
<p>To provide a wide range of genome size and complexity, we simulated reads from 12 reference genomes from seven bacterial species (2 <italic>Acinetobacter baumannii</italic><sup><xref ref-type="bibr" rid="c29">29</xref>,<xref ref-type="bibr" rid="c30">30</xref></sup>, <italic>2 Escherichia coli</italic><sup><xref ref-type="bibr" rid="c31">31</xref>,<xref ref-type="bibr" rid="c32">32</xref></sup> , 3 <italic>Klebsiella pneumoniae</italic><sup><xref ref-type="bibr" rid="c33">33</xref>&#x2013;<xref ref-type="bibr" rid="c35">35</xref></sup>, 1 <italic>Mycobacterium tuberculosis</italic><sup><xref ref-type="bibr" rid="c36">36</xref></sup>, 1 <italic>Shigella dysenteriae</italic><sup><xref ref-type="bibr" rid="c37">37</xref></sup>, 1 <italic>Shigella sonnei</italic>, 1 <italic>Streptococcus suis</italic><sup><xref ref-type="bibr" rid="c38">38</xref></sup>) and the yeast <italic>Saccharomyces cerevisiae</italic><sup><xref ref-type="bibr" rid="c39">39</xref></sup> (<xref ref-type="table" rid="tbl1"><bold>Table 1</bold></xref>). Plasmid and mitochondrial sequences were included at higher read depths, as appropriate.</p>
<table-wrap id="tbl1" position="float">
<label>Table 1:</label>
<caption><p>Reference genomes for simulated read sets.</p></caption>
<graphic xlink:href="096412_tbl1.tif"/>
</table-wrap>
<p>We used ART (v2.5.8) to generate synthetic paired-end reads from each reference genome with length (125 bp), insert size (400 bp) and error profile mimicking Illumina HiSeq 2500 reads<sup><xref ref-type="bibr" rid="c40">40</xref>,<xref ref-type="bibr" rid="c41">41</xref></sup>. Synthetic long reads were generated from each reference genome using PBSIM<sup><xref ref-type="bibr" rid="c42">42</xref></sup> at three accuracies (60&#x0025;, 75&#x0025; and 90&#x0025;), two mean lengths (10 kbp and 25 kbp) and eight depths (0x, 0.25x, 0.5x, 1.0x, 2.0x, 4.0x, 8.0x and 16.0x), yielding six short read sets and 42 hybrid read sets per strain. For the short read sets, we performed five assemblies: Unicycler in each of its modes (conservatives, normal and bold), SPAdes and ABySS. For the hybrid sets, we performed six assemblies: Unicycler (all modes), SPAdes, npScarf and Cerulean. All sets were generated in five replicates, resulting in 16920 total assemblies.</p>
</sec>
<sec id="s3c">
<label>4.3.</label>
<title>Assembly of simulated short read datasets</title>
<p>For assemblies of only synthetic short reads, Unicycler outperformed the other assemblers in each QUAST metric (<xref ref-type="fig" rid="fig2"><bold>Figures 2</bold></xref> <bold>and</bold> <xref ref-type="fig" rid="fig3"><bold>3</bold></xref>, <bold>Table S2</bold>). It is particularly interesting to compare Unicycler to SPAdes, since Unicycler uses SPAdes to build the initial short read assembly graph.</p>
<fig id="fig2" position="float">
<label>Figure 2:</label>
<caption><title>Misassembly and small error (mismatches and indels) rates for assemblies of simulated short read sets, summarising results across all reference genomes and replicate tests (total 360 per assembler).</title>
</caption>
<graphic xlink:href="096412_fig2.tif"/></fig>
<fig id="fig3" position="float">
<label>Figure 3:</label>
<caption><title>NGA50 for assemblies of simulated short read sets, summarising results across all reference genomes and replicate tests (total 360 per assembler).</title>
</caption>
<graphic xlink:href="096412_fig3.tif"/></fig>
<p>In normal and bold modes, Unicycler achieved the most complete assemblies, as measured by NGA50. This is attributable to the wide k-mer range used in assembly. While SPAdes automatically selected a k-mer range of 21&#x2013;55 and ABySS was run with a k-mer of 64 (the maximum value with default compilation settings), Unicycler typically chose 95 as its ideal k-mer, giving it greater power to assemble repetitive regions.</p>
<p>The misassembly rate of pre-RR SPAdes assemblies was very low, demonstrating that RR is the source of most misassemblies in SPAdes contigs. In conservative mode, Unicycler does not use SPAdes RR and therefore achieves similarly low misassembly rates. In normal and bold modes, Unicycler does use RR, but only if it exceeds a quality threshold. This selectiveness explains why normal and bold Unicycler assemblies have lower misassembly rates than the SPAdes contig assemblies from which they are derived.</p>
</sec>
<sec id="s3d">
<label>4.4.</label>
<title>Hybrid assembly of simulated long and short read datasets</title>
<p>Unicycler surpassed other assemblers when conducting hybrid assemblies of synthetic reads (<bold>Table S2</bold>). Misassembly rates in the hybrid assemblies were often much higher than in the short read only assemblies, illustrating the difficulty of resolving repeats with long reads (<xref ref-type="fig" rid="fig4"><bold>Figure 4</bold></xref>). Both npScarf and Cerulean consistently produced assemblies with 10 or more misassemblies. SPAdes produced fewer misassemblies, but some genomes, particularly the <italic>Shigella</italic> genomes with many high copy number &#x007E;1 kbp repeats associated with insertion sequences, resulted in many errors. Unicycler&#x2019;s misassembly rates were the lowest and correlated with the assembly mode (conservative, normal or bold).</p>
<fig id="fig4" position="float">
<label>Figure 4:</label>
<caption><title>Error rates for hybrid assemblies of simulated short and long read sets, summarising results across all reference genomes and replicate tests (total 2520 per assembler).</title>
</caption>
<graphic xlink:href="096412_fig4.tif"/></fig>
<p>Small error rates (mismatches and small indels) were lowest in Unicycler and SPAdes, as they both derive their final contigs from the short read assembly graph, not from the long read sequences. Unicycler and SPAdes both perform polishing, which may also contribute to their low small error rate. NGA50 was dependent on the long read depth, and Unicycler performed best at all tested depths (<xref ref-type="fig" rid="fig5"><bold>Figure 5</bold></xref>). This is due to Unicycler&#x2019;s low misassembly rates (other assemblers&#x2019; NGA50 scores were reduced due to their higher occurrence of misassemblies) and its ability to produce bridges using as few as one long read. In many cases, Unicycler produced complete or nearly complete assemblies with only 4x long read depth.</p>
<fig id="fig5" position="float">
<label>Figure 5:</label>
<caption><title>Mean NGA50 values for hybrid assemblies of simulated read sets. Mean values were calculated across all read lengths, read accuracies and replicate tests for each reference genome (210 hybrid read sets each); the top panel shows mean values for all 12 reference genomes (2520 hybrid read sets). Horizontal dashed lines indicate the N50 size of the reference genome. For the bacterial genomes, this is the size of their only chromosome; for <italic>Saccharomyces</italic>, it is the size of chromosome XIII, an intermediate-sized replicon in the genome.</title>
</caption>
<graphic xlink:href="096412_fig5.tif"/></fig>
<p>Theoretical analyses of assembly show that error-prone reads are nearly as informative as error-free reads, suggesting that read accuracy is less important than length<sup><xref ref-type="bibr" rid="c43">43</xref>,<xref ref-type="bibr" rid="c44">44</xref></sup>. Unicycler&#x2019;s performance on the simulated read sets matched these findings. Read length significantly affected the resulting NGA50 for Unicycler (all modes) and SPAdes (<xref ref-type="fig" rid="fig6"><bold>Figure 6</bold></xref>). In contrast, read accuracy had a weaker effect on Unicycler&#x2019;s NGA50 values, demonstrating its effectiveness in using long reads regardless of base calling accuracy.</p>
<fig id="fig6" position="float">
<label>Figure 6:</label>
<caption><title>NGA50 values segregated by read length and read accuracy. These plots summarise results across all reference genomes and replicate tests, but only include the tests of 8x long read depth. For the read lengths, the p-value was made with a two-tailed t-test. For the read accuracies, the p-value was made with a one-way ANOVA test.</title>
</caption>
<graphic xlink:href="096412_fig6.tif"/></fig>
</sec>
<sec id="s3e">
<label>4.5.</label>
<title>Computational performance</title>
<p>The assembly tests were all conducted with 8 CPU cores and 16 GB of RAM. Unicycler was slower than the alternative hybrid assemblers, taking a median time of 46 minutes to assemble the 8x long read depth synthetic tests. SPAdes and npScarf performed the fastest, both having a median time of 8 minutes and maximum time of less than 25 minutes on the same data. Cerulean had a median time of 23 minutes, although some Cerulean processes did not complete due to crashes or exceeding the 24-hour time limit. The complex biofilm-associated gene in <italic>Acinetobacter baumannii</italic> A1 was slow to bridge in Unicycler, resulting in a maximum run time of 13 hours. However, Unicycler did fully assemble this gene sequence in many read sets where the other assemblers produced a fragmented or misassembled result.</p>
</sec>
<sec id="s3f">
<label>4.6.</label>
<title>Real <italic>E. coli</italic> K-12 read sets</title>
<p>We tested the same assemblers using real reads of the <italic>E. coli</italic> K-12 <italic>substr</italic>. MG1655 genome. The short reads for these tests were produced by Illumina on their MiSeq platform. Long reads were from five different platforms: ONT R7, ONT R9, PacBio RS, PacBio RS II C2 chemistry and PacBio RS II C3 chemistry (<xref ref-type="table" rid="tbl2"><bold>Table 2</bold></xref>). The ONT R9 reads were further split into two groups, pass and fail, as determined by ONT&#x2019;s Metrichor software (v0.16.37960). For each platform and long read depth, we conducted 20 trials using different random subsamples of long reads at the same depths used for simulated data. Accuracy was assessed by comparison to the E. coli K-12 <italic>substr</italic>. MG1655 reference genome (accession NC&#x005F;000913.3) generated using Sanger-based capillary sequencing at the University of Wisconsin in 1997<sup><xref ref-type="bibr" rid="c31">31</xref></sup>.</p>
<table-wrap id="tbl2" position="float">
<label>Table 2:</label>
<caption><p>Real <italic>E. coli</italic> K-12 <italic>substr</italic>. MG1655 read sets.</p></caption>
<graphic xlink:href="096412_tbl2.tif"/>
</table-wrap>
<p>These tests showed the same trends as the simulated data: Unicycler achieved more complete assemblies at lower long read depths than other assemblers (<xref ref-type="fig" rid="fig7"><bold>Figure 7</bold></xref>, <bold>Table S3</bold>). Notably, Unicycler performed worst on the set with shortest reads (PacBio RS) not the set with lowest identity (ONT R7), while it performed best on the set with longest reads (PacBio RS II C3). This matches the simulated results and the theoretical predictions, again showing that read length is more important than accuracy for Unicycler.</p>
<fig id="fig7" position="float">
<label>Figure 7:</label>
<caption><title>Mean NGA50 values for hybrid assemblies of real E. coli read sets, summarised across 20 replicate tests at each depth. Top panel shows mean values for all six long read sets.</title>
</caption>
<graphic xlink:href="096412_fig7.tif"/></fig>
<p>The NGA50s for these tests were markedly lower than those obtained with reads simulated from the <italic>E. coli</italic> K-12 <italic>substr</italic>. MG1655 reference genome. With simulated reads, both Unicycler and SPAdes were often able to achieve complete or near-complete assemblies. With real reads, Unicycler and SPAdes best NGA50 values were 2.0 Mbp and 1.4 Mbp, respectively. This appears to be due to false positive misassembly calls resulting from genuine differences between the reference genome sequence and the genomes of the isolates that were sequenced using Illumina, PacBio and ONT platforms. For example, one copy of IS<italic>l</italic>A in the Illumina read set relocated to a position 105 kbp away from the position in the reference genome; when an assembly spanned this region, QUAST identified the difference as a misassembly, reducing the NGA50.</p>
</sec>
<sec id="s3g">
<label>4.7.</label>
<title><italic>Klebsiella pneumoniae</italic> PacBio assembly case study</title>
<p>To explore the utility of Unicycler, we used it to assemble the genome of a <italic>K. pneumoniae</italic> isolate, INF274, which was difficult to assemble using alternative techniques. INF274 is a multidrug resistant sequence type (ST) 340 strain isolated from the urine of a Melbourne hospital patient who had a urinary tract infection. It belongs to clonal group (CG) 258, a common cause of multidrug resistant hospital-associated infections globally. This isolate was first sequenced on Illumina HiSeq 2500 (generating 750 Mbp of 125 bp paired-end reads) and then on a PacBio RS II (generating 1.3 Gbp of long reads, many of which exceeded 10 kbp in length). Both reads sets are high quality and are an ideal set of inputs for hybrid assembly. Notably, the library preparation for the PacBio reads followed a standard size-selection protocol that excluded short fragments of DNA, so small plasmids were underrepresented in the long reads.</p>
<p>We performed hybrid assemblies using Unicycler (normal mode) and SPAdes (v3.8.1), and PacBio-only assemblies using HGAP (v3) and Canu (v1.3). Since this is a novel isolate, we did not analyse the assembly results with QUAST. Instead, we compared the assemblies to each other and analysed the alignment of Illumina reads to each (<xref ref-type="fig" rid="fig8"><bold>Figures 8</bold></xref> <bold>and</bold> <xref ref-type="fig" rid="figS2"><bold>S2</bold></xref>).</p>
<fig id="fig8" position="float">
<label>Figure 8:</label>
<caption><title>Final assemblies of Klebsiella pneumoniae INF274 produced by Unicycler, SPAdes, HGAP and Canu. The contigs/graph of the assembly are shown on the left, coloured by replicon. The read depth plot of plasmid 1 is shown on the right. Low depth at the ends of the contig is indicative of overlapping ends.</title>
</caption>
<graphic xlink:href="096412_fig8.tif"/></fig>
<p>Of the four assemblers, only Unicycler and Canu produce a graph file for their final assembly, but Canu did not circularise any replicons, so the sequences remained linear. When viewed in Bandage<sup><xref ref-type="bibr" rid="c6">6</xref></sup>, the Unicycler graph clearly distinguished between replicons that formed completed circularised sequences and those that did not. Only plasmids 5 and 6 remained incomplete in the Unicycler assembly, as they contain shared sequence and there was a lack of PacBio reads for these replicons, preventing Unicycler from scaffolding them apart. SPAdes and HGAP output their assemblies only as linear sequences, making it difficult to make the distinction between complete and incomplete replicons. The SPAdes assembly suffered from the same problem as Unicycler with plasmids 5 and 6, and it failed to assemble plasmid 3, which contains a prophage sequence also present in the chromosome.</p>
<p>Since Unicycler&#x2019;s graph-based scaffolding naturally results in circular sequences, it did not have duplicated sequences at the start/end of circular replicons. SPAdes suffered from a slight overlap and both HGAP and Canu had significant overlaps, indicated by the drop in read depth near the ends of contigs. These must be repaired manually or with a tool such as Circlator<sup><xref ref-type="bibr" rid="c45">45</xref></sup>.</p>
</sec>
<sec id="s3h">
<label>4.8.</label>
<title><italic>Klebsiella pneumoniae</italic> ONT assembly case study</title>
<p>To assess Unicycler&#x2019;s performance on low-depth ONT datasets, we performed R9 sequencing on <italic>K. pneumoniae</italic> isolate INF125, a virulent ST45 strain isolated from the urine of a Melbourne hospital patient. Reads were generated over a four-hour period resulting in a total of 156 Mbp of sequence (depth&#x003D;28.6x) with an N50 length of 11,470 bp. ONT streams sequence data as it is generated, making it technically feasible to analyse the data in real time and stop sequencing when a complete assembly is reached. To investigate the suitability of the assemblers for this task, we assessed their performance over time by generating 240 subsets of reads, one set per minute of sequencing, each containing all reads generated up to that minute (e.g. set 60 contained all reads generated in the first hour of sequencing). All sets were assembled with three hybrid assemblers (Unicycler normal mode, hybridSPAdes and npScarf) and one long read-only assembler (miniasm<sup><xref ref-type="bibr" rid="c46">46</xref></sup>). We assessed each assembly using N50, number of contigs, and error rates when aligning the Illumina reads to the assembly (<xref ref-type="fig" rid="fig9"><bold>Figure 9</bold></xref>, <bold>Table S4</bold>). A high read alignment identity is indicative of a low small error rate (mismatches and small indels). A high proportion of concordantly aligned reads is indicative of a low misassembly rate.</p>
<fig id="fig9" position="float">
<label>Figure 9:</label>
<caption><title>Assembly metrics of Klebsiella pneumoniae INF125 produced by Unicycler, SPAdes, npScarf and miniasm over a four-hour period of sequencing. Miniasm assemblies contain error rates comparable to that of the raw reads and is therefore excluded from the error rate plots.</title>
</caption>
<graphic xlink:href="096412_fig9.tif"/></fig>
<p>Unicycler was the first assembler to complete the assembly at 45 minutes (depth&#x003D;5.3x). npScarf completed the assembly at 76 minutes (9.0x), SPAdes took 102 minutes (12.1x) and miniasm, which uses only long reads, required 213 minutes (25.3x). All completed assemblies contained three contigs (one chromosome and two plasmids), except for SPAdes assemblies that contained extra, erroneous contigs. Read error metrics show that both Unicycler and SPAdes consistently produced more accurate assemblies than npScarf, although the magnitude of the benefit was small (<xref ref-type="fig" rid="fig9"><bold>Figure 9</bold></xref>).</p>
</sec>
<sec id="s3i">
<label>4.9.</label>
<title>Limitations</title>
<p>As Unicycler operates on a short read assembly graph, it requires high quality short reads. Specifically, it is important that there are very few unsequenced regions of the genome that create dead ends in the assembly graph. Unicycler&#x2019;s performance will suffer if the assembly graph is fragmented and incomplete.</p>
</sec>
<sec id="s3j">
<label>4.10.</label>
<title>Summary</title>
<p>Unicycler performed well on both short read-only data sets and all types of hybrid read sets, producing more complete assemblies than other assemblers. Perhaps more importantly, Unicycler produced fewer misassemblies than other assemblers, which often had unacceptably high error rates. As long read sequencing becomes more common, so will completed genome assemblies, enabling new research into genome structure. High quality assemblies free of structural errors, such as those produced by Unicycler, will be critical to research in this field.</p>
</sec>
</sec>
<sec id="s4">
<label>5.</label>
<title>Availability and Future Directions</title>
<p>Unicycler&#x2019;s primary use case is when a researcher wishes to complete the assembly of an isolate for which Illumina reads already exist. To facilitate this, future development of Unicycler will add streaming support for ONT sequencing, using reads to create and update bridges in the graph in real time during a sequencing run. This will allow users to halt sequencing once a genome is sufficiently resolved, conserving sequencing resources for other isolates. This modality is currently possible with npScarf, however in our tests Unicycler was more accurate than npScarf and reached complete assemblies with lower read depths. Future development will also focus on improving Unicycler&#x2019;s computational performance. Unicycler is not currently able to perform large assemblies such as human genomes and metagenomes. Algorithmic improvements to long read alignment, path finding and graph manipulations will all be required for Unicycler to be appropriate in such cases.</p>
<p>Unicycler is open source (GPLv3) and available at <ext-link ext-link-type="uri" xlink:href="http://github.com/rrwick/Unicycler">github.com/rrwick/Unicycler</ext-link>.</p>
</sec>
</body>
<back>
<ref-list>
<label>6.</label>
<title>References</title>
<ref id="c1"><label>1.</label><mixed-citation publication-type="journal"><string-name><surname>Siguier</surname>, <given-names>P.</given-names></string-name>, <string-name><surname>Perochon</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Lestrade</surname>, <given-names>L.</given-names></string-name>, <string-name><surname>Mahillon</surname>, <given-names>J.</given-names></string-name> &#x0026; <string-name><surname>Chandler</surname>, <given-names>M.</given-names></string-name> <article-title>ISfinder: the reference centre for bacterial insertion sequences</article-title>. <source>Nucleic Acids Res</source>. <volume>34</volume>, <fpage>D32</fpage>&#x2013;<lpage>D36</lpage> (<year>2006</year>).</mixed-citation></ref>
<ref id="c2"><label>2.</label><mixed-citation publication-type="journal"><string-name><surname>Chin</surname>, <given-names>C.-S.</given-names></string-name> <etal>et al.</etal> <article-title>Nonhybrid, finished microbial genome assemblies from long-read SMRT sequencing data</article-title>. <source>Nat. Methods</source> <volume>10</volume>, <fpage>563</fpage>&#x2013;<lpage>569</lpage> (<year>2013</year>).</mixed-citation></ref>
<ref id="c3"><label>3.</label><mixed-citation publication-type="journal"><string-name><surname>Koren</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Walenz</surname>, <given-names>B. P.</given-names></string-name>, <string-name><surname>Berlin</surname>, <given-names>K.</given-names></string-name>, <string-name><surname>Miller</surname>, <given-names>J. R.</given-names></string-name> &#x0026; <string-name><surname>Phillippy</surname>, <given-names>A. M.</given-names></string-name> <article-title>Canu: scalable and accurate long-read assembly via adaptive k-mer weighting and repeat separation</article-title>. <source>bioRxiv</source> <fpage>71282</fpage> (<year>2016</year>). doi: <pub-id pub-id-type="doi">10.1101/071282</pub-id></mixed-citation></ref>
<ref id="c4"><label>4.</label><mixed-citation publication-type="journal"><string-name><surname>Kwong</surname>, <given-names>J. C.</given-names></string-name>, <string-name><surname>McCallum</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Sintchenko</surname>, <given-names>V.</given-names></string-name> &#x0026; <string-name><surname>Howden</surname>, <given-names>B. P.</given-names></string-name> <article-title>Whole genome sequencing in clinical and public health microbiology</article-title>. <source>Pathology</source> <volume>47</volume>, <fpage>199</fpage>&#x2013;<lpage>210</lpage> (<year>2015</year>).</mixed-citation></ref>
<ref id="c5"><label>5.</label><mixed-citation publication-type="journal"><string-name><surname>Hunt</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Newbold</surname>, <given-names>C.</given-names></string-name>, <string-name><surname>Berriman</surname>, <given-names>M.</given-names></string-name> &#x0026; <string-name><surname>Otto</surname>, <given-names>T. D.</given-names></string-name> <article-title>A comprehensive evaluation of assembly scaffolding tools</article-title>. <source>Genome Biol</source>. <volume>15</volume>, <fpage>R42</fpage> (<year>2014</year>).</mixed-citation></ref>
<ref id="c6"><label>6.</label><mixed-citation publication-type="journal"><string-name><surname>Wick</surname>, <given-names>R. R.</given-names></string-name>, <string-name><surname>Schultz</surname>, <given-names>M. B.</given-names></string-name>, <string-name><surname>Zobel</surname>, <given-names>J.</given-names></string-name> &#x0026; <string-name><surname>Holt</surname>, <given-names>K. E.</given-names></string-name> <article-title>Bandage: Interactive visualization of de novo genome assemblies</article-title>. <source>Bioinformatics</source> <volume>31</volume>, <fpage>3350</fpage>&#x2013;<lpage>3352</lpage> (<year>2015</year>).</mixed-citation></ref>
<ref id="c7"><label>7.</label><mixed-citation publication-type="journal"><string-name><surname>Bankevich</surname>, <given-names>A.</given-names></string-name> <etal>et al.</etal> <article-title>SPAdes: A New Genome Assembly Algorithm and Its Applications to Single-Cell Sequencing</article-title>. <source>J. Comput. Biol</source>. <volume>19</volume>, <fpage>455</fpage>&#x2013;<lpage>477</lpage> (<year>2012</year>).</mixed-citation></ref>
<ref id="c8"><label>8.</label><mixed-citation publication-type="journal"><string-name><surname>Prjibelski</surname>, <given-names>A. D.</given-names></string-name> <etal>et al.</etal> <article-title>ExSPAnder: A universal repeat resolver for DNA fragment assembly</article-title>. <source>Bioinformatics</source> <volume>30</volume>, <fpage>293</fpage>&#x2013;<lpage>301</lpage> (<year>2014</year>).</mixed-citation></ref>
<ref id="c9"><label>9.</label><mixed-citation publication-type="journal"><string-name><surname>Chaisson</surname>, <given-names>M. J.</given-names></string-name> &#x0026; <string-name><surname>Tesler</surname>, <given-names>G.</given-names></string-name> <article-title>Mapping single molecule sequencing reads using basic local alignment with successive refinement (BLASR): application and theory</article-title>. <source>BMC Bioinformatics</source> <volume>13</volume>, <fpage>238</fpage> (<year>2012</year>).</mixed-citation></ref>
<ref id="c10"><label>10.</label><mixed-citation publication-type="journal"><string-name><surname>Li</surname>, <given-names>H.</given-names></string-name> <article-title>Aligning sequence reads, clone sequences and assembly contigs with BWA-MEM</article-title>. <source>arXiv Prepr. arXiv</source> <volume>0</volume>, <fpage>3</fpage> (<year>2013</year>).</mixed-citation></ref>
<ref id="c11"><label>11.</label><mixed-citation publication-type="book"><string-name><surname>Madden</surname>, <given-names>T.</given-names></string-name> in <source>The NCBI Handbook</source> (<edition>eds.</edition> <person-group person-group-type="editior"><string-name><surname>McEntyre</surname>, <given-names>J.</given-names></string-name> &#x0026; <string-name><surname>Ostell</surname>, <given-names>J.</given-names></string-name></person-group>) <fpage>1</fpage>&#x2013;<lpage>15</lpage> (<publisher-name>National Center for Biotechnology</publisher-name>, <year>2002</year>).</mixed-citation></ref>
<ref id="c12"><label>12.</label><mixed-citation publication-type="journal"><string-name><surname>Kielbasa</surname>, <given-names>S. M.</given-names></string-name>, <string-name><surname>Wan</surname>, <given-names>R.</given-names></string-name>, <string-name><surname>Sato</surname>, <given-names>K.</given-names></string-name>, <string-name><surname>Horton</surname>, <given-names>P.</given-names></string-name> &#x0026; <string-name><surname>Frith</surname>, <given-names>M. C.</given-names></string-name> <article-title>Adaptive seeds tame genomic sequence comparison</article-title>. <source>Genome Res</source>. <volume>21</volume>, <fpage>487</fpage>&#x2013;<lpage>493</lpage> (<year>2011</year>).</mixed-citation></ref>
<ref id="c13"><label>13.</label><mixed-citation publication-type="journal"><string-name><surname>Gogol-D&#x00F6;ring</surname>, <given-names>a</given-names></string-name> &#x0026; <string-name><surname>Reinert</surname>, <given-names>K.</given-names></string-name> <source>Biological sequence analysis using the SeqAn C&#x002B;&#x002B; library</source>. (<year>2010</year>).</mixed-citation></ref>
<ref id="c14"><label>14.</label><mixed-citation publication-type="journal"><string-name><surname>Rausch</surname>, <given-names>T.</given-names></string-name> <etal>et al.</etal> <article-title>Segment-based multiple sequence alignment</article-title>. <source>Bioinformatics</source> <volume>24</volume>, <fpage>i187</fpage>&#x2013;<lpage>i192</lpage> (<year>2008</year>).</mixed-citation></ref>
<ref id="c15"><label>15.</label><mixed-citation publication-type="journal"><string-name><surname>Notredame</surname>, <given-names>C.</given-names></string-name>, <string-name><surname>Higgins</surname>, <given-names>D. G.</given-names></string-name>, &#x0026; <string-name><surname>Heringa</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Notredame</surname>, <given-names>C.</given-names></string-name>, <string-name><surname>Higgins</surname>, <given-names>D. G.</given-names></string-name> &#x0026; <string-name><surname>Heringa</surname>, <given-names>J.</given-names></string-name> <article-title>T-coffee: a novel method for fast and accurate multiple sequence alignment</article-title>. <source>J. Mol. Biol</source>. <volume>302</volume>, <fpage>205</fpage>&#x2013;<lpage>217</lpage> (<year>2000</year>).</mixed-citation></ref>
<ref id="c16"><label>16.</label><mixed-citation publication-type="journal"><string-name><surname>Gertz</surname>, <given-names>E. M.</given-names></string-name>, <string-name><surname>Yu</surname>, <given-names>Y.-K.</given-names></string-name>, <string-name><surname>Agarwala</surname>, <given-names>R.</given-names></string-name>, <string-name><surname>Sch&#x00E4;ffer</surname>, <given-names>A. a</given-names></string-name> &#x0026; <string-name><surname>Altschul</surname>, <given-names>S. F.</given-names></string-name> <article-title>Composition-based statistics and translated nucleotide searches: improving the TBLASTN module of BLAST</article-title>. <source>BMC Biol</source>. <volume>4</volume>, <fpage>41</fpage> (<year>2006</year>).</mixed-citation></ref>
<ref id="c17"><label>17.</label><mixed-citation publication-type="journal"><string-name><surname>Langmead</surname>, <given-names>B.</given-names></string-name> &#x0026; <string-name><surname>Salzberg</surname>, <given-names>S. L.</given-names></string-name> <article-title>Fast gapped-read alignment with Bowtie 2</article-title>. <source>Nat. Methods</source> <volume>9</volume>, <fpage>357</fpage>&#x2013;<lpage>359</lpage> (<year>2012</year>).</mixed-citation></ref>
<ref id="c18"><label>18.</label><mixed-citation publication-type="journal"><string-name><surname>Walker</surname>, <given-names>B. J.</given-names></string-name> <etal>et al.</etal> <article-title>Pilon: An integrated tool for comprehensive microbial variant detection and genome assembly improvement</article-title>. <source>PLoS One</source> <fpage>9</fpage>, (<year>2014</year>).</mixed-citation></ref>
<ref id="c19"><label>19.</label><mixed-citation publication-type="journal"><string-name><surname>Garrison</surname>, <given-names>E.</given-names></string-name> &#x0026; <string-name><surname>Marth</surname>, <given-names>G.</given-names></string-name> <article-title>Haplotype-based variant detection from short-read sequencing</article-title>. <source>arXiv Prepr. arXiv1207.3907</source> <fpage>9</fpage> (<year>2012</year>). doi:<pub-id pub-id-type="doi">arXiv:1207.3907</pub-id> [q-bio.GN]</mixed-citation></ref>
<ref id="c20"><label>20.</label><mixed-citation publication-type="journal"><string-name><surname>Clark</surname>, <given-names>S. C.</given-names></string-name>, <string-name><surname>Egan</surname>, <given-names>R.</given-names></string-name>, <string-name><surname>Frazier</surname>, <given-names>P. I.</given-names></string-name> &#x0026; <string-name><surname>Wang</surname>, <given-names>Z.</given-names></string-name> <article-title>ALE: A generic assembly likelihood evaluation framework for assessing the accuracy of genome and metagenome assemblies</article-title>. <source>Bioinformatics</source> <volume>29</volume>, <fpage>435</fpage>&#x2013;<lpage>443</lpage> (<year>2013</year>).</mixed-citation></ref>
<ref id="c21"><label>21.</label><mixed-citation publication-type="journal"><string-name><surname>Antipov</surname>, <given-names>D.</given-names></string-name>, <string-name><surname>Korobeynikov</surname>, <given-names>A.</given-names></string-name>, Mc<string-name><surname>Lean</surname>, <given-names>J. S.</given-names></string-name> &#x0026; <string-name><surname>Pevzner</surname>, <given-names>P. A.</given-names></string-name> <article-title>HybridSPAdes: An algorithm for hybrid assembly of short and long reads</article-title>. <source>Bioinformatics</source> <volume>32</volume>, <fpage>1009</fpage>&#x2013;<lpage>1015</lpage> (<year>2016</year>).</mixed-citation></ref>
<ref id="c22"><label>22.</label><mixed-citation publication-type="journal"><string-name><surname>Simpson</surname>, <given-names>J. T.</given-names></string-name> <etal>et al.</etal> <article-title>ABySS: A parallel assembler for short read sequence data</article-title>. <source>Genome Res</source>. <volume>19</volume>, <fpage>1117</fpage>&#x2013;<lpage>1123</lpage> (<year>2009</year>).</mixed-citation></ref>
<ref id="c23"><label>23.</label><mixed-citation publication-type="journal"><string-name><surname>Cao</surname>, <given-names>M. D.</given-names></string-name> <etal>et al.</etal> <article-title>Scaffolding and Completing Genome Assemblies in Real-time with Nanopore Sequencing</article-title>. <source>bioRxiv</source> <fpage>54783</fpage> (<year>2016</year>). doi:<pub-id pub-id-type="doi">10.1101/054783</pub-id></mixed-citation></ref>
<ref id="c24"><label>24.</label><mixed-citation publication-type="journal"><string-name><surname>Deshpande</surname>, <given-names>V.</given-names></string-name>, <string-name><surname>Fung</surname>, <given-names>E. D.</given-names></string-name> K., <string-name><surname>Pham</surname>, <given-names>S.</given-names></string-name> &#x0026; <string-name><surname>Bafna</surname>, <given-names>V.</given-names></string-name> in <source>Algorithms in Bioinformatics</source> <fpage>349</fpage>&#x2013;<lpage>363</lpage> (<year>2013</year>).</mixed-citation></ref>
<ref id="c25"><label>25.</label><mixed-citation publication-type="journal"><string-name><surname>Madoui</surname>, <given-names>M.-A.</given-names></string-name> <etal>et al.</etal> <article-title>Genome assembly using Nanopore-guided long and error-free DNA reads</article-title>. <source>BMC Genomics</source> <volume>16</volume>, <fpage>327</fpage> (<year>2015</year>).</mixed-citation></ref>
<ref id="c26"><label>26.</label><mixed-citation publication-type="other"><string-name><surname>Ribeiro</surname>, <given-names>F. J.</given-names></string-name> <etal>et al.</etal> <article-title>Finished bacterial genomes from shotgun sequence data Finished bacterial genomes from shotgun sequence data</article-title>. <fpage>2270</fpage>&#x2013;<lpage>2277</lpage> (<year>2012</year>). doi: <pub-id pub-id-type="doi">10.1101/gr.141515.112</pub-id></mixed-citation></ref>
<ref id="c27"><label>27.</label><mixed-citation publication-type="journal"><string-name><surname>Utturkar</surname>, <given-names>S. M.</given-names></string-name> <etal>et al.</etal> <article-title>Evaluation and validation of de novo and hybrid assembly techniques to derive high-quality genome sequences</article-title>. <source>Bioinformatics</source> <fpage>1</fpage>&#x2013;<lpage>8</lpage> (<year>2014</year>). doi: <pub-id pub-id-type="doi">10.1093/bioinformatics/btu391</pub-id></mixed-citation></ref>
<ref id="c28"><label>28.</label><mixed-citation publication-type="journal"><string-name><surname>Gurevich</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Saveliev</surname>, <given-names>V.</given-names></string-name>, <string-name><surname>Vyahhi</surname>, <given-names>N.</given-names></string-name> &#x0026; <string-name><surname>Tesler</surname>, <given-names>G.</given-names></string-name> <article-title>QUAST: Quality assessment tool for genome assemblies</article-title>. <source>Bioinformatics</source> <volume>29</volume>, <fpage>1072</fpage>&#x2013;<lpage>1075</lpage> (<year>2013</year>).</mixed-citation></ref>
<ref id="c29"><label>29.</label><mixed-citation publication-type="journal"><string-name><surname>Holt</surname>, <given-names>K. E.</given-names></string-name> <etal>et al.</etal> <article-title>Genome Sequence of Acinetobacter baumannii Strain A1, an Early Example of Antibiotic-Resistant Global Clone 1</article-title>. <source>Genome Announc</source>. <volume>3</volume>, <fpage>9</fpage>&#x2013;<lpage>10</lpage> (<year>2015</year>).</mixed-citation></ref>
<ref id="c30"><label>30.</label><mixed-citation publication-type="journal"><string-name><surname>Loewen</surname>, <given-names>P. C.</given-names></string-name>, <string-name><surname>Alsaadi</surname>, <given-names>Y.</given-names></string-name>, <string-name><surname>Fernando</surname>, <given-names>D.</given-names></string-name> &#x0026; <string-name><surname>Kumar</surname>, <given-names>A.</given-names></string-name> <article-title>Genome Sequence of an Extremely Drug-Resistant Clinical Isolate of Acinetobacter baumannii Strain AB030</article-title>. <source>Genome Announc</source>. <volume>2</volume>, <fpage>3570</fpage> (<year>2014</year>).</mixed-citation></ref>
<ref id="c31"><label>31.</label><mixed-citation publication-type="journal"><string-name><surname>Riley</surname>, <given-names>M.</given-names></string-name> <etal>et al.</etal> <article-title>Escherichia coli K-12: A cooperatively developed annotation snapshot - 2005</article-title>. <source>Nucleic Acids Res</source>. <volume>34</volume>, <fpage>1</fpage>&#x2013;<lpage>9</lpage> (<year>2006</year>).</mixed-citation></ref>
<ref id="c32"><label>32.</label><mixed-citation publication-type="journal"><string-name><surname>Forde</surname>, <given-names>B. M.</given-names></string-name> <etal>et al.</etal> <article-title>The complete genome sequence of escherichia coli EC958: A high quality reference sequence for the globally disseminated multidrug resistant E. coli O25b:H4-ST131 clone</article-title>. <source>PLoS One</source> <fpage>9</fpage>, (<year>2014</year>).</mixed-citation></ref>
<ref id="c33"><label>33.</label><mixed-citation publication-type="journal"><string-name><surname>Deleo</surname>, <given-names>F. R.</given-names></string-name> <etal>et al.</etal> <article-title>Molecular dissection of the evolution of carbapenem-resistant multilocus sequence type 258 Klebsiella pneumoniae</article-title>. <source>Proc. Natl. Acad. Sci. U. S. A</source>. <volume>111</volume>, <fpage>4988</fpage>&#x2013;<lpage>93</lpage> (<year>2014</year>).</mixed-citation></ref>
<ref id="c34"><label>34.</label><mixed-citation publication-type="journal"><string-name><surname>McClelland</surname>, <given-names>M.</given-names></string-name> <etal>et al.</etal> <article-title>Complete genome sequence of Salmonella enterica serovar Typhimurium LT2</article-title>. <source>Nature</source> <volume>413</volume>, <fpage>852</fpage>&#x2013;<lpage>856</lpage> (<year>2001</year>).</mixed-citation></ref>
<ref id="c35"><label>35.</label><mixed-citation publication-type="journal"><string-name><surname>Wu</surname>, <given-names>K. M.</given-names></string-name> <etal>et al.</etal> <article-title>Genome sequencing and comparative analysis of Klebsiella pneumoniae NTUH-K2044, a strain causing liver abscess and meningitis</article-title>. <source>J. Bacteriol</source>. <volume>191</volume>, <fpage>4492</fpage>&#x2013;<lpage>4501</lpage> (<year>2009</year>).</mixed-citation></ref>
<ref id="c36"><label>36.</label><mixed-citation publication-type="journal"><string-name><surname>Lew</surname>, <given-names>J. M.</given-names></string-name>, <string-name><surname>Kapopoulou</surname>, <given-names>A.</given-names></string-name>, <string-name><surname>Jones</surname>, <given-names>L. M.</given-names></string-name> &#x0026; <string-name><surname>Cole</surname>, <given-names>S. T.</given-names></string-name> <article-title>TubercuList - 10 years after</article-title>. <source>Tuberculosis</source> <volume>91</volume>, <fpage>1</fpage>&#x2013;<lpage>7</lpage> (<year>2011</year>).</mixed-citation></ref>
<ref id="c37"><label>37.</label><mixed-citation publication-type="journal"><string-name><surname>Yang</surname>, <given-names>F.</given-names></string-name> <etal>et al.</etal> <article-title>Genome dynamics and diversity of Shigella species, the etiologic agents of bacillary dysentery</article-title>. <source>Nucleic Acids Res</source>. <volume>33</volume>, <fpage>6445</fpage>&#x2013;<lpage>6458</lpage> (<year>2005</year>).</mixed-citation></ref>
<ref id="c38"><label>38.</label><mixed-citation publication-type="journal"><string-name><surname>Holden</surname>, <given-names>M. T. G.</given-names></string-name> <etal>et al.</etal> <article-title>Rapid evolution of virulence and drug resistance in the emerging zoonotic pathogen Streptococcus suis</article-title>. <source>PLoS One</source> <fpage>4</fpage>, (<year>2009</year>).</mixed-citation></ref>
<ref id="c39"><label>39.</label><mixed-citation publication-type="journal"><string-name><surname>Engel</surname>, <given-names>S. R.</given-names></string-name> <etal>et al.</etal> <article-title>The reference genome sequence of Saccharomyces cerevisiae: then and now</article-title>. <source>G3 (Bethesda)</source>. <volume>4</volume>, <fpage>389</fpage>&#x2013;<lpage>98</lpage> (<year>2014</year>).</mixed-citation></ref>
<ref id="c40"><label>40.</label><mixed-citation publication-type="journal"><string-name><surname>Escalona</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Rocha</surname>, <given-names>S.</given-names></string-name> &#x0026; <string-name><surname>Posada</surname>, <given-names>D.</given-names></string-name> <article-title>A comparison of tools for the simulation of genomic next-generation sequencing data</article-title>. <source>Nat Rev Genet advance on</source>, (<year>2016</year>).</mixed-citation></ref>
<ref id="c41"><label>41.</label><mixed-citation publication-type="journal"><string-name><surname>Huang</surname>, <given-names>W.</given-names></string-name>, <string-name><surname>Li</surname>, <given-names>L.</given-names></string-name>, <string-name><surname>Myers</surname>, <given-names>J. R.</given-names></string-name> &#x0026; <string-name><surname>Marth</surname>, <given-names>G. T.</given-names></string-name> <article-title>ART: A next-generation sequencing read simulator</article-title>. <source>Bioinformatics</source> <volume>28</volume>, <fpage>593</fpage>&#x2013;<lpage>594</lpage> (<year>2012</year>).</mixed-citation></ref>
<ref id="c42"><label>42.</label><mixed-citation publication-type="journal"><string-name><surname>Ono</surname>, <given-names>Y.</given-names></string-name>, <string-name><surname>Asai</surname>, <given-names>K.</given-names></string-name> &#x0026; <string-name><surname>Hamada</surname>, <given-names>M.</given-names></string-name> <article-title>PBSIM: PacBio reads simulator - Toward accurate genome assembly</article-title>. <source>Bioinformatics</source> <volume>29</volume>, <fpage>119</fpage>&#x2013;<lpage>121</lpage> (<year>2013</year>).</mixed-citation></ref>
<ref id="c43"><label>43.</label><mixed-citation publication-type="journal"><string-name><surname>Lam</surname>, <given-names>K.</given-names></string-name>, <string-name><surname>Khalak</surname>, <given-names>A.</given-names></string-name> &#x0026; <string-name><surname>Tse</surname>, <given-names>D.</given-names></string-name> <article-title>Near-optimal Assembly for Shotgun Sequencing with Noisy Reads</article-title>. <source>BMC Bioinformatics</source> <volume>15</volume>, <fpage>1</fpage>&#x2013;<lpage>34</lpage> (<year>2014</year>).</mixed-citation></ref>
<ref id="c44"><label>44.</label><mixed-citation publication-type="other"><string-name><surname>Shomorony</surname>, <given-names>I.</given-names></string-name>, <string-name><surname>Berkeley</surname>, <given-names>U. C.</given-names></string-name>, <string-name><surname>Courtade</surname>, <given-names>T.</given-names></string-name> &#x0026; <string-name><surname>Tse</surname>, <given-names>D.</given-names></string-name> <article-title>Do Read Errors Matter for Genome Assembly?</article-title> <volume>700</volume>, <fpage>0</fpage>&#x2013;<lpage>4</lpage> (<year>2015</year>).</mixed-citation></ref>
<ref id="c45"><label>45.</label><mixed-citation publication-type="journal"><string-name><surname>Hunt</surname>, <given-names>M.</given-names></string-name> <etal>et al.</etal> <article-title>Circlator: automated circularization of genome assemblies using long sequencing reads</article-title>. <source>Genome Biol</source>. <volume>16</volume>, <fpage>294</fpage> (<year>2015</year>).</mixed-citation></ref>
<ref id="c46"><label>46.</label><mixed-citation publication-type="journal"><string-name><surname>Li</surname>, <given-names>H.</given-names></string-name> <article-title>Minimap and miniasm: fast mapping and de novo assembly for noisy long sequences</article-title>. <source>arXiv</source> <volume>32</volume>, <fpage>1</fpage>&#x2013;<lpage>7</lpage> (<year>2015</year>).</mixed-citation></ref>
</ref-list>
<sec id="s5" sec-type="supplementary-material">
<label>7.</label>
<title>Supplementary data</title>
<fig id="figS1" position="float">
<label>Figure S1:</label>
<caption><title>Comparison of assembly graphs made by different assemblers using only short reads for <italic>Klebsiella pneumoniae</italic> INF125. Contigs are coloured based on which replicon they represent.</title>
</caption>
<graphic xlink:href="096412_figS1.tif"/></fig>
<fig id="figS2" position="float">
<label>Figure S2:</label>
<caption><title>Error rates when aligning Illumina reads to each <italic>Klebsiella pneumoniae</italic> INF274 assembly. An increase in discordant pairs is indicative of a misassembly. An increase in error rate is indicative of small errors (mismatches and small indels).</title>
</caption>
<graphic xlink:href="096412_figS2.tif"/></fig>
<p><bold>Table S1: Commands used for assembly, evaluation and read simulation.</bold></p>
<p><bold>Table S2: Raw QUAST results for simulated read tests.</bold></p>
<p><bold>Table S3: Raw QUAST results for <italic>E. coli</italic> read tests.</bold></p>
<p><bold>Table S4: Raw quality metrics for <italic>K. pneumoniae</italic> INF125 ONT assemblies over time.</bold></p>
</sec>
</back>
</article>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.2d1 20170631//EN" "JATS-archivearticle1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" article-type="article" dtd-version="1.2d1" specific-use="production" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">BIORXIV</journal-id>
<journal-title-group>
<journal-title>bioRxiv</journal-title>
<abbrev-journal-title abbrev-type="publisher">bioRxiv</abbrev-journal-title>
</journal-title-group>
<publisher>
<publisher-name>Cold Spring Harbor Laboratory</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1101/483701</article-id>
<article-version>1.1</article-version>
<article-categories>
<subj-group subj-group-type="author-type">
<subject>Regular Article</subject>
</subj-group>
<subj-group subj-group-type="heading">
<subject>New Results</subject>
</subj-group>
<subj-group subj-group-type="hwp-journal-coll">
<subject>Bioinformatics</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>NucMerge: Genome assembly quality improvement assisted by alternative assemblies and paired-end Illumina reads</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name><surname>Khelik</surname><given-names>Ksenia</given-names></name>
<xref ref-type="aff" rid="a1">1</xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">http://orcid.org/0000-0001-5539-0999</contrib-id>
<name><surname>Nederbragt</surname><given-names>Alexander Johan</given-names></name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a2">2</xref>
</contrib>
<contrib contrib-type="author">
<name><surname>Sandve</surname><given-names>Geir Kjetil</given-names></name>
<xref ref-type="aff" rid="a1">1</xref>
</contrib>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-9329-9974</contrib-id>
<name><surname>Rognes</surname><given-names>Torbj&#x00F8;rn</given-names></name>
<xref ref-type="aff" rid="a1">1</xref>
<xref ref-type="aff" rid="a3">3</xref>
<xref ref-type="corresp" rid="cor1">&#x002A;</xref>
</contrib>
<aff id="a1"><label>1</label><institution>Biomedical Informatics Research Group, Department of Informatics, University of Oslo</institution>, PO Box 1080, 0316 Oslo, <country>Norway</country></aff>
<aff id="a2"><label>2</label><institution>Centre for Ecological and Evolutionary Synthesis, Department of Biosciences, Universitetet i Oslo</institution>, Postboks 1066 Blindern, 0316 Oslo, <country>Norway</country></aff>
<aff id="a3"><label>3</label><institution>Department of Microbiology, Oslo University Hospital</institution>, Rikshospitalet, PO Box 4950 Nydalen, 0424 Oslo, <country>Norway</country></aff>
</contrib-group>
<author-notes>
<corresp id="cor1"><label>&#x002A;</label>Corresponding author: <email>torognes@ifi.uio.no</email></corresp>
</author-notes>
<pub-date pub-type="epub">
<year>2018</year>
</pub-date>
<elocation-id>483701</elocation-id>
<history>
<date date-type="received">
<day>30</day>
<month>11</month>
<year>2018</year>
</date>
<date date-type="rev-recd">
<day>30</day>
<month>11</month>
<year>2018</year>
</date>
<date date-type="accepted">
<day>30</day>
<month>11</month>
<year>2018</year>
</date>
</history>
<permissions>
<copyright-statement>&#x00A9; 2018, Posted by Cold Spring Harbor Laboratory</copyright-statement>
<copyright-year>2018</copyright-year>
<license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by/4.0/"><license-p>This pre-print is available under a Creative Commons License (Attribution 4.0 International), CC BY 4.0, as described at <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link></license-p></license>
</permissions>
<self-uri xlink:href="483701.pdf" content-type="pdf" xlink:role="full-text"/>
<abstract>
<title>Abstract</title>
<sec>
<title>Background</title>
<p>In spite of the major breakthroughs in the second-generation sequencing technologies and the developments of a plethora of assemblers over the last ten years, the resulting genome assemblies may still be fragmented and contain errors. It is typical in genome projects with second-generation reads involved to run multiple assemblers with different parameters and choose the best assembly. However, such an approach is always a trade-off between the strengths and weaknesses of the assemblies. To exploit the advantages of different assemblers, an alternative approach that combines the best parts of several assemblies into one may be applied. The existing tools based on such an approach assist in elongation of assembly fragments and/or improvement of assembly accuracy. Though there has been progress with such a strategy, there is still room for improvement of the existing tools.</p>
</sec>
<sec>
<title>Results</title>
<p>We present NucMerge, a tool for improving genome assembly accuracy by incorporating information derived from an alternative assembly and paired-end Illumina reads from the same genome. The tool corrects insertion, deletion, substitution, and inversion errors and locates different inter- and intra-chromosomal rearrangement errors. NucMerge was compared to two existing alternatives, namely Metassembler and GAM-NGS.</p>
</sec>
<sec>
<title>Conclusions</title>
<p>The benchmarking results show that NucMerge has generally better performance than the other tools tested, providing accuracy improvement of more assemblies. NucMerge is freely available at <ext-link ext-link-type="uri" xlink:href="https://github.com/uio-bmi/NucMerge">https://github.com/uio-bmi/NucMerge</ext-link> under the MPL license.</p>
</sec>
</abstract>
<kwd-group kwd-group-type="author">
<title>Keywords</title>
<kwd>Genome assembly</kwd>
<kwd>genome assembler</kwd>
<kwd>assembly quality</kwd>
<kwd>assembly merging</kwd>
<kwd>assembly reconciliation</kwd>
<kwd>alternative assembly</kwd>
</kwd-group>
<counts>
<page-count count="25"/>
</counts>
</article-meta>
<def-list>
<title>Abbreviations</title>
<def-item>
<term>CE</term>
<def><p>compression-expansion</p></def>
</def-item>
<def-item>
<term>bp</term>
<def><p>base pairs</p></def>
</def-item>
</def-list>
</front>
<body>
<sec id="s1">
<label>1.</label>
<title>Background</title>
<p>In spite of the major breakthroughs in sequencing technologies over the last ten years, genome assembly using second-generation sequencing reads still remains a complicated problem. This is mainly due to the repeated structure of genomes and specific characteristics of the second-generation sequencing technologies, such as a large volume of data, relatively short length of sequenced fragments, uneven sequencing coverage, and presence of sequencing errors and chimeric reads [<xref rid="c1" ref-type="bibr">1</xref>,<xref rid="c2" ref-type="bibr">2</xref>]. A great number of assemblers with different heuristic approaches have been developed to deal with these challenges. However, the obtained assemblies may still be fragmented and containing errors.</p>
<p>A widely used approach to get an assembly using second-generation sequencing reads is to run multiple assemblers with different parameters and choose the best solution, for example based on assembly statistics, or agreement with physical, genetic, or optical maps. The rationality of this strategy has been confirmed by several evaluations like GAGE and Assemblathon [<xref rid="c3" ref-type="bibr">3</xref>-<xref rid="c6" ref-type="bibr">6</xref>]. The studies have revealed that the performance of assemblers varies a lot across different organisms, sequencing data, and assembler parameter settings and that it is impossible to predict in advance which assembler should be used. However, the studies have also shown that no single assembler has outperformed other assemblers in all evaluation metrics used, meaning that the process of choosing the best assembly is always a trade-off between different criteria (e.g. number of errors versus contiguity, number of insertions and deletions versus number of structural rearrangements, and so on).</p>
<p>To avoid the dilemma of determining which assembly is the best, an alternative approach would be to combine several assemblies into one. This process, called assembly reconciliation or assembly merging, enables the exploitation of advantages of different assemblers, resulting in a more contiguous solution with fewer errors. Existing merging tools can be divided into three groups: tools developed to correct errors and close internal gaps (e.g. Reconciliator [<xref rid="c7" ref-type="bibr">7</xref>]), tools aiming at the extension of assembly fragments and closure of gaps between fragments (e.g. Mix [<xref rid="c8" ref-type="bibr">8</xref>], GARM [<xref rid="c9" ref-type="bibr">9</xref>], ZORRO [<xref rid="c10" ref-type="bibr">10</xref>], and CISA [<xref rid="c11" ref-type="bibr">11</xref>]), and tools intended to improve both the accuracy and contiguity of a final assembly (e.g. GAA [<xref rid="c12" ref-type="bibr">12</xref>], GAM-NGS [<xref rid="c13" ref-type="bibr">13</xref>], and Metassembler [<xref rid="c14" ref-type="bibr">14</xref>]).</p>
<p>The tools aimed at assembly accuracy improvement (1) detect conflicting regions between alternative assemblies, (2) exploit different analysis, such as the compression-expansion statistic (CE statistic) [<xref rid="c7" ref-type="bibr">7</xref>] or depth-of-coverage analysis, to detect inconsistencies in the alignments of reads mapped back to the assemblies, and (3) choose the most reliable alternatives. The analysis based on the CE statistic has been first implemented in the Reconciliator tool and then incorporated in GAA and Metassembler. The CE statistic compares the mean insert size of the reads that span a particular region against the mean insert size of all reads. The depth-of coverage analysis has been used in GAM-NGS. It compares the read coverage of a particular region against the global read coverage. Although there has been some development in the field, there still seems to be possibilities for improvement.</p>
<p>In this article, we present a new assembly merging tool called NucMerge. It uses NucDiff [<xref rid="c15" ref-type="bibr">15</xref>] to detect differences between two alternative assemblies, and it uses Pilon [<xref rid="c16" ref-type="bibr">16</xref>] and NucBreak [<xref rid="c17" ref-type="bibr">17</xref>] to evaluate the correctness of assembly sequences in its pipeline. Pilon detects structural and local assembly errors of different lengths by analysing discordant paired-end read alignments and abnormal coverages. NucBreak detects structural errors and local errors longer than 30 bp in assemblies. In contrast to Pilon, it does this by analysing the alignments of reads that are properly mapped to an assembly (where both reads in a pair are fully aligned in correct orientation at a reasonable distance) and exploiting information about alternative alignments of the reads [<xref rid="c17" ref-type="bibr">17</xref>]. Being based on different methods, the tools complement each other, enabling the correction of more errors than either tool corrects alone.</p>
<p>NucMerge enables correction of inversions and local errors (insertions, deletions, and substitutions) and localization of rearrangement errors in genome assemblies. The tool has been compared with GAM-NGS and Metassembler. Only the ability of the tools to improve accuracy of assemblies has been studied. The results have shown that the error detection approach used in NucMerge is more effective than the CE-statistics and depth-of-coverage analysis, allowing NucMerge to improve assemblies in more cases compared to the other tools.</p>
<sec id="s1a">
<label>2.</label>
<title>Implementation</title>
<p>NucMerge has been developed to improve the quality of an assembly, called the target assembly, by the correction of local errors and inversions and by the splitting of assembly fragments in the regions where inter- and intra-chromosomal rearrangements are located. Error correction and sequence splitting are performed based on information provided by another available assembly, called the query assembly, and a set of Illumina paired-end reads from the same genome.</p>
</sec>
<sec id="s1b">
<label>2.1</label>
<title>Method description</title>
<p>The NucMerge pipeline consists of the evaluation, comparison and correction steps (see <xref rid="fig1" ref-type="fig">Figure 1</xref>). The evaluation and comparison steps prepare information needed for the correction step by running several external tools. During the evaluation step, NucBreak and Pilon analyse the target and query assemblies separately using information in the paired-end reads and predict erroneous regions of the assemblies. At the comparison step, NucDiff compares the query and target assemblies and outputs the types and locations of all differences between them.</p>
<fig id="fig1" position="float" fig-type="figure">
<label>Figure 1</label>
<caption><p>NucMerge workflow</p></caption>
<graphic xlink:href="483701v1_fig1.tif"/>
</fig>
<p>Having collected all necessary information from the first two steps, NucMerge continues with the correction step. First, it detects erroneous target assembly regions suitable for alteration. For this purpose, it identifies differences located in the regions that have been predicted to contain errors in the target assembly by NucMerge and/or Pilon and have been predicted by the same tool(s) to be error free in the query assembly. Then NucMerge corrects or splits target assembly sequence regions containing the differences found, depending on the types of differences. If a target assembly region is related to an insertion, deletion, substitution or inversion difference, the region is substituted with the corresponding query assembly region. If a target assembly region is related to any inter- and intra-chromosomal rearrangement difference, the target assembly sequence is split in this region. The final result is an assembly with improved accuracy and a file with information about all changes performed.</p>
</sec>
<sec id="s1c">
<label>2.2</label>
<title>Datasets</title>
<p>For testing purposes, we created three different datasets. The first dataset was created on the base of the data provided by the Assemblathon 1 project [<xref rid="c5" ref-type="bibr">5</xref>]. An artificially evolved human chromosome 13 (hg18/NCBI36), simulated Illumina paired-end read library with 40x coverage, and three genome assemblies obtained by Velvet [<xref rid="c18" ref-type="bibr">18</xref>], Meraculous [<xref rid="c19" ref-type="bibr">19</xref>], and AllPaths-LG [<xref rid="c20" ref-type="bibr">20</xref>] (named as C2, G1, and Q1, respectively, in the Assemblathon 1 project and in this article) were downloaded from the Assemblathon 1 website [<xref rid="c21" ref-type="bibr">21</xref>].</p>
<p>The second dataset consisted of 8 bacterial genomes, MiSeq Illumina paired-end read libraries provided for these genomes, and assemblies generated using the ABySS (version 2.0.2) [<xref rid="c22" ref-type="bibr">22</xref>], SPAdes (version 3.11.0) [<xref rid="c23" ref-type="bibr">23</xref>] and Velvet (version 1.2.10) assemblers. These assemblers were chosen because they are popular and were readily available. The genomes of the <italic>Bordetella pertussis</italic> str. J081, <italic>Brucella melitensis</italic> str. 1, <italic>Enterobacter cloacae</italic> str. AR_0136, <italic>Escherichia coli</italic> str. 2014C-3599, <italic>Klebsiella pneumoniae</italic> str. SGH10, <italic>Pseudomonas aeruginosa</italic> str. AR_0095, <italic>Salmonella enterica</italic> str. CFSAN047866, and <italic>Staphylococcus aureus</italic> str. CFSAN007896 organisms were downloaded from the NCBI database [<xref rid="c24" ref-type="bibr">24</xref>]. The reads were downloaded from the EBI database [<xref rid="c25" ref-type="bibr">25</xref>]. The genomes accession numbers and information about the read libraries are given in [Additional file 1: Table S1]. The parameter settings used to run ABySS, SPAdes and Velvet are described in [Additional file 1].</p>
<p>The third dataset was created on the basis of the data provided by the GAGE B project [<xref rid="c4" ref-type="bibr">4</xref>]. We used assemblies generated by the ABySS, CABOG [<xref rid="c26" ref-type="bibr">26</xref>], MaSuRCA [<xref rid="c27" ref-type="bibr">27</xref>], SGA [<xref rid="c28" ref-type="bibr">28</xref>], SOAPdenovo [<xref rid="c29" ref-type="bibr">29</xref>], SPAdes, and Velvet assemblers based on MiSeq Illumina reads from <italic>Bacillus cereus</italic> ATCC 10987 and HiSeq Illumina reads from <italic>Rhodobacter sphaeroides</italic> 2.4.1 and <italic>Vibrio cholerae</italic> CO 1032(5). The assemblies and reads were downloaded from the GAGE- B official website [<xref rid="c30" ref-type="bibr">30</xref>]. For evaluation, we used <italic>B. cereus</italic> ATCC 10987 (accession GCA_000008005.1), <italic>R. sphaeroides</italic> 2.4.1 (accession GCA_000012905.2), and <italic>V. cholerae</italic> O1 biovar eltor str. N16961 (accession GCA_000006745.1) as reference genomes. They were downloaded from the NCBI database.</p>
</sec>
</sec>
<sec id="s2">
<label>3.</label>
<title>Results</title>
<p>In this section, we explore the ability of NucBreak, Metassembler, and GAM-NGS to produce a new assembly with fewer errors using target and query assemblies and Illumina paired-end reads.</p>
<p>We excluded the GAA and Reconciliator tools from the testing. GAA had already been compared to GAM-NGS in [<xref rid="c13" ref-type="bibr">13</xref>] and [<xref rid="c31" ref-type="bibr">31</xref>]. In both cases, GAA showed its predisposition to introduction of structural rearrangements and duplication errors. Reconciliator is no longer maintained and not available any more. We also excluded MIX, Zorro, and CISA, since they only elongated the assembly sequences and filled in gaps but did not correct local assembly errors. In all tests performed, the tools were run with their default settings, except for the minimum and maximum insert size parameters, which should be specified for Metassembler and GAM-NGS. The exact parameter values used in each test are given in [Additional file 1].</p>
<p>To evaluate the results, we compared the initial and resulting assemblies to the reference genomes using the dnadiff utility [<xref rid="c32" ref-type="bibr">32</xref>] and assessed the accuracy of the assemblies based on the three following metrics: (1) the total number of bases involved in insertions, deletions and substitution errors (noted as the length of local errors), (2) the total number of inter- and intra- chromosomal translocations and inversions (noted as the number of structural errors), and (3) the total number of alignment breakpoints occurring due to the presence of long insertion and deletion errors as well as structural errors (noted as the number of breakpoints).</p>
<p>In order to improve visualization of the results, we show the differences between the values of the new assemblies and initial assemblies instead of their absolute values. In some figures, a logarithmic scale is applied.</p>
<sec id="s2a">
<label>3.1</label>
<title>Pairwise assembly merging validation using simulated datasets</title>
<p>First, we explored the ability of NucBreak, Metassembler, and GAM-NGS to correct errors when simulated data was given. For this purpose, we used an artificially evolved diploid genome, simulated reads, and three assemblies C2, G1, and Q1 generated by the Velvet, Meraculous, and AllPaths-LG assemblers respectively (see Section 2.2, the first dataset for details). We ran the tools for the following pairs of assemblies: C2 and G1, C2 and Q1, G1 and C2, and G1 and Q1, where the first assembly in a pair was a target assembly and the second assembly was a query assembly. The results for the two other combinations of assemblers were not included because their analysis with dnadiff was not completed within two weeks. The newly obtained assemblies were then compared with the reference genome using dnadiff. The comparison results are given in <xref rid="fig2" ref-type="fig">Figures 2-4</xref>.</p>
<fig id="fig2" position="float" fig-type="figure">
<label>Figure 2</label>
<caption><p>Differences between the total lengths of local errors in the initial (target) and final assemblies when the simulated dataset is used. All values are given in a logarithmic scale. A negative number means that the given tool has decreased the number of bases involved in local errors in the final assembly compared to the initial one. The C2, G1, and Q1 assemblies correspond to assemblies obtained using Velvet, Meraculous, and AllPaths-LG, respectively.</p></caption>
<graphic xlink:href="483701v1_fig2.tif"/>
</fig>
<fig id="fig3" position="float" fig-type="figure">
<label>Figure 3</label>
<caption><p>Differences between the number of structural errors in the initial (target) and final assemblies when the simulated dataset is used. All values are given in a logarithmic scale. A negative number means that the given tool has decreased the number of structural errors in the final assembly compared to the initial one. The C2, G1, and Q1 assemblies correspond to assemblies obtained using Velvet, Meraculous, and AllPaths-LG, respectively.</p></caption>
<graphic xlink:href="483701v1_fig3.tif"/>
</fig>
<fig id="fig4" position="float" fig-type="figure">
<label>Figure 4</label>
<caption><p>Differences between the number of breakpoints in the initial (target) and final assemblies when the simulated dataset is used. All values are given in a logarithmic scale. A negative number means that the given tool has decreased the number of breakpoints in the final assembly compared to the initial one. The C2, G1, and Q1 assemblies correspond to assemblies obtained using Velvet, Meraculous, and AllPaths-LG, respectively.</p></caption>
<graphic xlink:href="483701v1_fig4.tif"/>
</fig>
<p>As seen from <xref rid="fig2" ref-type="fig">Figures 2-4</xref>, all tools managed to generate improved assemblies according to the different metrics studied. Metassembler obtained new assemblies with a decreased length of local errors and a reduced number of structural errors and breakpoints in all four cases. Best results were obtained with G1 as target assembly and Q1 as query assembly. In this case, the length of local errors was lowered by more than one million bases, and the number of structural errors and breakpoints was reduced by 1502 and 27440, respectively.</p>
<p>NucMerge performed very similar to Metassembler in all cases, except for the one case with G1 as target assembly and C2 as query assembly. In this case, NucMerge increased the length of local errors by 244436 bases while reducing the number of structural errors and breakpoints similarly to Metassember.</p>
<p>In contrast to the other tools, GAM-NGS performance varied considerably depending on the cases tested and metrics studied. It enabled the reduction of the length of local errors in two cases and the number of breakpoints in one case. It decreased the number of structural errors in none of the cases. None of the assemblies generated by GAM-NGS had all values reduced for the evaluated metrics.</p>
</sec>
<sec id="s2b">
<label>3.2</label>
<title>Pairwise assembly merging validation using real datasets</title>
<p>Next, we explored the ability of NucBreak, Metassembler, and GAM-NGS to correct errors when real data was given. We downloaded reads for eight bacterial genomes and generated assemblies by using ABySS, SPAdes, and Velvet (see Section 2.2, the second dataset for full description of the data and assembler parameter settings used). NucBreak, Metassembler, and GAM-NGS were run for all possible pairs of assemblies separately for each organism. The obtained assemblies were then compared with reference genomes using dnadiff. The comparison results are presented in <xref rid="fig5" ref-type="fig">Figures 5-7</xref>.</p>
<fig id="fig5" position="float" fig-type="figure">
<label>Figure 5</label>
<caption><p>Differences between the total lengths of local errors in the initial (target) and final assemblies when the indicated bacterial genomes in the real dataset are used. All values are given in a logarithmic scale. A negative number means that the given tool (columns) has decreased the number of bases involved in local errors in the final assembly compared to the initial one. Query assemblies (Query_asmb) are indicated with colours. The row names denote the target assemblies.</p></caption>
<graphic xlink:href="483701v1_fig5.tif"/>
</fig>
<fig id="fig6" position="float" fig-type="figure">
<label>Figure 6</label>
<caption><p>Differences between the number of structural errors in the initial (target) and final assemblies when the indicated bacterial genomes in the real dataset are used. A negative number means that the given tool (columns) has decreased the number of structural errors in the final assembly compared to the initial one. Query assemblies (Query_asmb) are indicated with colours. The row names denote the target assemblies.</p></caption>
<graphic xlink:href="483701v1_fig6.tif"/>
</fig>
<fig id="fig7" position="float" fig-type="figure">
<label>Figure 7</label>
<caption><p>Differences between the number of breakpoints in the initial (target) and final when the indicated bacterial genomes in the real dataset are used. All values are given in a logarithmic scale. A negative number means that the given tool (columns) has decreased the number of breakpoints in the final assembly compared to the initial one. Query assemblies (Query_asmb) are indicated with colours. The row names denote the target assemblies.</p></caption>
<graphic xlink:href="483701v1_fig7.tif"/>
</fig>
<p>As shown in <xref rid="fig5" ref-type="fig">Figures 5-7</xref>, the performance of all tools varied a lot depending on the data used and the metrics studied. However, all three tools were able to generate new assemblies where all metrics were decreased or remained the same compared to the initial target assembly. Such improved assemblies were observed in 36 cases for NucMerge, in 3 cases for Metassembler and in 4 cases for GAM-NGS out of 48 cases. The assemblies, where one or more metrics were increased, were observed in 12 cases for NucMerge, 44 cases for Metassembler and 38 cases for GAM-NGS. In the remaining cases, the metrics were unchanged.</p>
<p>NucMerge demonstrated its better performance by decreasing values for each metric in many more cases than the other tools. Metassembler reduced the length of local errors in more cases than GAM-NGS, while GAM-NGS reduced the number of structural errors and breakpoints in more cases than Metassembler.</p>
</sec>
<sec id="s2c">
<label>3.3</label>
<title>Multiple assembly merging validation</title>
<p>Finally, we analysed the accuracy of the NucMerge, GAM-NGS and Metassembler solutions generated by the sequential merging of a target assembly with several query assemblies. To perform this, we downloaded reads and assemblies generated by the ABySS, CABOG, MaSuRCA, SGA, SOAPdenovo, SPAdes, and Velvet assemblers for three bacterial genomes (see Section 2.2, the third dataset for full description of the data used). We started the merging process with the assemblies with the longest and the second longest N50 (the SOAPdevo and CABOG assemblies for <italic>B. cereus</italic>, the MaSuRCA and SPAdes assembly for <italic>R. sphaeroides</italic> and the MaSuRCA and ABySS for <italic>V. cholerae</italic>) as target assemblies and applied the other assemblies as query assemblies in three different orders: (1) in order of decreasing N50 values, (2) in order of increasing N50 values and (3) in a random order. The exact merging order for each test is given in <xref rid="tbl1" ref-type="table">Table 1</xref>. The final solutions were then compared with reference genomes using dnadiff. The comparison results are presented in <xref rid="fig8" ref-type="fig">Figures 8-10</xref>.</p>
<table-wrap id="tbl1" orientation="portrait" position="float">
<label>Table 1:</label>
<caption><p>Merging order of the assemblies for each test performed. So, Ca, Ms, Ve, Sp, Ab, and Sg denotes the SOAPdenovo, CABOG, MaSuRCA, Velvet, SPAdes, ABySS, and SGA assemblies, respectively. The first assembly in the order sequence is a target assembly, all others are query assemblies. In the table cell, the first order sequence corresponds to the one where the target assembly has the longest N50, while the second order sequence corresponds to the one where the target assembly has the second longest N50.</p></caption>
<graphic xlink:href="483701v1_tbl1.tif"/>
</table-wrap>
<fig id="fig8" position="float" fig-type="figure">
<label>Figure 8</label>
<caption><p>Differences between the total lengths of local errors in the initial (target) and final assemblies when the multiple assembly merging approach is applied. All values are given in a logarithmic scale. A negative number means that the given tool has decreased the number of bases involved in local errors in the final assembly compared to the initial one. In the notations of the merging approach names, F and S denote the cases where the target assembly with the longest N50 and second longest N50 are used, respectively. The labels &#x201C;decrease&#x201D;, &#x201C;increase&#x201D;, &#x201C;random_1&#x201D;, &#x201C;random_2&#x201D;, and &#x201C;random_3&#x201D; denote merging strategies and correspond to the N50 decreasing, N50 increasing and random test1, test2 and test3 merging strategies described in <xref rid="tbl1" ref-type="table">Table 1</xref>.</p></caption>
<graphic xlink:href="483701v1_fig8.tif"/>
</fig>
<fig id="fig9" position="float" fig-type="figure">
<label>Figure 9</label>
<caption><p>Differences between the number of structural errors in the initial (target) and final assemblies when the multiple assembly merging approach is applied. A negative number means that the given tool has decreased the number of structural errors in the final assembly compared to the initial one. In the notations of merging approach names, F and S denote the cases where the target assembly with the longest N50 and second longest N50 are used, respectively. The labels &#x201C;decrease&#x201D;, &#x201C;increase&#x201D;, &#x201C;random_1&#x201D;, &#x201C;random_2&#x201D;, and &#x201C;random_3&#x201D; denote merging strategies and correspond to the N50 decreasing, N50 increasing and random test1, test2 and test3 merging strategies described in <xref rid="tbl1" ref-type="table">Table 1</xref>.</p></caption>
<graphic xlink:href="483701v1_fig9.tif"/>
</fig>
<fig id="fig10" position="float" fig-type="figure">
<label>Figure 10</label>
<caption><p>Differences between the number of breakpoints in the initial (target) and final assemblies when the multiple assembly merging approach is applied. All values are given in a logarithmic scale. A negative number means that the given tool has decreased the number of breakpoints in the final assembly compared to the initial one. In the notations of merging approach names, F and S denote the cases where the target assembly with the longest N50 and second longest N50 are used, respectively. The labels &#x201C;decrease&#x201D;, &#x201C;increase&#x201D;, &#x201C;random_1&#x201D;, &#x201C;random_2&#x201D;, and &#x201C;random_3&#x201D; denote merging strategies and correspond to the N50 decreasing, N50 increasing and random test1, test2 and test3 merging strategies described in <xref rid="tbl1" ref-type="table">Table 1</xref>.</p></caption>
<graphic xlink:href="483701v1_fig10.tif"/>
</fig>
<p>From the plots presented in <xref rid="fig8" ref-type="fig">Figures 8-10</xref>, it can be concluded that NucMerge has overall better performance than the other tools according to the metrics evaluated. It decreased the length of local errors and number of breakpoints approximately in half of the cases and reduced the number of structural errors in the most cases. It also generated 8 out of 30 new assemblies where all metrics were reduced. In contrast, Metassembler and GAM-NGS increased all metrics in almost all cases. They did not produce any new assembly where all metrics were improved.</p>
<p>The comparison of the results obtained with different merging strategies showed that the strategy where assemblies were added in order of decreasing N50 values was beneficial for local error correction. The strategy where assemblies were added in order of increasing N50 values showed good results when it was applied for structural error detection. The merging strategy with random assembly order showed both good and bad results for all metrics and all tools. The effectiveness of each strategy to decrease the number of breakpoints varied depending on tools, organisms, and assembly pairs.</p>
</sec>
</sec>
<sec id="s3">
<label>4.</label>
<title>Discussion</title>
<p>In this work, we have introduced a tool called NucMerge. With the assistance of alternative assemblies, NucMerge corrects inversions and local errors (such as insertions, deletions, and substitutions) and locates structural inconsistencies (such as inter- and intra-chromosomal rearrangements) in assemblies. It is based on the usage of two existing tools for assembly error detection, called Pilon and NucBreak. These tools are utilized as an alternative to the CE-statistics and depth-of-coverage analysis exploited in the existing tools, such as GAM-NGS and Metassembler. The results show that the combination of methods, as it is implemented in NucMerge, in general is more beneficial for assembly merging than a single method, enabling production of improved assemblies. For bacterial genomes, NucMerge performed better in most cases, while for the artificial genome it performed equal to the best of the tools, except for one case.</p>
<p>The proposed approach does not completely eliminate the production of assemblies with deteriorated accuracy. According to the results, NucMerge has also generated new assemblies with more structural errors and longer length of local errors in some cases. To enable manual validation of all modifications proposed and reduce the number of false modifications, NucMerge outputs information about the locations of structural inconsistencies detected and modifications performed in addition to the modified assembly sequences. The information is stored in GFF3 format [<xref rid="c33" ref-type="bibr">33</xref>] and can be easily uploaded to a genome browser, e.g. IGV [<xref rid="c34" ref-type="bibr">34</xref>,<xref rid="c35" ref-type="bibr">35</xref>], together with the assembly and read alignments.</p>
<p>During the testing, we explored both pairwise and multiple assembly merging approaches. The results obtained for the pairwise merging did not reveal any dependencies between the successful merging and certain combinations of assemblers for all tools tested. The same pair of assemblers produced the assemblies with both improved and deteriorated accuracy for different organisms.</p>
<p>During the multiple merging testing, we merged sequentially target assemblies with other assemblies in five different orders. The orders included three different random combinations and two combinations depending on the N50 values (one in increasing N50 order and one in decreasing N50 order). Although the random query assembly order gave rise to the solutions with the best accuracy compared to the other merging strategies, it was also associated with the cases of the strongest accuracy degradation. Not having any possibilities to assess the quality of the obtained assemblies, it is clearly a risky strategy. The strategy with the decreasing N50 query assembly order always produced solutions with one of the lowest number of bases involved in local errors compared to the other merging strategies for all tools. The same strategy was beneficial for reduction of structural errors for GAM-NGS. However, for NucMerge and Metassembler, the best strategy to reduce the structural error number was the one with the increasing N50 query assembly order.</p>
<p>The current version of the tool described here focuses on the matter of assembly accuracy improvement only. However, we also intend to extend NucMerge&#x2019;s functionality by merging assembly sequences and resolving rearrangements errors to improve assembly contiguity.</p>
</sec>
<sec id="s4">
<label>5.</label>
<title>Conclusion</title>
<p>We have presented NucMerge, a new tool for merging two or more alternative assemblies into a new assembly with improved accuracy with the assistance of paired-end Illumina reads. The tool enables correction of inversions and local errors, such as insertions, deletions and substitutions, and provide locations of structural errors, such as inter- and intra-chromosomal rearrangements, in a target assembly. In contrast to the other existing tools, NucMerge exploits several methods for assembly error detection, such as analysis of discordant paired-end read alignments, abnormal coverages, alternative read alignments and properly mapped read pairs, by using Pilon and NucBreak in its pipeline. The tool was compared to the existing alternatives, namely Metassembler and GAM-NGS. The results have shown that it improves assemblies in more cases compared to the other tools using both pairwise and multiple assembly merging approaches.</p>
</sec>
<sec sec-type="supplementary-material">
<title>Supporting information</title>
<supplementary-material>
<media xlink:href="supplements/483701_file02.pdf" />
</supplementary-material>
</sec>
</body>
<back>
<sec id="s5">
<title>Declarations</title>
</sec>
<ack>
<title>Acknowledgements</title>
<p>The authors wish to thank the Centre for Ecological and Evolutionary Synthesis (CEES) for access to the computational infrastructure (&#x2018;cod&#x2019; servers) that enabled the bioinformatics analysis for this project.</p>
</ack>
<sec id="s6" sec-type="funding">
<title>Funding</title>
<p>The funding body played no role in the design or conclusions of this study.</p>
</sec>
<sec id="s7" sec-type="availability">
<title>Availability of data and materials</title>
<list list-type="bullet">
<list-item><p>Project name: NucMerge</p></list-item>
<list-item><p>Project home page: <ext-link ext-link-type="uri" xlink:href="https://github.com/uio-bmi/NucMerge">https://github.com/uio-bmi/NucMerge</ext-link></p></list-item>
<list-item><p>Operating system(s): Unix-like system such as Ubuntu Linux and MacOS X.</p></list-item>
<list-item><p>Programming language: Python</p></list-item>
<list-item><p>Other requirements: Python 2.7</p></list-item>
<list-item><p>License: Mozilla Public License (MPL), version 2.0</p></list-item>
<list-item><p>Any restrictions to use by non-academics: No</p></list-item>
<list-item><p>Additional data: all data used is available as described in Section 2.2</p></list-item>
</list>
<sec id="s7a">
<title>Authors&#x2019; contributions</title>
<p>KK designed and implemented NucMerge. KK, GKS, AJN, and TR suggested the experiments performed. KK performed all the experiments. KK and TR wrote the manuscript. GKS and AJN revised the manuscript. All authors read and approved the final manuscript.</p>
</sec>
</sec>
<sec id="s8">
<title>Ethics approval and consent to participate</title>
<p>Not applicable.</p>
</sec>
<sec id="s9">
<title>Consent for publication</title>
<p>Not applicable.</p>
</sec>
<sec id="s10" sec-type="COI-statement">
<title>Competing interests</title>
<p>The authors declare that they have no competing interests.</p>
</sec>
<ref-list>
<title>References</title>
<ref id="c1"><label>1.</label><mixed-citation publication-type="journal"><string-name><surname>Miller</surname> <given-names>JR</given-names></string-name>, <string-name><surname>Koren</surname> <given-names>S</given-names></string-name>, <string-name><surname>Sutton</surname> <given-names>G.</given-names></string-name> <article-title>Assembly algorithms for next-generation sequencing data</article-title>. <source>Genomics</source>. <year>2010</year> <month>Jun</month>;<volume>95</volume>(<issue>6</issue>):<fpage>315</fpage>&#x2013;<lpage>27</lpage>. DOI:<pub-id pub-id-type="doi">10.1016/j.ygeno.2010.03.001</pub-id>.</mixed-citation></ref>
<ref id="c2"><label>2.</label><mixed-citation publication-type="journal"><string-name><surname>Sohn</surname> <given-names>JI</given-names></string-name>, <string-name><surname>Nam</surname> <given-names>JW</given-names></string-name>. <article-title>The present and future of de novo whole-genome assembly</article-title>. <source>Brief Bioinform</source>. <year>2018 Jan 1</year>;<volume>19</volume>(<issue>1</issue>):<fpage>23</fpage>&#x2013;<lpage>40</lpage>. DOI:<pub-id pub-id-type="doi">10.1093/bib/bbw096</pub-id>.</mixed-citation></ref>
<ref id="c3"><label>3.</label><mixed-citation publication-type="journal"><string-name><surname>Salzberg</surname> <given-names>SL</given-names></string-name>, <string-name><surname>Phillippy</surname> <given-names>AM</given-names></string-name>, <string-name><surname>Zimin</surname> <given-names>A</given-names></string-name>, <string-name><surname>Puiu</surname> <given-names>D</given-names></string-name>, <string-name><surname>Magoc</surname> <given-names>T</given-names></string-name>, <string-name><surname>Koren</surname> <given-names>S</given-names></string-name>, <string-name><surname>Treangen</surname> <given-names>TJ</given-names></string-name>, <string-name><surname>Schatz</surname> <given-names>MC</given-names></string-name>, <string-name><surname>Delcher</surname> <given-names>AL</given-names></string-name>, <string-name><surname>Roberts</surname> <given-names>M</given-names></string-name>, <string-name><surname>Mar&#x00E7;ais</surname> <given-names>G</given-names></string-name>, <string-name><surname>Pop</surname> <given-names>M</given-names></string-name>, <string-name><surname>Yorke</surname> <given-names>JA</given-names></string-name>. <article-title>GAGE: A critical evaluation of genome assemblies and assembly algorithms</article-title>. <source>Genome Res</source>. <year>2012</year> <month>Mar</month>;<volume>22</volume>(<issue>3</issue>):<fpage>557</fpage>&#x2013;<lpage>67</lpage>. DOI:<pub-id pub-id-type="doi">10.1101/gr.131383.111</pub-id>.</mixed-citation></ref>
<ref id="c4"><label>4.</label><mixed-citation publication-type="journal"><string-name><surname>Magoc</surname> <given-names>T</given-names></string-name>, <string-name><surname>Pabinger</surname> <given-names>S</given-names></string-name>, <string-name><surname>Canzar</surname> <given-names>S</given-names></string-name>, <string-name><surname>Liu</surname> <given-names>X</given-names></string-name>, <string-name><surname>Su</surname> <given-names>Q</given-names></string-name>, <string-name><surname>Puiu</surname> <given-names>D</given-names></string-name>, <string-name><surname>Tallon</surname> <given-names>LJ</given-names></string-name>, <string-name><surname>Salzberg</surname> <given-names>SL</given-names></string-name>. <article-title>GAGE-B: an evaluation of genome assemblers for bacterial organisms</article-title>. <source>Bioinformatics</source>. <year>2013</year>;<volume>29</volume>(<issue>14</issue>):<fpage>1718</fpage>&#x2013;<lpage>1725</lpage>. DOI:<pub-id pub-id-type="doi">10.1093/bioinformatics/btt273</pub-id>.</mixed-citation></ref>
<ref id="c5"><label>5.</label><mixed-citation publication-type="journal"><string-name><surname>Earl</surname> <given-names>D</given-names></string-name>, <string-name><surname>Bradnam</surname> <given-names>K</given-names></string-name>, <string-name><surname>St John</surname> <given-names>J</given-names></string-name>, <string-name><surname>Darling</surname> <given-names>A</given-names></string-name>, <string-name><surname>Lin</surname> <given-names>D</given-names></string-name>, <string-name><surname>Fass</surname> <given-names>J</given-names></string-name>, <etal>et al.</etal> <article-title>Assemblathon 1: a competitive assessment of de novo short read assembly methods</article-title>. <source>Genome Res</source>. <year>2011</year>;<volume>21</volume>(<issue>12</issue>):<fpage>2224</fpage>&#x2013;<lpage>41</lpage>. DOI:<pub-id pub-id-type="doi">10.1101/gr.126599.111</pub-id>.</mixed-citation></ref>
<ref id="c6"><label>6.</label><mixed-citation publication-type="journal"><string-name><surname>Bradnam</surname> <given-names>KR</given-names></string-name>, <string-name><surname>Fass</surname> <given-names>JN</given-names></string-name>, <string-name><surname>Alexandrov</surname> <given-names>A</given-names></string-name>, <string-name><surname>Baranay</surname> <given-names>P</given-names></string-name>, <string-name><surname>Bechner</surname> <given-names>M</given-names></string-name>, <string-name><surname>Birol</surname> <given-names>I</given-names></string-name>, <string-name><surname>Boisvert</surname> <given-names>S</given-names></string-name>, <string-name><surname>Chapman</surname> <given-names>JA</given-names></string-name>, <etal>et al.</etal> <article-title>Assemblathon 2: evaluating <italic>de novo</italic> methods of genome assembly in three vertebrate species</article-title>. <source>Gigascience</source>. <year>2013</year>; <volume>2</volume>: <fpage>10</fpage>. DOI:<pub-id pub-id-type="doi">10.1186/2047-217X-2-10</pub-id>.</mixed-citation></ref>
<ref id="c7"><label>7.</label><mixed-citation publication-type="journal"><string-name><surname>Zimin</surname> <given-names>AV</given-names></string-name>, <string-name><surname>Smith</surname> <given-names>DR</given-names></string-name>, <string-name><surname>Sutton</surname> <given-names>G</given-names></string-name>, <string-name><surname>Yorke</surname> <given-names>JA</given-names></string-name>. <article-title>Assembly reconciliation</article-title>. <source>Bioinformatics</source>. <year>2008</year>;<volume>24</volume>(<issue>1</issue>):<fpage>42</fpage>&#x2013;<lpage>5</lpage>. DOI:<pub-id pub-id-type="doi">10.1093/bioinformatics/btm542</pub-id></mixed-citation></ref>
<ref id="c8"><label>8.</label><mixed-citation publication-type="journal"><string-name><surname>Soueidan</surname> <given-names>H</given-names></string-name>, <string-name><surname>Maurier</surname> <given-names>F</given-names></string-name>, <string-name><surname>Groppi</surname> <given-names>A</given-names></string-name>, <string-name><surname>Sirand-Pugnet</surname> <given-names>P</given-names></string-name>, <string-name><surname>Tardy</surname> <given-names>F</given-names></string-name>, <string-name><surname>Citti</surname> <given-names>C</given-names></string-name>, <string-name><surname>Dupuy</surname> <given-names>V</given-names></string-name>, <string-name><surname>Nikolski</surname> <given-names>M.</given-names></string-name> <article-title>Finishing bacterial genome assemblies with Mix</article-title>. <source>BMC Bioinformatics</source>. <year>2013</year>;<volume>14</volume> Suppl 15:<fpage>S16</fpage>. DOI:<pub-id pub-id-type="doi">10.1186/1471-2105-14-S15-S16</pub-id>.</mixed-citation></ref>
<ref id="c9"><label>9.</label><mixed-citation publication-type="journal"><string-name><surname>Soto-Jimenez</surname> <given-names>LM</given-names></string-name>, <string-name><surname>Estrada</surname> <given-names>K</given-names></string-name>, <string-name><surname>Sanchez-Flores</surname> <given-names>A.</given-names></string-name> <article-title>GARM: genome assembly, reconciliation and merging pipeline</article-title>. <source>Curr Top Med Chem</source>. <year>2014</year>;<volume>14</volume>(<issue>3</issue>):<fpage>418</fpage>&#x2013;<lpage>24</lpage>. doi: <pub-id pub-id-type="doi">10.2174/1568026613666131204110628</pub-id>.</mixed-citation></ref>
<ref id="c10"><label>10.</label><mixed-citation publication-type="journal"><string-name><surname>Argueso</surname> <given-names>JL</given-names></string-name>, <string-name><surname>Carazzolle</surname> <given-names>MF</given-names></string-name>, <string-name><surname>Mieczkowski</surname> <given-names>PA</given-names></string-name>, <string-name><surname>Duarte</surname> <given-names>FM</given-names></string-name>, <string-name><surname>Netto</surname> <given-names>OV</given-names></string-name>, <string-name><surname>Missawa</surname> <given-names>SK</given-names></string-name>, <etal>et al.</etal> <article-title>Genome structure of a Saccharomyces cerevisiae strain widely used in bioethanol production</article-title>. <source>Genome Res</source>. <year>2009</year> <month>Dec</month>;<volume>19</volume>(<issue>12</issue>):<fpage>2258</fpage>&#x2013;<lpage>70</lpage>. DOI:<pub-id pub-id-type="doi">10.1101/gr.091777.109</pub-id>.</mixed-citation></ref>
<ref id="c11"><label>11.</label><mixed-citation publication-type="journal"><string-name><surname>Lin</surname> <given-names>SH</given-names></string-name>, <string-name><surname>Liao</surname> <given-names>YC</given-names></string-name>. <article-title>CISA: contig integrator for sequence assembly of bacterial genomes</article-title>. <source>PLoS One</source>. <year>2013</year>;<volume>8</volume>(<issue>3</issue>):<fpage>e60843</fpage>. DOI:<pub-id pub-id-type="doi">10.1371/journal.pone.0060843</pub-id>.</mixed-citation></ref>
<ref id="c12"><label>12.</label><mixed-citation publication-type="journal"><string-name><surname>Yao</surname> <given-names>G</given-names></string-name>, <string-name><surname>Ye</surname> <given-names>L</given-names></string-name>, <string-name><surname>Gao</surname> <given-names>H</given-names></string-name>, <string-name><surname>Minx</surname> <given-names>P</given-names></string-name>, <string-name><surname>Warren</surname> <given-names>WC</given-names></string-name>, <string-name><surname>Weinstock</surname> <given-names>GM</given-names></string-name>. <article-title>Graph accordance of next- generation sequence assemblies</article-title>. <source>Bioinformatics</source>. <year>2012 Jan 1</year>;<volume>28</volume>(<issue>1</issue>):<fpage>13</fpage>&#x2013;<lpage>6</lpage>. DOI:<pub-id pub-id-type="doi">10.1093/bioinformatics/btr588</pub-id>.</mixed-citation></ref>
<ref id="c13"><label>13.</label><mixed-citation publication-type="journal"><string-name><surname>Vicedomini</surname> <given-names>R</given-names></string-name>, <string-name><surname>Vezzi</surname> <given-names>F</given-names></string-name>, <string-name><surname>Scalabrin</surname> <given-names>S</given-names></string-name>, <string-name><surname>Arvestad</surname> <given-names>L</given-names></string-name>, <string-name><surname>Policriti</surname> <given-names>A.</given-names></string-name> <article-title>GAM-NGS: genomic assemblies merger for next generation sequencing</article-title>. <source>BMC Bioinformatics</source>. <year>2013;14 Suppl</year> <volume>7</volume>:<fpage>S6</fpage>. DOI:<pub-id pub-id-type="doi">10.1186/1471-2105-14-S7-S6</pub-id>.</mixed-citation></ref>
<ref id="c14"><label>14.</label><mixed-citation publication-type="journal"><string-name><surname>Wences</surname> <given-names>AH</given-names></string-name>, <string-name><surname>Schatz</surname> <given-names>MC</given-names></string-name>. <article-title>Metassembler: merging and optimizing de novo genome assemblies</article-title>. <source>Genome Biol</source>. <year>2015 Sep 24</year>;<volume>16</volume>:<fpage>207</fpage>. DOI:<pub-id pub-id-type="doi">10.1186/s13059-015-0764-4</pub-id>.</mixed-citation></ref>
<ref id="c15"><label>15.</label><mixed-citation publication-type="journal"><string-name><surname>Khelik</surname> <given-names>K</given-names></string-name>, <string-name><surname>Lagesen</surname> <given-names>K</given-names></string-name>, <string-name><surname>Sandve</surname> <given-names>GK</given-names></string-name>, <string-name><surname>Rognes</surname> <given-names>T</given-names></string-name>, <string-name><surname>Nederbragt</surname> <given-names>AJ</given-names></string-name>. <article-title>NucDiff: in-depth characterization and annotation of differences between two sets of DNA sequences</article-title>. <source>BMC Bioinformatics</source>. <year>2017</year>;<volume>18</volume>(<issue>1</issue>):<fpage>338</fpage>. DOI:<pub-id pub-id-type="doi">10.1186/s12859-017-1748-z</pub-id>.</mixed-citation></ref>
<ref id="c16"><label>16.</label><mixed-citation publication-type="journal"><string-name><surname>Walker</surname> <given-names>BJ</given-names></string-name>, <string-name><surname>Abeel</surname> <given-names>T</given-names></string-name>, <string-name><surname>Shea</surname> <given-names>T</given-names></string-name>, <string-name><surname>Priest</surname> <given-names>M</given-names></string-name>, <string-name><surname>Abouelliel</surname> <given-names>A</given-names></string-name>, <string-name><surname>Sakthikumar</surname> <given-names>S</given-names></string-name>, <etal>et al.</etal> <article-title>Pilon: an integrated tool for comprehensive microbial variant detection and genome assembly improvement</article-title>. <source>PLoS One</source>. <year>2014</year>;<volume>9</volume>(<issue>11</issue>):<fpage>e112963</fpage>. DOI:<pub-id pub-id-type="doi">10.1371/journal.pone.0112963</pub-id>.</mixed-citation></ref>
<ref id="c17"><label>17.</label><mixed-citation publication-type="other"><string-name><surname>Khelik</surname> <given-names>K</given-names></string-name>, <string-name><surname>Sandve</surname> <given-names>GK</given-names></string-name>, <string-name><surname>Nederbragt</surname> <given-names>AJ</given-names></string-name>, <string-name><surname>Rognes</surname> <given-names>T.</given-names></string-name> <article-title>NucBreak: Location of structural errors in a genome assembly by using paired-end Illumina reads</article-title>. <source>bioRxiv 393488</source>; DOI: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1101/393488">https://doi.org/10.1101/393488</ext-link></mixed-citation></ref>
<ref id="c18"><label>18.</label><mixed-citation publication-type="journal"><string-name><surname>Zerbino</surname> <given-names>DR</given-names></string-name>, <string-name><surname>Birney</surname> <given-names>E.</given-names></string-name> <article-title>Velvet: algorithms for de novo short read assembly using de Bruijn graphs</article-title>. <source>Genome Res</source>. <year>2008</year>;<volume>18</volume>(<issue>5</issue>):<fpage>821</fpage>&#x2013;<lpage>9</lpage>. DOI:<pub-id pub-id-type="doi">10.1101/gr.074492.107</pub-id>.</mixed-citation></ref>
<ref id="c19"><label>19.</label><mixed-citation publication-type="journal"><string-name><surname>Chapman</surname> <given-names>JA</given-names></string-name>, <string-name><surname>Ho</surname> <given-names>I</given-names></string-name>, <string-name><surname>Sunkara</surname> <given-names>S</given-names></string-name>, <string-name><surname>Luo</surname> <given-names>S</given-names></string-name>, <string-name><surname>Schroth</surname> <given-names>GP</given-names></string-name>, <string-name><surname>Rokhsar</surname> <given-names>DS</given-names></string-name>. <article-title>Meraculous: de novo genome assembly with short paired-end reads</article-title>. <source>PLoS One</source>. <year>2011</year>;<volume>6</volume>(<issue>8</issue>):<fpage>e23501</fpage>. DOI:<pub-id pub-id-type="doi">10.1371/journal.pone.0023501</pub-id>.</mixed-citation></ref>
<ref id="c20"><label>20.</label><mixed-citation publication-type="journal"><string-name><surname>Gnerre</surname> <given-names>S</given-names></string-name>, <string-name><surname>Maccallum</surname> <given-names>I</given-names></string-name>, <string-name><surname>Przybylski</surname> <given-names>D</given-names></string-name> <etal>et al.</etal> <article-title>High-quality draft assemblies of mammalian genomes from massively parallel sequence data</article-title>. <source>Proc Natl Acad Sci U S A</source>. <year>2011 Jan 25</year>;<volume>108</volume>(<issue>4</issue>):<fpage>1513</fpage>&#x2013;<lpage>8</lpage>. DOI:<pub-id pub-id-type="doi">10.1073/pnas.1017351108</pub-id>.</mixed-citation></ref>
<ref id="c21"><label>21.</label><mixed-citation publication-type="website"><collab>The Assemblathon 1 dataset website</collab>. <ext-link ext-link-type="uri" xlink:href="http://korflab.ucdavis.edu/Datasets/Assemblathon/Assemblathon1">http://korflab.ucdavis.edu/Datasets/Assemblathon/Assemblathon1</ext-link>. <date-in-citation content-type="accessed">Accessed 27 November 2018</date-in-citation>.</mixed-citation></ref>
<ref id="c22"><label>22.</label><mixed-citation publication-type="journal"><string-name><surname>Simpson</surname> <given-names>JT</given-names></string-name>, <string-name><surname>Wong</surname> <given-names>K</given-names></string-name>, <string-name><surname>Jackman</surname> <given-names>SD</given-names></string-name>, <string-name><surname>Schein</surname> <given-names>JE</given-names></string-name>, <string-name><surname>Jones</surname> <given-names>SJ</given-names></string-name>, <string-name><surname>Birol</surname> <given-names>I.</given-names></string-name> <article-title>ABySS: a parallel assembler for short read sequence data</article-title>. <source>Genome Res</source>. <year>2009</year>;<volume>19</volume>(<issue>6</issue>):<fpage>1117</fpage>&#x2013;<lpage>23</lpage>. DOI:<pub-id pub-id-type="doi">10.1101/gr.089532.108</pub-id>.</mixed-citation></ref>
<ref id="c23"><label>23.</label><mixed-citation publication-type="journal"><string-name><surname>Bankevich</surname> <given-names>A</given-names></string-name>, <string-name><surname>Nurk</surname> <given-names>S</given-names></string-name>, <string-name><surname>Antipov</surname> <given-names>D</given-names></string-name>, <string-name><surname>Gurevich</surname> <given-names>AA</given-names></string-name>, <string-name><surname>Dvorkin</surname> <given-names>M</given-names></string-name>, <string-name><surname>Kulikov</surname> <given-names>AS</given-names></string-name>, <string-name><surname>Lesin</surname> <given-names>VM</given-names></string-name>, <string-name><surname>Nikolenko</surname> <given-names>SI</given-names></string-name>, <string-name><surname>Pham</surname> <given-names>S</given-names></string-name>, <string-name><surname>Prjibelski</surname> <given-names>AD</given-names></string-name>, <string-name><surname>Pyshkin</surname> <given-names>AV</given-names></string-name>, <string-name><surname>Sirotkin</surname> <given-names>AV</given-names></string-name>, <string-name><surname>Vyahhi</surname> <given-names>N</given-names></string-name>, <string-name><surname>Tesler</surname> <given-names>G</given-names></string-name>, <string-name><surname>Alekseyev</surname> <given-names>MA</given-names></string-name>, <string-name><surname>Pevzner</surname> <given-names>PA</given-names></string-name>. <article-title>SPAdes: a new genome assembly algorithm and its applications to single-cell sequencing</article-title>. <source>J Comput Biol</source>. <year>2012</year>;<volume>19</volume>(<issue>5</issue>):<fpage>455</fpage>&#x2013;<lpage>77</lpage>. DOI:<pub-id pub-id-type="doi">10.1089/cmb.2012.0021</pub-id>.</mixed-citation></ref>
<ref id="c24"><label>24.</label><mixed-citation publication-type="website"><collab>The NCBI database</collab>. <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/">https://www.ncbi.nlm.nih.gov/</ext-link>. <date-in-citation content-type="accessed">Accessed 27 November 2018</date-in-citation>.</mixed-citation></ref>
<ref id="c25"><label>25.</label><mixed-citation publication-type="website"><collab>The EBI database</collab>. <ext-link ext-link-type="uri" xlink:href="https://www.ebi.ac.uk/">https://www.ebi.ac.uk/</ext-link>. <date-in-citation content-type="accessed">Accessed 27 November 2018</date-in-citation>.</mixed-citation></ref>
<ref id="c26"><label>26.</label><mixed-citation publication-type="journal"><string-name><surname>Miller</surname> <given-names>JR</given-names></string-name>, <string-name><surname>Delcher</surname> <given-names>AL</given-names></string-name>, <string-name><surname>Koren</surname> <given-names>S</given-names></string-name>, <string-name><surname>Venter</surname> <given-names>E</given-names></string-name>, <string-name><surname>Walenz</surname> <given-names>BP</given-names></string-name>, <string-name><surname>Brownley</surname> <given-names>A</given-names></string-name>, <string-name><surname>Johnson</surname> <given-names>J</given-names></string-name>, <string-name><surname>Li</surname> <given-names>K</given-names></string-name>, <string-name><surname>Mobarry</surname> <given-names>C</given-names></string-name>, <string-name><surname>Sutton</surname> <given-names>G.</given-names></string-name> <article-title>Aggressive assembly of pyrosequencing reads with mates</article-title>. <source>Bioinformatics</source>. <year>2008</year>;<volume>24</volume>(<issue>24</issue>):<fpage>2818</fpage>&#x2013;<lpage>24</lpage>. DOI:<pub-id pub-id-type="doi">10.1093/bioinformatics/btn548</pub-id>.</mixed-citation></ref>
<ref id="c27"><label>27.</label><mixed-citation publication-type="journal"><string-name><surname>Zimin</surname> <given-names>AV</given-names></string-name>, <string-name><surname>Mar&#x00E7;ais</surname> <given-names>G</given-names></string-name>, <string-name><surname>Puiu</surname> <given-names>D</given-names></string-name>, <string-name><surname>Roberts</surname> <given-names>M</given-names></string-name>, <string-name><surname>Salzberg</surname> <given-names>SL</given-names></string-name>, <string-name><surname>Yorke</surname> <given-names>JA</given-names></string-name>. <article-title>The MaSuRCA genome assembler</article-title>. <source>Bioinformatics</source>. <year>2013</year>;<volume>29</volume>(<issue>21</issue>):<fpage>2669</fpage>&#x2013;<lpage>77</lpage>. DOI:<pub-id pub-id-type="doi">10.1093/bioinformatics/btt476</pub-id>.</mixed-citation></ref>
<ref id="c28"><label>28.</label><mixed-citation publication-type="journal"><string-name><surname>Simpson</surname> <given-names>JT</given-names></string-name>, <string-name><surname>Durbin</surname> <given-names>R.</given-names></string-name> <article-title>Efficient de novo assembly of large genomes using compressed data structures</article-title>. <source>Genome Res</source>. <year>2012</year>;<volume>22</volume>(<issue>3</issue>):<fpage>549</fpage>&#x2013;<lpage>56</lpage>. DOI:<pub-id pub-id-type="doi">10.1101/gr.126953.111</pub-id>.</mixed-citation></ref>
<ref id="c29"><label>29.</label><mixed-citation publication-type="journal"><string-name><surname>Luo</surname> <given-names>R</given-names></string-name>, <string-name><surname>Liu</surname> <given-names>B</given-names></string-name>, <string-name><surname>Xie</surname> <given-names>Y</given-names></string-name>, <etal>et al.</etal> <article-title>SOAPdenovo2: an empirically improved memory-efficient short-read de novo assembler</article-title>. <source>Gigascience</source>. <year>2012 Dec 27</year>;<volume>1</volume>(<issue>1</issue>):<fpage>18</fpage>. DOI:<pub-id pub-id-type="doi">10.1186/2047-217X-1-181</pub-id></mixed-citation></ref>
<ref id="c30"><label>30.</label><mixed-citation publication-type="website"><collab>The GAGE-B website</collab>. <ext-link ext-link-type="uri" xlink:href="http://ccb.jhu.edu/gage_b/">http://ccb.jhu.edu/gage_b/</ext-link>. <date-in-citation content-type="accessed">Accessed 27 November 2018</date-in-citation>.</mixed-citation></ref>
<ref id="c31"><label>31.</label><mixed-citation publication-type="journal"><string-name><surname>Alhakami</surname> <given-names>H</given-names></string-name>, <string-name><surname>Mirebrahim</surname> <given-names>H</given-names></string-name>, and <string-name><surname>Lonardi</surname> <given-names>S.</given-names></string-name> <article-title>A comparative evaluation of genome assembly reconciliation tools</article-title>. <source>Genome Biol</source>. <year>2017</year>; <volume>18</volume>: <fpage>93</fpage>. DOI:<pub-id pub-id-type="doi">10.1186/s13059-017-1213-3</pub-id>.</mixed-citation></ref>
<ref id="c32"><label>32.</label><mixed-citation publication-type="journal"><string-name><surname>Kurtz</surname> <given-names>S</given-names></string-name>, <string-name><surname>Phillippy</surname> <given-names>A</given-names></string-name>, <string-name><surname>Delcher</surname> <given-names>AL</given-names></string-name>, <string-name><surname>Smoot</surname> <given-names>M</given-names></string-name>, <string-name><surname>Shumway</surname> <given-names>M</given-names></string-name>, <string-name><surname>Antonescu</surname> <given-names>C</given-names></string-name>, and <string-name><surname>Salzberg</surname> <given-names>SL</given-names></string-name>. <article-title>Versatile and open software for comparing large genomes</article-title>. <source>Genome Biology</source> (<year>2004</year>), <volume>5</volume>:<fpage>R12</fpage>. DOI:<pub-id pub-id-type="doi">10.1186/gb-2004-5-2-r12</pub-id></mixed-citation></ref>
<ref id="c33"><label>33.</label><mixed-citation publication-type="website"><string-name><surname>Stein</surname> <given-names>L.</given-names></string-name> <article-title>GFF3 format specification</article-title>. <year>2013</year>. <ext-link ext-link-type="uri" xlink:href="https://github.com/The-Sequence-">https://github.com/The-Sequence-Ontology/Specifications/blob/master/gff3.md</ext-link>. <date-in-citation content-type="accessed">Accessed 27 November 2018</date-in-citation>.</mixed-citation></ref>
<ref id="c34"><label>34.</label><mixed-citation publication-type="journal"><string-name><surname>Robinson</surname> <given-names>JT</given-names></string-name>, <string-name><surname>Thorvaldsd&#x00F3;ttir</surname> <given-names>H</given-names></string-name>, <string-name><surname>Winckler</surname> <given-names>W</given-names></string-name>, <string-name><surname>Guttman</surname> <given-names>M</given-names></string-name>, <string-name><surname>Lander</surname> <given-names>ES</given-names></string-name>, <string-name><surname>Getz</surname> <given-names>G</given-names></string-name>, <string-name><surname>Mesirov</surname> <given-names>JP</given-names></string-name>. <article-title>Integrative genomics viewer</article-title>. <source>Nat Biotechnol</source>. <year>2011</year>;<volume>29</volume>(<issue>1</issue>):<fpage>24</fpage>&#x2013;<lpage>6</lpage>. DOI:<pub-id pub-id-type="doi">10.1038/nbt.1754</pub-id>.</mixed-citation></ref>
<ref id="c35"><label>35.</label><mixed-citation publication-type="journal"><string-name><surname>Thorvaldsd&#x00F3;ttir</surname> <given-names>H</given-names></string-name>, <string-name><surname>Robinson</surname> <given-names>JT</given-names></string-name>, <string-name><surname>Mesirov</surname> <given-names>JP</given-names></string-name>. <article-title>Integrative genomics viewer (IGV): high- performance genomics data visualization and exploration</article-title>. <source>Brief Bioinform</source>. <year>2013</year>;<volume>14</volume>(<issue>2</issue>):<fpage>178</fpage>&#x2013;<lpage>92</lpage>. DOI:<pub-id pub-id-type="doi">10.1093/bib/bbs017</pub-id>.</mixed-citation></ref>
</ref-list>
<sec id="s10a">
<title>Additional files</title>
<p><bold>Additional file 1</bold> Supplementary materials (PDF 46KB)</p>
<p>Table S1 List of bacterial genomes</p>
</sec>
</back>
</article>
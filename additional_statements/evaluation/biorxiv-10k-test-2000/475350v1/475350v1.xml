<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.2d1 20170631//EN" "JATS-archivearticle1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" article-type="article" dtd-version="1.2d1" specific-use="production" xml:lang="en">
<front>
<journal-meta>
<journal-id journal-id-type="publisher-id">BIORXIV</journal-id>
<journal-title-group>
<journal-title>bioRxiv</journal-title>
<abbrev-journal-title abbrev-type="publisher">bioRxiv</abbrev-journal-title>
</journal-title-group>
<publisher>
<publisher-name>Cold Spring Harbor Laboratory</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="doi">10.1101/475350</article-id>
<article-version>1.1</article-version>
<article-categories>
<subj-group subj-group-type="author-type">
<subject>Regular Article</subject>
</subj-group>
<subj-group subj-group-type="heading">
<subject>New Results</subject>
</subj-group>
<subj-group subj-group-type="hwp-journal-coll">
<subject>Neuroscience</subject>
</subj-group>
</article-categories>
<title-group>
<article-title>A Teensy microcontroller-based interface for optical imaging camera control during behavioral experiments</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name><surname>Romano</surname><given-names>Michael</given-names></name>
<xref ref-type="aff" rid="a1">a</xref>
</contrib>
<contrib contrib-type="author">
<name><surname>Bucklin</surname><given-names>Mark</given-names></name>
<xref ref-type="aff" rid="a1">a</xref>
</contrib>
<contrib contrib-type="author">
<name><surname>Mehrotra</surname><given-names>Dev</given-names></name>
<xref ref-type="aff" rid="a1">a</xref>
</contrib>
<contrib contrib-type="author">
<name><surname>Kessel</surname><given-names>Robb</given-names></name>
<xref ref-type="aff" rid="a1">a</xref>
</contrib>
<contrib contrib-type="author">
<name><surname>Gritton</surname><given-names>Howard</given-names></name>
<xref ref-type="aff" rid="a1">a</xref>
</contrib>
<contrib contrib-type="author" corresp="yes">
<name><surname>Han</surname><given-names>Xue</given-names></name>
<xref ref-type="aff" rid="a1">a</xref>
</contrib>
<aff id="a1"><label>a</label><institution>Boston University, Department of Biomedical Engineering</institution>, Boston, MA 02215</aff>
</contrib-group>
<author-notes>
<corresp id="cor1"><bold>Corresponding author</bold>. Please send to Xue Han (<email>xuehan@bu.edu</email>).</corresp>
<fn id="n1" fn-type="present-address"><p><bold>Present/permanent address:</bold> 44 Cummington Street, Boston, MA 02215 Phone: 617-358-6189</p></fn>
</author-notes>
<pub-date pub-type="epub">
<year>2018</year>
</pub-date>
<elocation-id>475350</elocation-id>
<history>
<date date-type="received">
<day>29</day>
<month>11</month>
<year>2018</year>
</date>
<date date-type="rev-recd">
<day>29</day>
<month>11</month>
<year>2018</year>
</date>
<date date-type="accepted">
<day>29</day>
<month>11</month>
<year>2018</year>
</date>
</history>
<permissions>
<copyright-statement>&#x00A9; 2018, Posted by Cold Spring Harbor Laboratory</copyright-statement>
<copyright-year>2018</copyright-year>
<license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by/4.0/"><license-p>This pre-print is available under a Creative Commons License (Attribution 4.0 International), CC BY 4.0, as described at <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link></license-p></license>
</permissions>
<self-uri xlink:href="475350.pdf" content-type="pdf" xlink:role="full-text"/>
<abstract>
<title>Abstract</title>
<sec>
<title>Background</title>
<p>Systems neuroscience experiments often require the integration of precisely timed data acquisition and behavioral monitoring. While specialized commercial systems have been designed to meet various needs of data acquisition and device control, they often fail to offer flexibility to interface with new instruments and variable behavioral experimental designs.</p></sec>
<sec>
<title>New method</title>
<p>We developed a Teensy 3.2 microcontroller-based interface that offers high-speed, precisely timed behavioral data acquisition and digital and analog outputs for controlling sCMOS cameras and other devices.</p></sec>
<sec>
<title>Results</title>
<p>We demonstrate the flexibility and the temporal precision of the Teensy interface in two experimental settings. We first used the Teensy interface for reliable recordings of an animal&#x2019;s directional movement on a spherical treadmill, while delivering repeated digital pulses that can be used to control image acquisition from a sCMOS camera. In another example, we used the Teensy interface to control temporally precise delivery of an auditory stimulus and a gentle eye puff in a trace conditioning eye blink behavioral paradigm, while delivering repeated digital pulses to initiate camera image acquisition.</p></sec>
<sec>
<title>Comparison with existing methods</title>
<p>This interface allows high-speed and temporally precise digital data acquisition and device control during diverse behavioral experiments.</p></sec>
<sec>
<title>Conclusion</title>
<p>The Teensy interface, consisting of a Teensy 3.2 and custom software functions, provides a temporally precise, low-cost, and flexible platform to integrate sCMOS camera control into behavioral experiments.</p></sec>
</abstract>
<kwd-group kwd-group-type="author">
<title>Keywords</title>
<kwd>Teensy</kwd>
<kwd>Arduino</kwd>
<kwd>microcontroller</kwd>
<kwd>sCMOS camera</kwd>
<kwd>open-source</kwd>
<kwd>spherical treadmill</kwd>
<kwd>ADNS-9800 gaming sensor</kwd>
</kwd-group>
<counts>
<page-count count="15"/>
</counts>
</article-meta>
</front>
<body>
<sec id="s1">
<label>1.</label><title>Introduction</title>
<p>Recent advances in sCMOS camera technology and genetically encoded neural activity indicators enable large scale fluorescence imaging of thousands of individual cells&#x2019; activity during behavior (<xref ref-type="bibr" rid="c4">Hansen, et al. 2018</xref>, <xref ref-type="bibr" rid="c7">Mohammed, et al. 2016</xref>, <xref ref-type="bibr" rid="c8">Nguyen, et al. 2016</xref>). One key technical aspect of neural network analysis during behavior is temporal precision, where neural activities need to be precisely aligned with behavioral features. However, it has been difficult to easily integrate sCMOS cameras, deployed in large scale calcium imaging studies, with devices needed to monitor and control behavioral experiments. Traditional Analog/Digital interfaces are often operated by programs, such as MATLAB, that offer a wide range of applications. However, using MATLAB or other PC-based programs can lead to undesired temporal delays, as the PC operating system needs to balance the demands of many system operations at once.</p>
<p>Over the last decade, microcontrollers traditionally marketed to hobbyists have gained popularity across a variety of scientific fields (<xref ref-type="bibr" rid="c1">Chen and Li 2017</xref>, <xref ref-type="bibr" rid="c2">D&#x2019;Ausilio 2012</xref>, <xref ref-type="bibr" rid="c5">Husain, Hadad and Zainal Alam 2016</xref>, <xref ref-type="bibr" rid="c9">Sanders and Kepecs 2014</xref>). For example, Arduino microcontrollers have recently been integrated into two-photon imaging experiments (<xref ref-type="bibr" rid="c6">Micallef, et al. 2017</xref>, <xref ref-type="bibr" rid="c11">Takahashi, et al. 2016</xref>, <xref ref-type="bibr" rid="c12">Wilms and H&#x00E4;usser 2015</xref>). Microcontrollers are small, low-cost, and capable of delivering digital outputs with microsecond time precision. Arduino, which utilizes user-friendly, open-source software functions, was the first major microcontroller to gain substantial popularity. Recently, Teensy 3.2 microcontrollers were developed, which have all the key features of the current version of the standard Arduino microcontroller (Arduino Uno Rev3), as well as the additional feature of delivering analog output. Teensy microcontrollers utilize the same open-source Arduino software environment, and remain easy to program (<xref ref-type="bibr" rid="c2">D&#x2019;Ausilio 2012</xref>). Because of the simplicity of microcontrollers and their temporal precisions, microcontrollers represent an attractive solution to precisely record data and monitor experimental progress.</p>
<p>Here, we demonstrate and characterize a flexible Teensy 3.2-based interface for temporally precise data acquisition and delivery of analog and digital signals, during a voluntary movement tracking experiment and trace conditioning eye blink learning experiment. The Teensy interface can deliver digital pulses with microsecond precision to initiate individual image frame capture using the camera&#x2019;s external trigger settings at a desired frequency, while simultaneously collecting animal behavioral data. We also demonstrate the ability of the Teensy interface to generate analog sound waveforms to drive a speaker for a trace conditioning eye blink experiment. Together, these results demonstrate that the Teensy interface, consisting of a Teensy microcontroller and a set of custom software functions, offers a flexible, accurate, and user-friendly environment for imaging experiments during behavior.</p>
</sec>
<sec id="s2">
<label>2.</label><title>Methods</title>
<sec id="s2a">
<label>2.1</label>
<title>Construction of Teensy 3.2 boards</title>
<p>The two experimental designs are shown in <xref rid="fig1" ref-type="fig">Figure 1</xref>. The specialty components required to build these designs are shown in <xref rid="tbl1" ref-type="table">Tables 1</xref> and <xref rid="tbl2" ref-type="table">2</xref>. In both experiments, a Teensy 3.2 (PJRC.COM, LLC, part #: TEENSY32) (<xref rid="fig1" ref-type="fig">Figure 1A</xref>), or a Teensy 3.2 soldered to a prop shield (PJRC.COM, part #: PROP&#x005F;SHIELD) (<xref rid="fig1" ref-type="fig">Figure 1B</xref>), is mounted on top of a standard printed circuit board (PCB) (for example: Digi-Key, part #: V2010-ND) via standard female headers (such as SparkFun Electronics, PRT-00115). Female headers were then soldered to the PCB for stability. Output from the Teensy was directed from pins on the female headers to standard SMA connectors (such as: Digi-Key, part # CON-SMA-EDGE-S-ND) via 22 gauge wires (for example: Digi-Key, part #1528-1743-ND). Coaxial cables were then attached to the SMA connectors on the PCB to connect the Teensy to external devices. The Teensy was connected to a computer via a standard USB-microUSB cable (for example: Digi-Key, part # AE11229-ND). To easily upload code to the Teensy, we used PlatformIO (<ext-link ext-link-type="uri" xlink:href="https://platformio.org/">https://platformio.org/</ext-link>), an add-on to the widely-used Atom text editor (<ext-link ext-link-type="uri" xlink:href="https://atom.io/">https://atom.io/</ext-link>), instead of the default Arduino programming environment. Code for each of the two experimental settings were uploaded separately to the Teensy prior to each experiment. To turn digital pins on and off, and also to change their modes to either &#x201C;input&#x201D; or &#x201C;output&#x201D;, we used a slightly modified version of the DigitalIO library provided by PlatformIO (version 1.0.0; currently maintained at: <ext-link ext-link-type="uri" xlink:href="https://github.com/greiman/DigitalIO">https://github.com/greiman/DigitalIO</ext-link>), which decreases the amount of time, which decreases the amount of time/ spent performing each of these actions. To easily set experiment-specific parameters for the Teensy, such as sampling frequencies, trial numbers and trial length, and the length of an experiment, we developed two simple MATLAB graphical user interfaces, one for each experiment.</p>
<table-wrap id="tbl1" orientation="portrait" position="float">
<label>Table 1.</label>
<caption><p>Specialty components necessary to build a motor output system</p></caption>
<graphic xlink:href="475350_tbl1.tif"/>
</table-wrap>
<table-wrap id="tbl2" orientation="portrait" position="float">
<label>Table 2.</label>
<caption><p>Specialty components necessary to build a tone-puff system.</p></caption>
<graphic xlink:href="475350_tbl2.tif"/>
</table-wrap>
<fig id="fig1" position="float" orientation="portrait" fig-type="figure">
<label>Figure 1.</label>
<caption><p>Diagrams of the two experimental device arrangements using a Teensy interface. <bold>A</bold> Motion tracking experiment design. This design consists of a Teensy 3.2 connected to two ADNS-9800 sensors via serial-peripheral interfaces, and a sCMOS camera through a coaxial cable. Every 50 milliseconds, a digital pulse was sent to initiate an image frame capture from a sCMOS camera. Simultaneously, the Teensy interface acquired motion data from both ADNS sensors and sent them to a PC via a USB. <bold>B</bold> Trace eye blink conditioning experiment design. This design consists of consists of a Teensy 3.2 connected to a speaker through a prop-shield that contains an amplifier. Every 50 milliseconds, a digital pulse was sent to initiate an image frame capture from a sCMOS camera. Simultaneously, the Teensy interface generated digital pulses to generate air puff and updated the status of the analog output to generate audio signals, and sent the timing of these signals to a PC via a USB.</p></caption>
<graphic xlink:href="475350_fig1.tif"/>
</fig>
</sec>
<sec id="s2b">
<label>2.2</label><title>Motion tracking experiment</title>
<p>In this experiment, we performed motion tracking using two ADNS-9800 gaming sensors (<ext-link ext-link-type="uri" xlink:href="https://www.tindie.com/products/jkicklighter/adns-9800-laser-motion-sensor/">https://www.tindie.com/products/jkicklighter/adns-9800-laser-motion-sensor/</ext-link>, Tindie, part: <underline>&#x201C;NS-9800</underline> <underline>Laser Motion Sensor</underline>&#x201D;, see <xref rid="tbl1" ref-type="table">Table 1</xref>), while delivering digital pulses that can be used to trigger a sCMOS camera for image capture every 50 ms. The overall design of this experiment is shown in <xref rid="fig1" ref-type="fig">Figure 1A</xref>. A mouse was positioned on top of a buoyant Styrofoam ball floated by house air as described previously (<xref ref-type="bibr" rid="c3">Dombeck, et al. 2007</xref>). Two ADNS-9800 gaming sensors were positioned at the equator of the Styrofoam ball, at an angle of approximately 75 degrees from one another. For the counts per inch setting of the sensor, which determines the sensitivity of the sensors to external movement, we used a value of 3400 counts per inch.</p>
<p>The total distance travelled by the mouse at any time point was computed using the following equation:
<disp-formula id="ueqn1">
<alternatives><graphic xlink:href="475350_ueqn1.gif"/></alternatives>
</disp-formula>
</p>
<p>Where y<sub>R</sub> and y<sub>L</sub> are the y readings from the left and right sensors, and <bold><italic>&#x03B8;</italic></bold> is the angle between the two sensors (75 degrees). We also acquired readings in the &#x201C;x&#x201D; direction from both sensors, which can be used to calculate rotation. Velocity was computed as the distance divided by the time between two adjacent readings, as measured by the Teensy. These two sensors were connected to the Teensy via simple serial peripheral interface (SPI) connections with insulated 22 gauge wires as shown in <xref rid="fig2" ref-type="fig">Figure 2A</xref>.</p>
<fig id="fig2" position="float" orientation="portrait" fig-type="figure">
<label>Figure 2.</label>
<caption><p>Electrical wiring schematics for the motion tracking experiment and the trace conditioning eye blink experiment <bold>A.</bold> The schematic of the wiring of a Teensy 3.2 to two ADNS-9800 sensors via serial peripheral interface connections (SPIs). Solid dots at intersections between dotted lines indicate electrical connections. Unused pins on the Teensy were not included in this schematic. The Teensy&#x2019;s ground pin was connected to both AGround and DGround pins (analog and digital ground) on both ADNS-9800 sensors. The D11 pin (D = digital) was connected to both MOSI (&#x201C;Master-Out, Slave-In&#x201D;) pins, the D12 pin was connected to both MISO pins (&#x201C;Master-In, Slave-Out&#x201D;), the D13 pin was connected to both SCK pins (SPI Clock), and the 3.3V pin was connected to both Vin (voltage in) pins on the ADNS-9800 sensors. Finally, pins D20 and D21 were connected individually to each SS pin (Slave Select) on the ADNS-9800 sensors. The DAC pin (digital to analog converter or the analog output pin) is also shown. <bold>B</bold> The schematic of the wiring of a Teensy 3.2, a prop shield, and an external speaker. Dotted lines indicate connections. Connections between the Teensy and prop shield were made using 14&#x00D7;1 double insulated pins according to the manufacturer&#x2019;s instruction (<ext-link ext-link-type="uri" xlink:href="https://www.pjrc.com/store/prop&#x005F;shield.html">https://www.pjrc.com/store/prop&#x005F;shield.html</ext-link>), and the prop shield audio output was connected to the speaker using 22 gauge wire. We highlight that that the Teensy DAC pin is connected to the &#x201C;Audio In&#x201D; pin on the prop shield, both of which are labeled. Additional pins utilized by the prop shield for amplification were not labeled.</p></caption>
<graphic xlink:href="475350_fig2.tif"/>
</fig>
<p>To control experimental timing, we utilized the &#x201C;IntervalTimer&#x201D; function, unique to the standard Teensy library, which can repeatedly call a function at specified intervals. We set the &#x201C;IntervalTimer&#x201D; to be 50,000 microseconds (50 ms) or 20 Hz in our experiment. Using IntervalTimer, we repeatedly called a function that sent the accumulated displacement of the motion sensor readings to the attached PC. We acquired the x and y displacement readings from each sensor with freely available functions on GitHub (<ext-link ext-link-type="uri" xlink:href="https://github.com/markbucklin/NavigationSensor">https://github.com/markbucklin/NavigationSensor</ext-link>), which read accumulated displacement from the &#x201C;motion burst&#x201D; register of each sensor. After reading the motion sensor, a digital &#x201C;on&#x201D; pulse that lasted for 1 ms was sent out of a digital pin designed to initiate an image frame capture from a sCMOS camera. To characterize the temporal precision of different digital pulses generated by the custom script using the &#x201C;IntervalTimer&#x201D; function, we recorded the digital outputs with a commercial system (Tucker Davis Technologies RZ5D (TDT RZ5D)) at 3051.76 Hz.</p>
</sec>
<sec id="s2c">
<label>2.3</label><title>Trace eye blink conditioning experiment</title>
<p>In this experiment, a Teensy was programmed to deliver outputs capable of eliciting a sound and initiating an eye puff, while delivering digital pulses that can be used to trigger a sCMOS camera for image capture every 50 ms. The overall design of this experiment is shown in <xref rid="fig1" ref-type="fig">Figure 1B</xref>. To deliver an audible sound through the Teensy, we used a Teensy prop shield module (PJRC.COM, LLC., part #: PROP&#x005F;SHIELD) to amplify analog output (shown in <xref rid="fig2" ref-type="fig">Figure 2B</xref> as pin A14). This add-on component can drive speakers with resistances up to 8 ohms. The prop shield was soldered to the bottom of the Teensy with 14&#x00D7;1 double insulator pins (PJRC.COM, LLC., part #: HEADER&#x005F;14&#x00D7;1&#x005F;D), and the output was connected to a speaker, as shown in <xref rid="fig2" ref-type="fig">Figure 2B</xref>. The Teensy was then mounted onto the female headers separated by the prop shield, as shown in <xref rid="fig1" ref-type="fig">Figure 1B</xref>. The camera and air valve for the eye puff were attached to the microcontroller through coaxial cables (<xref rid="fig1" ref-type="fig">Figures 1B</xref> and 2B), and the speaker was connected with 22 gauge wire to the prop shield.</p>
<p>We used the Teensy Audio library function &#x201C;AudioSynthWaveformSine&#x201D; to generate tones. This function continuously outputs a sine wave with a sampling rate of 44.1 kHz from the analog pin. We first initialized the tone, in this case a 9500 Hz sine wave, at the beginning of each experiment, but set the amplitude to &#x201C;0&#x201D;, so that the tone was off. At the desired time, we switched the amplitude to 0.05 (out of a maximum of 1) to generate an audible tone. The value of 0.05 generated a tone of approximately 75 dB with our amplifier and speaker settings.</p>
<p>We used the &#x201C;elapsedMicros&#x201D; function to control the timing of the experiment. elapsedMicros offers precise timing like &#x201C;IntervalTimer&#x201D;, and additionally allows for simultaneous use of the Audio library. This experiment is trial-based, and each trial consisted of an 11.1 second long baseline period, a 700ms long tone, a 250ms long delay period, a 100ms long puff period, and a 7.85 second long post-puff period. Using an &#x201C;elapsedMicros&#x201D; timer, we repeatedly called a function that updated the status of each digital and analog output every 50 ms based on the trial structure of the task, and then turned on the digital output directed to the sCMOS camera for 1ms every 50ms.</p>
<p>To characterize the temporal precision of different digital pulses generated by the custom scripts, we recorded the digital outputs with a commercial system (Tucker Davis Technologies RZ5D (TDT RZ5D)) at 3051.76 Hz, and the analog sine wave output at 24414.0625 Hz without additional amplification. To determine the onset of the analog audio signal, the unamplified analog output from the Teensy was first high-pass filtered at 1 kHz using a 6<sup>th</sup>-order, zero-phase Butterworth digital filter (MATLAB command &#x201C;filtfilt&#x201D;). We then estimated the instantaneous amplitude of the 9500 Hz sine wave at each time point using the Hilbert transform of the filtered signal. The first time point where the amplitude rose above 0.005 was considered the onset of the analog signal, and the subsequent time point where it dropped below 0.005 was considered the offset. To compare the onset of the analog signal to the timing of digital pulses, we utilized the continuous voltage output from the digital pin for consistency. To acquire the digital pulse onset from the continuous signal, we thresholded this continuous voltage output at a value of 1 V, and took the first time point where the continuous voltage exceeded 1 V to be the digital pulse onset.</p>
</sec>
<sec id="s2d">
<label>2.4</label><title>Statistics</title>
<p>Statistics were performed in MATLAB. Linear models were constructed using the &#x201C;fitlm&#x201D; function in MATLAB 2017b, using a Lenovo ThinkPad T450 with 16 GB of RAM..</p>
</sec>
<sec id="s2e" sec-type="availability">
<label>2.5</label><title>Code availability</title>
<p>All code is located at GitHub (<ext-link ext-link-type="uri" xlink:href="https://github.com/mfromano/micro-control">https://github.com/mfromano/micro-control</ext-link>), which will be made public upon publication.</p>
</sec>
</sec>
<sec id="s3">
<label>3.</label><title>Results</title>
<p>Microcontrollers such as Arduino microcontrollers have gained popularity in neuroscience research due to their user-friendly interface, open-source software environment, and their flexibility of device integration (<xref ref-type="bibr" rid="c1">Chen and Li 2017</xref>, <xref ref-type="bibr" rid="c2">D&#x2019;Ausilio 2012</xref>, <xref ref-type="bibr" rid="c6">Micallef, et al. 2017</xref>). Recently, the Teensy 3.2 has been developed, which has an analog output, a major improvement over the popular Arduino Uno. Teensy devices also have a comprehensive Audio library, as well as the &#x201C;IntervalTimer&#x201D; and the &#x201C;elapsedMicros&#x201D; functions capable of generating precisely timed events repeatedly. Here, we present a Teensy-based interface to integrate frame-by-frame image capture with behavioral experimental control and data acquisition.</p>
<sec id="s3a">
<label>3.1</label><title>Motion tracking experiment</title>
<p>In this experiment (<xref rid="fig3" ref-type="fig">Figure 3A</xref>), we recorded a mouse running on a spherical treadmill for 10 minutes. Motion data was acquired at 20 Hz concomitantly with digital outputs that can be used to trigger individual image frame capture from a sCMOS camera. To measure locomotion from awake head fixed mice, we used the Teensy interface to record from two ADNS-9800 motion sensors (<xref rid="fig1" ref-type="fig">Figures 1A</xref> and <xref ref-type="fig" rid="fig2">2A</xref>). ADNS-9800 sensor boards are low cost, and can measure up to 8200 counts per inch, allowing for sensitive measurement of mouse movement relative to other tracking devices. For example, standard computer mice, such as the Logitech M100 (Logitech, PN: 910-001601), measure up to 1000 counts per inch, making the ADNS-9800 sensor over 8 times more precise. For these experiments we affixed ADNS- 9800 sensors to the spherical treadmill and wired them to the Teensy as demonstrated in <xref rid="fig2" ref-type="fig">Figure 2A</xref>.</p>
<fig id="fig3" position="float" orientation="portrait" fig-type="figure">
<label>Figure 3.</label>
<caption><p>Temporal precision of the digital outputs in the motion tracking experiment. <bold>A</bold> Example recording of a head-fixed mouse running on the spherical treadmill. <bold>B</bold> Timing of digital pulses generated by the Teensy interface vs theoretical times of the digital pulses at exactly 20 Hz. Red indicates linear model prediction, and black are experimental data downsampled by a factor of 200 for visualization. The linear model estimates a slope of 1.000028937 &#x00B1; 0.000000002 (t(11998)= 4.9e&#x002B;08, p &#x003C; 0.001, R<sup>2</sup>=1; intercept = 0.0007593 &#x00B1; 0.0000007, t(11998) = 1.1e&#x002B;03, p &#x003C; 0.001).</p></caption>
<graphic xlink:href="475350_fig3.tif"/>
</fig>
<p>We calculated the velocity of the mouse, which averaged 2.16 &#x00B1; 4.46 cm/s over the 10 minute period (mean &#x00B1; std, n=12000 time points) with a maximum velocity of 35.9 cm/s, in general agreement with velocities reported for head-fixed mice running on a spherical treadmill (<xref ref-type="bibr" rid="c3">Dombeck, et al. 2007</xref>)).</p>
<p>To characterize the temporal precision of the Teensy interface, we measured the timing of the Teensy digital output, and compared it to the theoretical 20 Hz signal using a linear model. We found that digital outputs have a near-perfect linear relationship with the theoretical signal (<xref rid="fig3" ref-type="fig">Figure 3B</xref>). However, we noted a 28.9 &#x00B5;s per second positive drift, resulting in an actual frequency of 19.999 Hz instead of 20.000 Hz. To further examine whether this small timing drift depends upon the frequency of data acquisition or the timing of the digital outputs, we performed 5 minute long recording sessions without a live mouse at 20, 50, and 100 Hz, and a 0.5ms long digital pulse designed to trigger image capture from the camera. We found that the actual frequencies were 19.999, 49.999, and 99.997 Hz, respectively. These all correspond to an approximately 30 &#x00B5;s delay per second, suggesting that the timing drift is independent of the data acquisition rate and may reflect the processor timing of the Teensy microcontroller. However, because motion sensor data are monitored with respect to the Teensy&#x2019;s timing, the animal&#x2019;s locomotion data readings remain precisely aligned to the time when image frame capture occurs.</p>
<p>Having assessed the timing of the digital output, we next quantified its temporal variation. We calculated the root mean squared error (RMSE) of the difference between the recorded timing of each digital pulse and the times predicted from the linear model. The RMSE was 42.7 &#x00B5;s, computed manually. Together, these results demonstrate that the Teensy interface timed by the &#x201C;IntervalTimer&#x201D; function can be used to generate digital pulses for pre cise image frame capture during behavioral experiments, while maintaining alignment of imaging data with behavioral parameters.</p>
</sec>
<sec id="s3b">
<label>3.2</label><title>Trace eye blink conditioning behavioral experiment</title>
<p>In a second experiment, we reconfigured the Teensy interface for a trace conditioning eye blink learning experiment (<xref rid="fig1" ref-type="fig">Figure 1B</xref> and <xref ref-type="fig" rid="fig2">2B</xref>), where a mouse can be trained to associate a conditioned stimulus (700ms long tone) with a subsequent unconditioned stimulus (a 100ms long gentle eye puff), separated by a brief memory trace time window (250ms). This experiment consisted of 50 trials, each lasting 20 seconds. We first characterize the temporal precision of the Teensy interface in a manner similar to that described in the motion tracking experiment. We recorded the timings of the digital pulses generated to trigger each image frame capture (<xref rid="fig4" ref-type="fig">Figure 4A</xref>), and detected a 33.4 microsecond delay per second. Thus, in this experiment, the Teensy interface has an actual frequency of 19.999 Hz instead of 20.000 Hz, identical to that observed in the motion tracking experiment. The RMSE of the Teensy interface is 13.3 &#x00B5;s computed manually, also similar to that observed in the motion tracking experiment.</p>
<fig id="fig4" position="float" orientation="portrait" fig-type="figure">
<label>Figure 4.</label>
<caption><p>Temporal precision of the digital and analog outputs in the trace conditioning eye blink experiment. <bold>A</bold> Timing of the digital pulses generated by the Teensy interface vs theoretical times of the digital pulses at exactly 20 Hz. Linear model fit is shown in red, and in black are experimental data down-sampled by a factor of 200 for visualization. (R<sup>2</sup>=1, slope: 1.0000334 &#x00B1; 0 (to machine precision), t(19998)=infinite, p&#x003C;0.001). <bold>B.</bold> Timing of the analog output directed to the prop shield to generate an amplified auditory stimulus (i-ii) and the digital output directed to device to generate eye puff (iii-iv), both measured over 50 trials. (i) the difference between the onset of the analog output and the onset of the corresponding camera-directed digital pulse (mean=7.6 &#x00B1; 0.9 ms, range=2.9 ms); (ii) the duration of the auditory stimulus across all trials (mean=700 &#x00B1; 1 ms, range=2.9 ms, n=50 trials); (iii) the difference between the puff digital pulse and the camera-directed digital pulse, (mean= &#x2212;0.004 &#x00B1; 0.012 ms, range=0.04 ms); (iv) the duration of the puff digital pulse (100.03&#x00B1; 0.02 ms, mean &#x00B1; std, n=50 trials).</p></caption>
<graphic xlink:href="475350_fig4.tif"/>
</fig>
<p>We then characterized the precision of multiple digital outputs, by calculating the time difference between the digital pulses generated to drive eye puff versus the sCMOS camera (<xref rid="fig4" ref-type="fig">Figure 4Bii</xref>). We found that there was nearly no temporal difference between the onset of these two digital outputs (&#x2212;0.004 &#x00B1;0.012 ms,mean &#x00B1; std, n=50 digital pulses). Similarly, the duration of the puff digital pulse was within 0.03 ms of the commanded duration of 100ms (100.03&#x00B1; 0.02 ms (mean &#x00B1; std, n=50 digital pulses).</p>
<p>We next characterized the temporal precision of the analog output generated by the Teensy. We measured the analog output of the Teensy with the commercial TDT RZ5D recording device sampled at 24414.0625 Hz. Since analog outputs were generated together with the onset of the digital outputs designed to trigger camera image frame capture, we calculated the time difference between the onset of the analog output and the onset of the digital pulse (<xref rid="fig4" ref-type="fig">Figure 4Bi</xref>, for details see Methods). We found that the analog output lagged the digital output by 7.6 &#x00B1; 0.9 milliseconds (mean &#x00B1; std, n=50 pulses, <xref rid="fig4" ref-type="fig">Figure 4Bi</xref>). This delay is comparable to that reported using a different configuration of the Teensy to play a sound (<xref ref-type="bibr" rid="c10"><xref ref-type="bibr" rid="c10">Solari, et al. 2018</xref></xref>). The duration of the tone remained equal to 700 &#x00B1; 1 ms, (mean &#x002B;/- std, n=50 digital/analog pulses <xref rid="fig4" ref-type="fig">Figure 4Bii</xref>), equivalent to the commanded duration of 700ms. Together, these results demonstrate that the Teensy interface, timed by the &#x201C;elapsedMicros&#x201D; function, is capable of generating digital and analog output with microsecond temporal precision.</p>
<p>To further examine whether this delay was related to our implementation of the Audio library or from writing to the analog pin itself, we directly generated an analog pulse without the Audio library from the analog pin using the Arduino command &#x201C;analogWrite(A14, 4050)&#x201D;. &#x201C;A14&#x201D; corresponds to the analog pin, and 4050 is a relative voltage level large enough to be recorded as a pulse by the TDT RZ5D system. We initiated 50 trials consisting of 50 millisecond long pulses through a digital pin and through the analog pin. Pulses to these two pins were programmed to occur near-simultaneously. We found that the analog output lagged the digital output by 0.8 &#x002B; 5.8 &#x00B5;s (mean &#x00B1; std, n=50 trials), suggesting that writing to the analog pin cannot account for the auditory signal delay generated through the Audio library. Thus the delay is due to the specific implementation of the audio library, and future changes to the Audio library could improve the temporal precision.</p>
</sec>
</sec>
<sec id="s4">
<label>4.</label><title>Conclusion and Discussion</title>
<p>In both experiments, the Teensy interface generated precisely timed digital pulses that can be used to control individual frame capture from a sCMOS camera at 20Hz. We detected a small drift of approximately 30 &#x00B5;s per second, suggesting an actual frequency of 19.999 Hz instead of the commanded 20Hz. This small 0.003&#x0025; drift of the Teensy processing clock is linear, and can thus be calibrated if desired. This finding underscores the importance of having a highly precise central timer in each experiment. Synchronizing different devices only at the start of an experiment can lead to undesired temporal drifts, particularly in long experiments. While MATLAB or other PC-based programs can be programmed to control experimental timing, they may introduce timing jitter due to the demands of many PC system operations. Such timing jitter may have a significant impact depending on the study, especially when milliseconds time scale resolution is desired in systems neuroscience experiments.</p>
<p>Temporal accuracy is often important for animal behavioral training. For example, a precisely timed conditioned stimulus (tone) and unconditioned stimulus (puff) are important for animals to build association in trace conditioning eye blink experiments. We demonstrate that the Teensy interface can accurately generate multiple digital pulses to drive different devices, including the tone, the puff and the sCMOS camera. Additionally, we demonstrate that the Teensy interface precisely delivered longer duration digital and analog pulses, such as the tone that lasted for 700ms in the trace conditioning eye blink experiment. These results demonstrate that Teensy interface is a viable, inexpensive alternative that is also able to simultaneously capture imaging data using our simple software functions.</p>
<p>A major advantage of the Teensy over Arduino Uno microcontrollers is its ability to generate a true, 12 bit analog signal. While Arduino Uno microcontrollers can generate an analog-like signal via pulse-width modulation, this output is a square wave. We used the Teensy interface to deliver an auditory stimulus through the built-in Audio library, and our analog output showed a 7.6ms delay. This small delay is due in large part to the implementation of the Audio library. It is possible that other ways of utilizing the analog output would allow the generation of more temporally precise audio signals. However, altering the amplitude of a single sine wave via the Audio library is easy to implement, utilizing only a few lines of code within a single script.</p>
<sec id="s4a">
<label>4.1</label><title>Conclusion</title>
<p>We demonstrate a Teensy 3.2 interface capable of integrating a sCMOS camera into two behavioral experimental settings. In one setting, the Teensy interface simultaneously generates digital pulses that can be directed for individual frame capture from a sCMOS camera, while simultaneously tracking an animal&#x2019;s locomotion using recently developed high precision ADNS-9800 gaming sensors. The easy integration of the sCMOS camera and the ADNS-9800 sensors illustrates the flexibility of the Teensy interface in designing experiments that require novel instrumentation. In the second experiment, we demonstrate that the Teensy interface, in conjunction with a prop shield, is capable of generating both analog and digital outputs with precise timing during an eye blink trace conditioning experiment. We characterized two timer functions, &#x201C;IntervalTimer&#x201D; and &#x201C;elapsedMicros&#x201D;, both of which offered equivalent microsecond temporal precision, and &#x201C;elapsedMicros&#x201D; additionally allows access to the Audio library. Thus the Teensy interface, a Teensy 3.2 and custom software functions, provides a user-friendly, easily adaptable, and temporally precise platform for integrating sCMOS cameras into behavioral experimental designs. This Teensy interface can be immediately adopted for the motion tracking and the trace conditioning eye blink behavioral experiments demonstrated here, or can be customized for other types of behavioral experiments where sCMOS camera-based imaging is desired.</p>
</sec>
</sec>
</body>
<back>
<ack>
<title>Acknowledgements</title>
<p>M.F.R. performed data analysis. M.F.R. and H.J.G. conducted the motion tracking experiment. M.F.R. conducted the trace conditioning eye blink experiment. M.F.R., M.B., and D.R.M. wrote the software. M.F.R., M.B., D.R.M., and R.K. contributed to the Teensy interface conceptualization. M.F.R., H.J.G., and X.H. wrote the manuscript. X.H. supervised the study. The authors would also like to acknowledge Thomas Romano for helpful conversations, and users &#x201C;Theremingenieur&#x201D; and &#x201C;PaulStoffregen&#x201D; from the PJRC forums (<ext-link ext-link-type="uri" xlink:href="https://forum.pjrc.com/">https://forum.pjrc.com/</ext-link>) for responding to questions relating to the trace eye blink conditioning experiment.</p>
</ack>
<sec>
<title>Funding sources</title>
<p>X.H. acknowledges funding from the National Institutes of Health (NIH) (1DP2NS082126, R01NS109794-01), NSF (CBET-1848029), Defense Advanced Research Projects Agency (DARPA) Young Faculty Award, Boston University Biomedical Engineering Department, and Boston University Photonic Center. M.F.R.</p>
</sec>
<sec sec-type="COI-statement">
<p><named-content content-type="COI-statement">The authors have no competing financial interests.</named-content></p>
</sec>
<ref-list>
<title>References</title>
<ref id="c1"><mixed-citation publication-type="journal"><string-name><surname>Chen</surname>, <given-names>Xinfeng</given-names></string-name>, and <string-name><given-names>Haohong</given-names> <surname>Li</surname></string-name>. <year>2017</year>. &#x201C;<article-title>ArControl: An Arduino-Based Comprehensive Behavioral Platform with Real-Time Performance</article-title>.&#x201D; <source>Frontiers in Behavioral Neuroscience</source> <volume>11</volume>: <fpage>1</fpage>&#x2013;<lpage>9</lpage>.</mixed-citation></ref>
<ref id="c2"><mixed-citation publication-type="journal"><string-name><surname>D&#x2019;Ausilio</surname>, <given-names>Alessandro</given-names></string-name>. <year>2012</year>. &#x201C;<article-title>Arduino: A Low-Cost Multipurpose Lab Equipment</article-title>.&#x201D; <source>Behavior Research Methods</source> <volume>44</volume> (<issue>2</issue>): <fpage>305</fpage>&#x2013;<lpage>313</lpage>.</mixed-citation></ref>
<ref id="c3"><mixed-citation publication-type="journal"><string-name><surname>Dombeck</surname>, <given-names>Daniel</given-names></string-name>, <string-name><given-names>Anton N.</given-names> <surname>Khabbaz</surname></string-name>, <string-name><given-names>Forrest</given-names> <surname>Collman</surname></string-name>, <string-name><given-names>Thomas L.</given-names> <surname>Adelman</surname></string-name>, and <string-name><given-names>David W.</given-names> <surname>Tank</surname></string-name>. <year>2007</year>. &#x201C;<article-title>Imaging Large-Scale Neural Activity with Cellular Resolution in Awake, Mobile Mice</article-title>.&#x201D; <source>Neuron</source> <volume>56</volume> (<issue>1</issue>): <fpage>43</fpage>&#x2013;<lpage>57</lpage>.</mixed-citation></ref>
<ref id="c4"><mixed-citation publication-type="journal"><string-name><surname>Hansen</surname>, <given-names>Kyle R.</given-names></string-name>, <string-name><given-names>Gloria J</given-names> <surname>DeWalt</surname></string-name>, <string-name><given-names>Ali I.</given-names> <surname>Mohammed</surname></string-name>, <string-name><given-names>Hua-an</given-names> <surname>Tseng</surname></string-name>, <string-name><given-names>Moona E</given-names>. <surname>Abdulkerim</surname></string-name>, <string-name><given-names>Seth</given-names> <surname>Bensussen</surname></string-name>, <string-name><given-names>Venkatesh</given-names> <surname>Saligrama</surname></string-name>, <string-name><given-names>Bobak</given-names> <surname>Nazer</surname></string-name>, <string-name><given-names>William D</given-names>. <surname>Eldred</surname></string-name>, and <string-name><surname>Xue</surname> <given-names>Han.</given-names></string-name> <year>2018</year>. &#x201C;<article-title>Mild blast injury produces acute changes in basal intracellular calcium levels and activity patterns in mouse Hippocampal neurons</article-title>.&#x201D; <source>Journal of Neurotrauma</source> <volume>35</volume> (<issue>13</issue>): <fpage>1523</fpage>&#x2013;<lpage>1536</lpage>.</mixed-citation></ref>
<ref id="c5"><mixed-citation publication-type="journal"><string-name><surname>Husain</surname>, <given-names>Abdul Rashid</given-names></string-name>, <string-name><given-names>Yaser</given-names> <surname>Hadad</surname></string-name>, and <string-name><given-names>Muhd Nazrul Hisham Zainal</given-names> <surname>Alam</surname></string-name>. <year>2016</year>. &#x201C;<article-title>Development of Low-Cost Microcontroller-Based Interface for Data Acquisition and Control of Microbioreactor Operation</article-title>.&#x201D; <source>Journal of Laboratory Automation</source> <volume>21</volume> (<issue>5</issue>): <fpage>660</fpage>&#x2013;<lpage>670</lpage>.</mixed-citation></ref>
<ref id="c6"><mixed-citation publication-type="journal"><string-name><surname>Micallef</surname>, <given-names>Andrew H.</given-names></string-name>, <string-name><given-names>Naoya</given-names> <surname>Takahashi</surname></string-name>, <string-name><given-names>Matthew E</given-names> <surname>Larkum</surname></string-name>, and <string-name><given-names>Lucy M.</given-names> <surname>Palmer</surname></string-name>. <year>2017</year>. &#x201C;<article-title>A Reward-Based Behavioral Platform to Measure Neural Activity during Head-Fixed Behavior</article-title>.&#x201D; <source>Frontiers in Cellular Neuroscience</source> <volume>11</volume>: <fpage>156</fpage>.</mixed-citation></ref>
<ref id="c7"><mixed-citation publication-type="journal"><string-name><surname>Mohammed</surname>, <given-names>Ali I.</given-names></string-name>, <string-name><given-names>Howard J.</given-names> <surname>Gritton</surname></string-name>, <string-name><given-names>Hua-an</given-names> <surname>Tseng</surname></string-name>, <string-name><given-names>Mark E.</given-names> <surname>Bucklin</surname></string-name>, <string-name><given-names>Zhaojie</given-names> <surname>Yao</surname></string-name>, and <string-name><given-names>Xue</given-names> <surname>Han</surname></string-name>. <year>2016</year>. &#x201C;<article-title>An Integrative Approach for Analyzing Hundreds of Neurons in Task Performing Mice Using Wide-Field Calcium Imaging</article-title>.&#x201D; <source>Scientific Reports</source> <volume>6</volume>: <fpage>20986</fpage>.</mixed-citation></ref>
<ref id="c8"><mixed-citation publication-type="journal"><string-name><surname>Nguyen</surname>, <given-names>Jeffrey P</given-names></string-name>, <string-name><given-names>Frederick B</given-names> <surname>Shipley</surname></string-name>, <string-name><given-names>Ashley N</given-names> <surname>Linder</surname></string-name>, <string-name><given-names>George S</given-names> <surname>Plummer</surname></string-name>, <string-name><given-names>Mochi</given-names> <surname>Liu</surname></string-name>, <string-name><given-names>Sagar U</given-names> <surname>Setru</surname></string-name>, <string-name><given-names>Joshua W.</given-names> <surname>Shaevitz</surname></string-name>, and <string-name><given-names>Andrew M.</given-names> <surname>Leifer</surname></string-name>. <year>2016</year>. &#x201C;<article-title>Whole-brain calcium imaging with cellular resolution in freely behaving Caenorhabditis elegans</article-title>.&#x201D; <source>Proceedings of the National Academy of Sciences</source> <volume>113</volume> (<issue>8</issue>): <fpage>E1074</fpage>&#x2013;<lpage>81</lpage>.</mixed-citation></ref>
<ref id="c9"><mixed-citation publication-type="journal"><string-name><surname>Sanders</surname>, <given-names>Joshua I.</given-names></string-name>, and <string-name><given-names>Adam</given-names> <surname>Kepecs</surname></string-name>. <year>2014</year>. &#x201C;<article-title>A Low-Cost Programmable Pulse Generator for Physiology and Behavior</article-title>.&#x201D; <source>Frontiers in Neuroengineering</source> <volume>7</volume> (<issue>43</issue>): <fpage>1</fpage>&#x2013;<lpage>8</lpage>.</mixed-citation></ref>
<ref id="c10"><mixed-citation publication-type="journal"><string-name><surname>Solari</surname>, <given-names>Nicola</given-names></string-name>, <string-name><given-names>Katalin</given-names> <surname>Sviatk&#x00F3;</surname></string-name>, <string-name><given-names>Tam&#x00E1;s</given-names> <surname>Laszlovsky</surname></string-name>, <string-name><given-names>Panna</given-names> <surname>Heged&#x00FC;s</surname></string-name>, and <string-name><given-names>Bal&#x00E1;zs</given-names> <surname>Hangya</surname></string-name>. <year>2018</year>. &#x201C;<article-title>Open Source Tools for Temporally Controlled Rodent Behavior Suitable for Electrophysiology and Optogenetic Manipulations</article-title>.&#x201D; <source>Frontiers in Systems Neuroscience</source> <volume>12</volume> (<issue>18</issue>).</mixed-citation></ref>
<ref id="c11"><mixed-citation publication-type="journal"><string-name><surname>Takahashi</surname>, <given-names>Naoya</given-names></string-name>, <string-name><given-names>Thomas G.</given-names> <surname>Oertner</surname></string-name>, <string-name><given-names>Peter</given-names> <surname>Hegemann</surname></string-name>, and <string-name><given-names>Matthew E.</given-names> <surname>Larkum</surname></string-name>. <year>2016</year>. &#x201C;<article-title>Active cortical dendrites modulate perception</article-title>.&#x201D; <source>Science</source> <volume>354</volume> (<issue>6319</issue>): <fpage>1587</fpage>&#x2013;<lpage>1590</lpage>.</mixed-citation></ref>
<ref id="c12"><mixed-citation publication-type="journal"><string-name><surname>Wilms</surname>, <given-names>Christian D.</given-names></string-name>, and <string-name><given-names>Michael</given-names> <surname>H&#x00E4;usser</surname></string-name>. <year>2015</year>. &#x201C;<article-title>Reading out a spatiotemporal population code by imaging neighbouring parallel fibre axons in vivo</article-title>.&#x201D; <source>Nature Communications</source> <volume>6</volume>: <fpage>6464</fpage>&#x2013;<lpage>6472</lpage>.</mixed-citation></ref>
<ref id="c13"><mixed-citation publication-type="journal"><string-name><surname>Yoav</surname>, <given-names>Adam</given-names></string-name>, <string-name><given-names>Jeong J.</given-names> <surname>Kim</surname></string-name>, <string-name><given-names>Daan</given-names> <surname>Brinks</surname></string-name>, <string-name><given-names>Shan</given-names> <surname>Lou</surname></string-name>, <string-name><given-names>Hao</given-names> <surname>Wu</surname></string-name>, <string-name><given-names>Mohammed A.</given-names> <surname>Mostajo-Radji</surname></string-name>, <string-name><given-names>Simon</given-names> <surname>Kheifets</surname></string-name>, <etal>et al.</etal> <year>2018</year>. &#x201C;<article-title>All-Optical Electrophysiology Reveals Brain-State Dependent Changes in Hippocampal Subthreshold Dynamics and Excitability</article-title>.&#x201D; <source>bioRxiv</source>. doi:<ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1101/281618">https://doi.org/10.1101/281618</ext-link>.</mixed-citation></ref>
</ref-list>
</back>
</article>

<?xml version="1.0"?>
<!DOCTYPE article PUBLIC "-//NLM//DTD Journal Archiving and Interchange DTD v3.0 20080202//EN" "archivearticle3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article">
  <?properties open_access?>
  <?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
  <?DTDIdentifier.IdentifierType public?>
  <?SourceDTD.DTDName A++V2.4.dtd?>
  <?SourceDTD.Version 2.4?>
  <?ConverterInfo.XSLTName springer2nlmx2.xsl?>
  <?ConverterInfo.Version 2?>
  <front>
    <journal-meta>
      <journal-id journal-id-type="nlm-ta">Cell Mol Bioeng</journal-id>
      <journal-title-group>
        <journal-title>Cellular and Molecular Bioengineering</journal-title>
      </journal-title-group>
      <issn pub-type="ppub">1865-5025</issn>
      <issn pub-type="epub">1865-5033</issn>
      <publisher>
        <publisher-name>Springer US</publisher-name>
        <publisher-loc>Boston</publisher-loc>
      </publisher>
    </journal-meta>
    <article-meta>
      <article-id pub-id-type="pmc">3032229</article-id>
      <article-id pub-id-type="pmid">21423324</article-id>
      <article-id pub-id-type="publisher-id">143</article-id>
      <article-id pub-id-type="doi">10.1007/s12195-010-0143-x</article-id>
      <article-categories>
        <subj-group subj-group-type="heading">
          <subject>Article</subject>
        </subj-group>
      </article-categories>
      <title-group>
        <article-title>CytoSolve: A Scalable Computational Method for Dynamic Integration of Multiple Molecular Pathway Models</article-title>
      </title-group>
      <contrib-group>
        <contrib contrib-type="author" corresp="yes">
          <name>
            <surname>Ayyadurai</surname>
            <given-names>V. A. Shiva</given-names>
          </name>
          <address>
            <phone>+1-617-8694486</phone>
            <fax>+1-617-2588559</fax>
            <email>vashiva@mit.edu</email>
          </address>
          <xref ref-type="aff" rid="Aff1">1</xref>
          <xref ref-type="aff" rid="Aff2">2</xref>
        </contrib>
        <contrib contrib-type="author">
          <name>
            <surname>Dewey</surname>
            <given-names>C. Forbes</given-names>
            <suffix>Jr.</suffix>
          </name>
          <xref ref-type="aff" rid="Aff1">1</xref>
          <xref ref-type="aff" rid="Aff3">3</xref>
        </contrib>
        <aff id="Aff1"><label>1</label>Department of Biological Engineering, Massachusetts Institute of Technology, 3-237, 77 Massachusetts Avenue, Cambridge, MA 02138 USA </aff>
        <aff id="Aff2"><label>2</label>International Center for Integrative Systems, 701 Concord Avenue, Cambridge, MA 02138 USA </aff>
        <aff id="Aff3"><label>3</label>Department of Mechanical Engineering, Massachusetts Institute of Technology, 3-254, 77 Massachusetts Avenue, Cambridge, MA 02138 USA </aff>
      </contrib-group>
      <author-notes>
        <fn fn-type="com">
          <p>Associate Editor Jason M. Haugh oversaw the review of this article.</p>
        </fn>
      </author-notes>
      <pub-date pub-type="epub">
        <day>23</day>
        <month>10</month>
        <year>2010</year>
      </pub-date>
      <pub-date pub-type="pmc-release">
        <day>23</day>
        <month>10</month>
        <year>2010</year>
      </pub-date>
      <pub-date pub-type="ppub">
        <month>3</month>
        <year>2011</year>
      </pub-date>
      <volume>4</volume>
      <issue>1</issue>
      <fpage>28</fpage>
      <lpage>45</lpage>
      <history>
        <date date-type="received">
          <day>3</day>
          <month>5</month>
          <year>2010</year>
        </date>
        <date date-type="accepted">
          <day>4</day>
          <month>10</month>
          <year>2010</year>
        </date>
      </history>
      <permissions>
        <copyright-statement>&#xA9; The Author(s) 2010</copyright-statement>
      </permissions>
      <abstract>
        <p>A grand challenge of computational systems biology is to create a molecular pathway model of the whole cell. Current approaches involve merging smaller molecular pathway models&#x2019; source codes to create a large monolithic model (computer program) that runs on a single computer. Such a larger model is difficult, if not impossible, to maintain given ongoing updates to the source codes of the smaller models. This paper describes a new system called CytoSolve that dynamically integrates computations of smaller models that can run in parallel across different machines without the need to merge the source codes of the individual models. This approach is demonstrated on the classic Epidermal Growth Factor Receptor (EGFR) model of Kholodenko. The EGFR model is split into four smaller models and each smaller model is distributed on a different machine. Results from four smaller models are dynamically integrated to generate identical results to the monolithic EGFR model running on a single machine. The overhead for parallel and dynamic computation is approximately twice that of a monolithic model running on a single machine. The CytoSolve approach provides a scalable method since smaller models may reside on any computer worldwide, where the source code of each model can be independently maintained and updated.</p>
      </abstract>
      <kwd-group>
        <title>Keywords</title>
        <kwd>Systems biology</kwd>
        <kwd>SBML</kwd>
        <kwd>Model composition</kwd>
        <kwd>Biochemical simulation</kwd>
        <kwd>Distributed computing</kwd>
        <kwd>Molecular pathways</kwd>
        <kwd>Kinetic modeling</kwd>
        <kwd>Parallel simulation</kwd>
        <kwd>Collaboratory</kwd>
        <kwd>Systems architecture</kwd>
        <kwd>Software</kwd>
      </kwd-group>
      <custom-meta-group>
        <custom-meta>
          <meta-name>issue-copyright-statement</meta-name>
          <meta-value>&#xA9; Biomedical Engineering Society 2011</meta-value>
        </custom-meta>
      </custom-meta-group>
    </article-meta>
  </front>
  <body>
    <sec id="Sec1">
      <title>Introduction</title>
      <p>A grand challenge of computational systems biology is to model the whole cell. Biologists use experiments, not first principles or &#x201C;laws&#x201D; (<italic>ab initio</italic>) as in physics, to derive <italic>molecular pathways</italic>, as shown on the left in Fig.&#xA0;<xref rid="Fig1" ref-type="fig">1</xref>, which are the diagrammatic representations of molecular interactions.<xref ref-type="bibr" rid="CR16">16</xref> Computational systems biologists translate these molecular pathways into <italic>molecular pathway models</italic>, as shown on the right in Fig.&#xA0;<xref rid="Fig1" ref-type="fig">1</xref>, which are the quantification of molecular interactions. They also work to build large-scale models of cellular function by integrating the biomolecular kinetics across multiple models at the molecular mechanistic level.<xref ref-type="bibr" rid="CR1">1</xref>,<xref ref-type="bibr" rid="CR10">10</xref>,<xref ref-type="bibr" rid="CR13">13</xref>,<xref ref-type="bibr" rid="CR15">15</xref>,<xref ref-type="bibr" rid="CR22">22</xref>,<xref ref-type="bibr" rid="CR26">26</xref><fig id="Fig1"><label>Figure&#xA0;1</label><caption><p>A molecular pathway, represented diagrammatically on the <italic>left</italic>, can be converted to a molecular pathway model, <bold>M</bold>, on the <italic>right</italic>, which receives inputs, <bold>S</bold><sub><bold>M</bold>,<italic>n</italic></sub> and evaluates outputs, <bold>S</bold><sub><bold>M</bold>,<italic>n</italic>+1</sub> using various mathematical approaches (e.g. ODE&#x2019;s). The model can be encoded using various programming languages</p></caption><graphic xlink:href="12195_2010_143_Fig1_HTML" id="MO1"/></fig></p>
      <p>A molecular pathway model <bold>M</bold> can be thought of as &#x201C;black box&#x201D; which describes the biomolecular kinetics of a set of molecular species, <bold>S</bold><sub><bold>M</bold></sub>. The input to the black box are the concentrations of species at time <italic>t</italic>&#xA0;=&#xA0;<italic>n</italic>, denoted as <bold>S</bold><sub><bold>M</bold>,<italic>n</italic></sub>,. The internals of the black box contain computer source codes that evaluate the input using mathematical methods to yield an output. The output of the black box are the concentrations of species at time <italic>t</italic>&#xA0;=&#xA0;<italic>n</italic>&#xA0;+&#xA0;1, denoted as <bold>S</bold><sub><bold>M</bold>,<italic>n</italic>+1.</sub></p>
      <p>The current methods for integrating models attempt to use direct computation to solve the problem, i.e. developing a program from scratch for each set of coupled reactions, or a <italic>monolithic approach</italic>, which takes individual component models in a single supported computer source code format such as Systems Biology Markup Language (SBML)<xref ref-type="bibr" rid="CR11">11</xref> and manually integrates them to create one monolithic software program. A variation on this second approach is to use semi-automation tools that help to automatically read and integrate source codes together to create one monolithic software program.<xref ref-type="bibr" rid="CR24">24</xref> The most common architectures such as Cell Designer,<xref ref-type="bibr" rid="CR16">16</xref> COPASI<xref ref-type="bibr" rid="CR21">21</xref> or E-CELL,<xref ref-type="bibr" rid="CR26">26</xref> use the monolithic approach.</p>
      <p>The monolithic approach presents significant hurdles in scaling to large numbers of models. All models have to reside in the same geographical location, and the person integrating the models must be intimately acquainted with all the multiple pathways to be merged. Maintenance of the larger monolithic model emerges as a critical issue since new biological experiments may yield results that require changes to individual molecular pathways and their models&#x2019; source codes. If each model is in different source code format, conversion to a single format is required.</p>
      <p>This paper describes CytoSolve, a computational environment for integrating multiple independent pathways dynamically in parallel to address the shortcomings of monolithic methods.</p>
      <sec id="Sec2">
        <title>Characteristics of a Dynamic Methodology</title>
        <p>A method that <italic>dynamically</italic> integrates the computations of the smaller molecular pathway models may obviate the need to: (1) merge source codes and (2) centrally maintain and update the source codes of each model. In fields such as ecology and earth sciences, platforms such DANUBIA<xref ref-type="bibr" rid="CR3">3</xref> have shown the value of integrating distributed models in parallel without the need to merge source codes. There are a number of important characteristics that such a dynamic method should exhibit.</p>
        <p><italic>First</italic>, it should be <italic>scalable</italic>. Scalability means the effort to integrate a new model is comparable to the effort to integrate the first model. Scalability has little to do with complexity. Two models with numerous equations, for example, can integrate easily if they are in the same programming language, have similar time scales, belong to the same knowledge domain and were developed on the same hardware and operating systems. <italic>Second</italic>, the method should be able to connect multiple knowledge domains in an <italic>opaque</italic> manner; such opacity will treat each model as a &#x201C;black box&#x201D; shielding the integrator from internal details. The integrator needs only know the inputs and outputs of each model. This will allow for integration of emerging compartmental models.</p>
        <p><italic>Third</italic>, the method should provide <italic>support for both public and proprietary models</italic>. Public models have accessible source codes. Proprietary models have inaccessible source codes. A pharmaceutical company, for example, with proprietary models may seek to integrate with public models, and researchers in an academic environment, alternatively, may seek to integrate their public models with proprietary models. <italic>Fourth</italic>, it should be extensible to provide support for <italic>heterogeneous source code formats</italic> including support for long standing formats such as MML generated by JSIM,<xref ref-type="bibr" rid="CR21">21</xref> and more recent standards such as SBML and CellML.<xref ref-type="bibr" rid="CR12">12</xref> Other important models have been published using programming languages such as MATLAB, Java or C. A computational architecture that supports dynamic integration will not require conversion to one standard format. Keeping a model resident on its native format will reduce time in source code rewriting and testing. An analogy is having a single program to display a collection of digital pictures stored in various graphical formats.</p>
        <p><italic>Last</italic>, the architecture should support <italic>localized integration</italic>. This means that users at all locations can initiate integration from their own local environment. Consider the scenario of the author of a Model A, who wishes to quickly test or integrate with an ensemble of three other models: Model B, C and D which are distributed across different machines. The author of Model A should not have to download the other three models to his/her local computer to perform the integration.</p>
        <p>Ease of integrating an ensemble of disparate and distributed molecular pathway models, each owned by different authors is therefore critical to building large-scale models such as the whole cell. In his seminal work, Brooks<xref ref-type="bibr" rid="CR5">5</xref> demonstrated that as the number of different authors (or models) increases, the effort to perform such integration increases geometrically with the number of personnel communications required to simply coordinate the software development among the different authors. CytoSolve provides a new methodology to integrate models without requiring personnel interaction with the authors since each model need not be manually loaded, understood and interconnected into a single monolithic program.</p>
      </sec>
    </sec>
    <sec id="Sec3">
      <title>Architecture</title>
      <p>CytoSolve&#x2019;s parallel and distributed architecture addresses the various scalability problems of integrating multiple models. In this architecture, the whole cell, using the theoretical framework and conditions prescribed in <xref rid="Sec14" ref-type="sec">Appendix A</xref>, can be viewed as a network of <italic>D</italic> molecular pathways as shown in Fig.&#xA0;<xref rid="Fig2" ref-type="fig">2</xref>a or modelled as an interconnected ensemble of <italic>D</italic> molecular pathway models, shown in Fig.&#xA0;<xref rid="Fig2" ref-type="fig">2</xref>b. CytoSolve as shown in Fig.&#xA0;<xref rid="Fig2" ref-type="fig">2</xref>c uses a <italic>dynamic messaging approach</italic> to exchange data via message passing across the ensemble of models, {<bold>M</bold><sub><bold>i</bold></sub>} (for <italic>i</italic>&#xA0;=&#xA0;1 to <italic>D</italic>) to evaluate the integrated solution.<fig id="Fig2"><label>Figure&#xA0;2</label><caption><p>Abstraction of cell being represented as an integration of <italic>D</italic> molecular pathway models. A large pathway is partitioned to smaller pathways, which are represented as mathematical models that are integrated using the CytoSolve system</p></caption><graphic xlink:href="12195_2010_143_Fig2_HTML" id="MO2"/></fig></p>
      <p>CytoSolve computes the integrated solution using the <italic>n</italic>-<italic>tier</italic> layered architecture shown in Fig.&#xA0;<xref rid="Fig3" ref-type="fig">3</xref>. This architecture consists of the following layers: Presentation, Controller, Communications, Models and Database.<fig id="Fig3"><label>Figure&#xA0;3</label><caption><p>The architecture design underlying the CytoSolve method employs a dynamic messaging approach to manage and integrate communications across a distributed ensemble of <italic>D</italic> models based on instructions by the GUI at the <italic>Presentation</italic> layer. The <italic>Controller</italic> layer integrates the solution among the models using three components: Monitor, Comm Mgr and Mass Balance. The <italic>Communication</italic> layer provides infrastructure to communicate input and output values across models running as separate processes on a single server or separately on individual servers. The <italic>Data Base</italic> layer provides storage for the Solution to hold the results of the integrated and individual model solutions along with Ontology for registering and describing each model&#x2019;s characteristics and annotations made by the user. The <italic>Models</italic> layer denotes the ensemble of models, which may be remote or local</p></caption><graphic xlink:href="12195_2010_143_Fig3_HTML" id="MO3"/></fig></p>
      <p>The <italic>Presentation</italic> layer includes a Graphical User Interface (GUI) and Web Services. The user interacts with the GUI to specify one or more molecular pathway models to be integrated. A set of molecular pathway models may have common species and/or duplicate reaction pathways. For the former case, e.g. two models may refer to species Calcium but one may have refer it as &#x201C;Ca++&#x201D; and another as &#x201C;Cal&#x201D;, a Web Service is provided, which parses the models and detects potential naming conflicts and allows the user through the GUI to confirm or reject identical species. The Web Services also provides the user a mechanism to identify common reaction pathways to enable alignment across models. All user-defined changes or such <italic>annotations</italic> to the models to resolve species differences and reaction duplications are stored and updated within the <italic>Ontology</italic> of the Database, for later use by the <italic>Controller</italic>, during model integration. Once the user has specified models and resolved conflicts, the Controller via the <italic>Monitor</italic>, is invoked for executing model integration.</p>
      <p>The <italic>Controller</italic> coordinates individual computations and couples models to derive the integrated solution. The Controller includes libraries that support direct model-to-model messaging as well as model-to-controller messaging. CytoSolve&#x2019;s Controller has three components: the Monitor, the Communications Manager (Comm Mgr) and the Mass Balance. The <italic>Monitor</italic> serves to track the progress of each model&#x2019;s computation. The Monitor knows, for a particular time step, which models have completed and which models have not completed their calculation. The <italic>Comm Mgr</italic> or Communications Manager coordinates the communication across all models. The Comm Mgr initiates a model to compute a time step of calculation and also can instruct a model to wait or hold on computing the next time step. The <italic>Mass Balance</italic> integrates, for each time step, the calculations across an ensemble of models by ensuring mass conservation of species, to derive the integrated solution.</p>
      <p>The <italic>Communications</italic> layer contains the <italic>Inter</italic>-<italic>process Communications</italic> (<italic>IPC</italic>) infrastructure. The IPC allows communication of user parameters (e.g. which models to run) and results between the Controller and the Models. IPC allows the Controller to perform dynamic messaging using two important operations. First, the Controller may message a model with input values of species concentrations at time step <italic>n</italic>, <bold>S</bold><sub><bold>M</bold>,<italic>n</italic></sub> and request the model to execute one time step of calculation. Second, a model, following execution of one time step of calculation, can message the Controller to send the output values of species concentrations at time step <italic>n</italic>&#xA0;+&#xA0;1, <bold>S</bold><sub><bold>M</bold>,<italic>n</italic>+1</sub>. These operations enable the Controller to manage and steer the individual computations across multiple models in parallel.</p>
      <p>The <italic>Data Base</italic> layer consists of storage of the Solution and the Ontology. The <italic>Solution</italic> (as detailed in <xref rid="Sec16" ref-type="sec">Appendix B</xref>) holds memory resident data to track species concentrations across all models for each time step. The <italic>Ontology</italic> manages nomenclature and the annotations of species identification and duplicate reaction pathways, across models to ensure consistency during the Controller&#x2019;s computation of the integrated solution (see <xref rid="Sec21" ref-type="sec">Appendix C</xref>). The Ontology can be evolved to support more complex descriptions.</p>
      <p>The <italic>Models</italic> layer denotes the set of models to be integrated. These models may each reside on different servers, remote to the GUI. Or, the models may reside on a single server, possibly the same server as the GUI, but may run as individual processes. CytoSolve treats each model as a module whose model code can be as simple or as complex as possible. However, what is important is the format of the inputs and outputs to and from the model, respectively. <xref rid="Sec23" ref-type="sec">Appendix D</xref> provides a diagrammatic representation of a model, its input and outputs and how these inputs and outputs are linked with the temporal inputs and outputs of other models to evaluate a solution.</p>
    </sec>
    <sec id="Sec4">
      <title>Implementation</title>
      <p>CytoSolve is implemented using open source software to reduce expense and to ensure that future work can be pursued with minimal reliance on proprietary tools. Figure&#xA0;<xref rid="Fig4" ref-type="fig">4</xref> illustrate the components used at various layers of the CytoSolve architecture. At the Presentation layer, the web-based GUI currently implemented using the Java language running on Apache Tomcat,<xref ref-type="bibr" rid="CR7">7</xref> can also easily be implemented in PHP or ASP, for example. The GUI allows a user multiple ways to run and couple model(s): (1) Execute a model(s) local to the GUI as multiple processes; (2) Execute a models remote to the GUI; (3) Execute in parallel a model locally and multiple models on remote servers; and (4) Execute all models on remote servers and couple their results. The Web Services are written in J2EE.<fig id="Fig4"><label>Figure&#xA0;4</label><caption><p>The implementation of CytoSolve is done using open source tools as indicated at each layer</p></caption><graphic xlink:href="12195_2010_143_Fig4_HTML" id="MO4"/></fig></p>
      <p>At the Controller layer<bold>,</bold> the three components, Monitor, Comm Mgr and Mass Balance, are programmed using J2EE. The Controller is executed on a Pentium 4 CPU 3.00&#xA0;GHz Dell Workstation with 2&#xA0;GB of RAM running Windows XP with Service Pack 2. Each component can be multi-threaded and communicates using message passing. At the Data Base layer, Virtual Memory is allocated for the Solution storage (as detailed in <xref rid="Sec16" ref-type="sec">Appendix B</xref>) and a Java DB and ASCII files are used for the Ontology (as described in <xref rid="Sec21" ref-type="sec">Appendix C</xref>).</p>
      <p>At the Communications layer, IPC were originally implemented using the Simple Object Access Protocol (SOAP),<xref ref-type="bibr" rid="CR23">23</xref> but for performance reasons have been rewritten using the Java Native Interface (JNI lib).<xref ref-type="bibr" rid="CR19">19</xref> This XML-based messaging format established a transmission framework for IPC communication via HTTP. Both SOAP and JNI are vendor-neutral technologies that provide attractive alternatives earlier protocols, such as CORBA or DCOM. The Web Services Description Language (WSDL)<xref ref-type="bibr" rid="CR6">6</xref> supplied a language for describing the interface of the web services.</p>
      <p>The Models used in the implementation are written in SBML and were acquired from the BioModels Database<xref ref-type="bibr" rid="CR17">17</xref> which provides access to published, peer-reviewed, quantitative models of biochemical and cellular systems delivered in SBML and CellML formats.</p>
      <p>The CytoSolve architecture uses an interpreter to enter reaction and specie data relative to the pathway. In the current production version, we provide an input filter only for models coded in SBML. Other input filters for models stored in other formats can be incorporated within the architecture, provided the input filter for that format is developed and tested. In our earlier internal development efforts, we have produced prototype input filters for model formats written in MATLAB and Java. Our development roadmap, for future production versions looks to release these and other input filters to support CellML and MML. Such development may occur by our research team or through collaboration with the developers of those two formats.</p>
      <p>Fundamentally, CytoSolve treats each individual pathway as a &#x201C;black box&#x201D; to which input concentrations are sent and from which time-evolved outputs are received. In principle, CytoSolve&#x2019;s architecture is not dependent on the internal computational methods e.g. ODE, Petri Net, Stochastic,<italic> etc</italic>., for evaluating the models dynamics, nor the source code formats they are written. As aforementioned, MATLAB representations in parallel with SBML ODE solvers have been tested in earlier versions. The critical issue for integrating the black boxes across different computational methods is the pre-computational alignment of the individual pathways. This requires that the species and the equations be precisely defined such that common species and common pathways among models are identified. We are developing automated methods to do this for pathways expressed in SBML that we believe can likely be generalized to CellML and MML. We do not have standard packages to do this with models written in C and MATLAB, however, for example. For those cases, the alignment between the different pathways would have to be done by hand.</p>
      <p>The web-based GUI, recently ported from a non-GUI environment, currently runs on a server through a web connection to <ext-link ext-link-type="uri" xlink:href="http://www.cytosolve.com">http://www.cytosolve.com</ext-link>. The browser is cross-platform a design that can be run on workstations, laptops and even mobile devices such as the iPhone. The servers which the Models run on is a Pentium 4 CPU 3.00&#xA0;GHz Dell Workstation with 2&#xA0;GB of RAM running Windows XP with Service Pack 2, or a Mac Pro Server with two Intel quad-core processors with 4&#xA0;GB of RAM running OSX10.6 (Snow Leopard).</p>
      <p>The SBML ODE Solver (SOS) library (SOSlib)<xref ref-type="bibr" rid="CR20">20</xref> is used to enable symbolic and numerical analysis of chemical reaction networks. SOSlib takes as input a file encoded in the SBML and computes time history of species concentrations for specified initial conditions and time steps. In this implementation, the SOSlib was modified, using the C programming language, to enable single time-step evaluation. Other solvers supporting CellML, MML,<xref ref-type="bibr" rid="CR4">4</xref> and other pathway description dialects can be used interchangeably with SOSlib. Even MATLAB programs have been used. After the setting of the parameters, the model(s) are executed and the results are displayed and stored. An <xref rid="Sec25" ref-type="sec">Appendix E</xref> has been added which provides the main steps for using the CytoSolve system. As the web-based environment is new and developing, documentation, on-line help, tutorials and video demonstrations are forthcoming and being updated to provide more detailed instructions.</p>
    </sec>
    <sec id="Sec5">
      <title>Computational Methodology</title>
      <p>CytoSolve dynamically integrates the computations of each model <bold>M</bold> to derive the species concentration of the integrated model <bold>O</bold> (derived in <xref rid="Sec14" ref-type="sec">Appendix A</xref>), denoted as <bold>S</bold><sub><bold>O</bold></sub> (defined in <xref rid="Sec16" ref-type="sec">Appendix B</xref>). The flow chart of the computational methodology is illustrated in Fig.&#xA0;<xref rid="Fig5" ref-type="fig">5</xref>.<fig id="Fig5"><label>Figure&#xA0;5</label><caption><p>The flow chart of CytoSolve&#x2019;s computational methodology</p></caption><graphic xlink:href="12195_2010_143_Fig5_HTML" id="MO5"/></fig></p>
      <p>The Controller performs initialization of the system by allocating memory storage for the computed species concentrations of each model and the integrated model in <italic>Local Vectors</italic>, and <italic>Global Vector</italic>, respectively, as detailed in <xref rid="Sec16" ref-type="sec">Appendix B</xref>. During this initialization, the initial species concentrations, <bold>S</bold><sub><bold>O</bold>,0</sub>, are set in the <italic>Global Vector</italic>. In addition, CytoSolve during this initialization performs various types of pre-checks on models prior to integration.</p>
      <p>One pre-check is to ensure coordination of physical dimensions e.g. conversion of species concentrations to uniform units, for example, molecules/cell or nM units. The other pre-check is to ensure coordination of common species, e.g. conversion of species names referring to the same species to a uniform name, for example, &#x201C;Ca++&#x201D; or &#x201C;Calcium&#x201D;. Finally, one other pre-check is to ensure coordination of common pathways, e.g. conversion of reactions referring to the same reaction to a consistent and common one. For the coordination of physical dimensions, CytoSolve currently performs unit checking and unit conversion on all input parameters. This is done both at the species level and at the equation level. For the latter two pre-checks, coordination of species names and pathways, CytoSolve uses a graph-theoretic approach, based on reaction-component (species) reachability to identify duplicate graph (reaction) pathways. A combination of Uniprot ID&#x2019;s and sub-string matches are used to identify common species and duplications to align the graphs. During pre-checking, the user is alerted on any inconsistencies across species naming. In that event, the user can confirm or reject CytoSolve&#x2019;s identification of common species. The user&#x2019;s changes are annotated and both the Uniprot ID&#x2019;s and species names in the model are updated.</p>
      <p>Monitor, which <italic>monitors</italic> the progress of each model&#x2019;s computation, during its initialization, accesses the initial conditions, <bold>S</bold><sub><bold>O,</bold>0</sub>, from the <italic>Global Vector</italic>, and sets these as the initial conditions for each model&#x2019;s species concentration, <bold>S</bold><sub><bold>M,</bold>0</sub>. Control is then passed to the Comm Mgr which awakens all the models to start up and become ready to process a time step of calculation, and then invokes the Monitor.</p>
      <p>The Monitor proceeds to invoke all models in parallel to execute a time step of calculation using <bold>S</bold><sub><bold>O,</bold>n,</sub> the species concentration values of the integrated model <bold>O</bold> at time step <italic>n</italic>, as the input to all models. Each model executes and computes one time step of calculation on its own Remote Server. Monitor tracks the progress of each model&#x2019;s completion. Once a model completes its computation, the output is stored in its Local Vector within the Virtual Memory, and the model then goes to <italic>sleep</italic> to optimize use of the Remote Server&#x2019;s CPU usage<italic>.</italic> By sleep, we mean that the model goes dormant until invoked again by the Comm Mgr to process another time step of calculation. Once all models have completed their processing for a time step, the Monitor passes control back to the Comm Mgr, and the Monitor itself goes to sleep.</p>
      <p>Once all models have completed a time step of calculation, the Comm Mgr invokes Mass Balance to dynamically couple the computations at time step <italic>n</italic> of each Model to evaluate the integrated model <bold>O</bold> solution <bold>S</bold><sub><bold>O</bold></sub>. Using the derivation in <xref rid="Sec16" ref-type="sec">Appendix B</xref>, the Mass Balance component of the architecture, using Eq. (<xref rid="Equ1" ref-type="">1</xref>), after each time step, <italic>n</italic>, calculates local species concentration changes of each model denoted as;<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \sum\limits_{i = 1}^{D} {\left( {S_{M,n}^{j,i} - S_{M,n + 1}^{j,i} } \right)} $$\end{document}</tex-math><graphic xlink:href="12195_2010_143_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula>where <bold>S</bold><sub><bold>M</bold>,<italic>n</italic></sub> is input to model <bold>M</bold> containing species concentration values at time step <italic>n</italic>; <bold>S</bold><sub><bold>M</bold>,<italic>n</italic>+1</sub> is output from model <bold>M</bold> containing species concentration values at time step <italic>n</italic>&#xA0;+&#xA0;1; <italic>i</italic> references a model with <italic>i</italic>&#xA0;=&#xA0;1 to <italic>D</italic>, with <italic>D</italic> being the total number of models; <italic>j</italic> references a molecular <italic>species</italic> with <italic>j</italic>&#xA0;=&#xA0;1 to <italic>C</italic>, with <italic>C</italic> being the total number of unique molecular species across the union of <bold>all</bold> models <bold>M</bold>. Any one model may only utilize a subset of those <italic>C</italic> species; and, <italic>n</italic> references time step with <italic>n</italic>&#xA0;=&#xA0;0 to <italic>N</italic>&#xA0;&#x2212;&#xA0;1, where <italic>N</italic> being total number of time steps; and,</p>
      <p>Mass Balance adds these local changes to the integrated model&#x2019;s species concentration values for the current time step, <bold>S</bold><sub><bold>O</bold>,<italic>n</italic></sub>, to compute the species concentration, <bold>S</bold><sub><bold>O</bold>,<italic>n</italic>+1</sub> at the next time step, <italic>n</italic>&#xA0;+&#xA0;1, as denoted in Eq. (<xref rid="Equ2" ref-type="">2</xref>).<disp-formula id="Equ2"><label>2</label><alternatives><tex-math id="M2">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ S_{O,n + 1}^{j} = S_{O,n}^{j} + \sum\limits_{i = 1}^{D} {\left( {S_{M,n}^{j,i} - S_{M,n + 1}^{j,i} } \right)} $$\end{document}</tex-math><graphic xlink:href="12195_2010_143_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula>where <bold>S</bold><sub><bold>O</bold>,<italic>n</italic></sub> is the time-evolved solution of the integrated model <bold>O</bold> at time step <italic>n</italic>; <bold>S</bold><sub><bold>O</bold>,<italic>n</italic>+1</sub> is the time-evolved solution of the integrated model <bold>O</bold> at time step <italic>n</italic>&#xA0;+&#xA0;1.</p>
      <p><italic>NOTE</italic>: The Mass Balance component uses the Ontology (as described in <xref rid="Sec21" ref-type="sec">Appendix C</xref>), to ensure that the species identities are correct. For example, if two different nomenclatures (e.g. Ca++ and CALCIUM) exist for the same species, and the species are treated as different, then one species may get depleted while the other floats at near its original value, which is not going to give the correct result. The Ontology is therefore critical in ensuring the species identification across models is correct.</p>
      <p>If the last time step has been computed, the Controller stops, performs a variety of cleanup functions to release resources, memory,<italic> etc</italic>., and returns control back to the GUI; otherwise, the Comm Mgr cycles again for the next time step. All models, even those with different time scales, as of now are invoked with a homogeneous time step. This will be area for future research as noted in the sub-section &#x201C;<xref rid="Sec11" ref-type="sec">Adaptive Time Stepping of the Controller</xref>&#x201D; in the &#x201C;<xref rid="Sec8" ref-type="sec">Discussion and Conclusions</xref>&#x201D; section.</p>
      <p>Currently CytoSolve is only concerned with the concentrations of species changes at each time step, and has limited its input output stream to these values; however, the architecture supports transfer of other attributes, which could be invoked, tracked and coordinated by the Controller.</p>
    </sec>
    <sec id="Sec6">
      <title>Validation of Cytosolve</title>
      <p>CytoSolve is validated by comparing the solution it produces with the one generated by Cell Designer, a popular tool for building molecular pathway models in a monolithic manner. As a control, the Epidermal Growth Factor Receptor (EGFR) model published by Kholodenko<xref ref-type="bibr" rid="CR14">14</xref> is selected for this comparison. Snoep<xref ref-type="bibr" rid="CR25">25</xref> have authored the model into the SBML language. The <italic>entire</italic> EGFR model, as shown in Fig.&#xA0;<xref rid="Fig6" ref-type="fig">6</xref>, is loaded into Cell Designer and executed on a single computer.<fig id="Fig6"><label>Figure&#xA0;6</label><caption><p>Complete EGFR model of Kholodenko implemented in Cell Designer on a single computer</p></caption><graphic xlink:href="12195_2010_143_Fig6_HTML" id="MO8"/></fig></p>
      <p>The same entire EGFR model, to test CytoSolve, is <italic>split</italic> into four models and distributed on four different computers as shown in Fig.&#xA0;<xref rid="Fig7" ref-type="fig">7</xref>.<fig id="Fig7"><label>Figure&#xA0;7</label><caption><p>Complete EGFR model of Kholodenko split on four remote servers for CytoSolve solving</p></caption><graphic xlink:href="12195_2010_143_Fig7_HTML" id="MO9"/></fig></p>
      <p>Note, in Fig.&#xA0;<xref rid="Fig7" ref-type="fig">7</xref>, that species <bold>(EGF_EGFR)2-P</bold>, encircled in red, is shared by all four models; however the species <bold>SOS</bold>, encircled in green, is shared only between two models. CytoSolve and Cell Designer are run for a total of 10&#xA0;s in simulation time.</p>
    </sec>
    <sec id="Sec7">
      <title>Results</title>
      <p>CytoSolve and Cell Designer produce near exact results as shown for two example species in Fig.&#xA0;<xref rid="Fig8" ref-type="fig">8</xref>.<fig id="Fig8"><label>Figure&#xA0;8</label><caption><p>Comparison of results from CytoSolve and Cell Designer for two species. (a) Compares values of the <bold>EGF-EGFR</bold> species. (b) Compares values of <bold>EGF</bold> concentration</p></caption><graphic xlink:href="12195_2010_143_Fig8_HTML" id="MO10"/></fig></p>
      <p>The results in Table&#xA0;<xref rid="Tab1" ref-type="table">1</xref>, column 1, provide the percent (%) in difference of the solutions calculated using CytoSolve and Cell Designer. The Solution Difference is calculated as an average of the percent (%) difference for each species, over five test runs. None of the solutions diverged. The small differences are a result of the selection of the time step, which presents some important and subtle issues. The selection of the time step is discussed in the sub-section entitled &#x201C;<xref rid="Sec9" ref-type="sec">Optimization of Time Step Selection</xref>&#x201D; in the &#x201C;<xref rid="Sec8" ref-type="sec">Discussion and Conclusions</xref>&#x201D;.<table-wrap id="Tab1"><label>Table&#xA0;1</label><caption><p>Comparison of cytosolve and cell designer</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Solution Difference (%)</th><th align="left">CytoSolve compute time (ms)</th><th align="left">Cell Designer compute time (ms)</th></tr></thead><tbody><tr><td align="left">0.026</td><td align="left">5932</td><td align="left">3217</td></tr></tbody></table><table-wrap-foot><p>Column 1 compares the % difference in solutions. Column 2 and column 3 compare the compute time differences</p></table-wrap-foot></table-wrap></p>
      <p>Column 2 and Column 3 in Table&#xA0;<xref rid="Tab1" ref-type="table">1</xref> provide the compute times for using CytoSolve and Cell Designer, respectively. CytoSolve&#x2019;s compute time is roughly twice that of Cell Designer. The additional compute time is primarily due to network latency required for CytoSolve&#x2019;s Controller to contact and receive information back from each model running on different Remote Servers. Cell Designer has no network latency since each model runs on a single computer.</p>
    </sec>
    <sec id="Sec8">
      <title>Discussion and Conclusions</title>
      <p>This paper has introduced CytoSolve, a new computational environment for integrating biomolecular pathway models. The initial results from the EGFR example has demonstrated that CytoSolve can serve as an alternative to the monolithic approaches, such as Cell Designer. Most important is CytoSolve&#x2019;s core feature for integrating multiple pathway models, which can be distributed across multiple computing systems and solved in parallel, obviating the need to merge models into one system, running on a single computer. In the EGFR example, this means that if changes are made to Model 1, in Fig.&#xA0;<xref rid="Fig7" ref-type="fig">7</xref>, then CytoSolve simply has to be executed to evaluate a new solution; however, Cell Designer will require that changes to be manually merged back into the whole model and then executed. So in practicality, if each Model (1, 2, 3 and 4) is each owned by different authors, who make changes, then constant maintenance will be needed using Cell Designer to ensure the model is up to date.</p>
      <p>The purpose of CytoSolve is to offer a platform for building large-scale models by integrating smaller models. Clearly, modeling the whole cell from hundreds of sub-models, each of which is owned by various authors (each making changes to their models) using the monolithic approach is not scalable. CytoSolve&#x2019;s dynamic messaging approach offers a scalable alternative since the environment is opaque (treats each model as a black box) support for both public and proprietary models is extensible to support heterogeneous source code formats, and finally supports localized integration, a user can initiate integration from their own local environment.</p>
      <p>From CytoSolve&#x2019;s viewpoint a sub-model or module is a &#x201C;black box&#x201D;. We are agnostic to the meaning of that module and its biological context, and CytoSolve will simply integrate any set of modules. The user can of course intervene and decide which species are duplicates and provide context through the user interface. CytoSolve&#x2019;s requirement, therefore, in this aspect, is minimal: each sub-model or module must accept as input a vector of species concentrations at a particular time step, and provide an output vector of species concentrations at the next time step.</p>
      <p>Two other systems, CellAK and Cellulat, also offer an alternative to the monolithic approach.<xref ref-type="bibr" rid="CR9">9</xref>,<xref ref-type="bibr" rid="CR28">28</xref> However, both of them use a static messaging approach. In the static messaging approach, the models remain independent programs and do not affect each other as they are executing. Any one model accepts as input a dataset and executes to completion to generate an output dataset. That output dataset is then given to another model, which that model uses it as input and also executes through to completion. This process can then be continued with other models, and they can be executed concurrently if there are no dependencies between their datasets.</p>
      <p>CellAK and Cellulat treat each biological pathway model as a single entity (or agent) obeying its own pre-defined rules and reacting to its environment and neighboring agents accordingly. These two approaches offers many positive ways for integrating biomolecular pathway models; however, a non-specialist has a very high learning curve in preparing a set of biological pathway models for use with this approach because the integrator has to understand deeply the biology and architecture behind them. Furthermore these tools do not use ordinary differential equations to determine the time evolution of cellular behavior, since differential equations find it difficult to model directed or local diffusion processes and sub-cellular compartmentalization and they lack the ability to deal with non-equilibrium solutions. Most common biological modeling systems use traditional ODEs to simulate the models. Finally these two approaches are not designed to perform simulations on a distributed computational environment, which CytoSolve offers.</p>
      <p>The implementation of CytoSolve to enable distributed and parallel computations across an ensemble of models also presents many new and unique challenges. Such challenges include the need to advance and optimise elements of the architecture, which particularly becomes relevant in a software implementation, which is a dynamic work in progress. These challenges have become important areas for our ongoing research, some of which are noteworthy to discuss in this manuscript.</p>
      <sec id="Sec9">
        <title>Optimization of Time Step Selection</title>
        <p>CytoSolve&#x2019;s Controller, for example, ensures mass conversation of all species in the integrated molecular network. To ensure thermodynamic feasibility, however, the detailed balance constraint, which demands that at thermodynamic equilibrium all fluxes vanish must be imposed during computational integration by the Controller.<xref ref-type="bibr" rid="CR8">8</xref> This is a subtle but important issue that CytoSolve is aware of, which becomes apparent during the Controller&#x2019;s evaluation of a common species concentration, across a set of models. To discuss by example, consider the case of two models, both with large rate constants, which share a common species, that are being communicated through the Controller. In this case, detailed balance demands that the associated species concentrations balance each other off. However, if the two opposing reactions do not communicate, the computational problems become far more difficult. Whereas, if the two competing rates net to zero the solution is stable and expressible as a simple ratio of concentrations. Segmenting the two competing rates into two separate independent pathways requires high accuracy calculations and a very small time step for the finite difference calculation to achieve a stable equilibrium meeting the requirements of detailed balance, one that will always be slightly displaced from the &#x201C;true&#x201D; equilibrium solution. We recognize that the displacement error is probably infinitesimal compared to the probable error in the reaction rates used in the calculation, but it is nonetheless a finite calculable error. The accurate and optimal selection of the time step during integration must be small to keep the error of species concentration, at each time step to an acceptable level. We are aware of this problem and are currently examining efficient ways to select time steps, by sharing information across pathways.</p>
      </sec>
      <sec id="Sec10">
        <title>Spatial Scale Variation</title>
        <p>At the present time, CytoSolve supports only computational models that represent one single pool of material or several distinct pools connected with specific transport relations. We have not considered changes in concentrations on a continuous spatial scale. We believe that the architecture, based on its modular approach and support for multiple compartments, can support varying spatial scales. However, more testing will have to be performed to understand the computation times required to fully support such spatial variations. The description language FieldML is available to support this process.</p>
      </sec>
      <sec id="Sec11">
        <title>Adaptive Time Stepping of the Controller</title>
        <p>All models are currently computed using a single adaptive time step, which is taken to be the fastest time step among the ensemble of models. This is not optimal, as some component models may be varying more slowly than others. Additional effort is required to implement intelligent adaptive time stepping at the Controller level to observe the time scales of different models and invoke them only when necessary. Such an effort will result in improved computation time performance.</p>
      </sec>
      <sec id="Sec12">
        <title>Stiffness of ODE Systems</title>
        <p>Stiffness is a common problem of ODE systems where integration of molecular pathway models may involve processes at different time scales. While adaptive time steps at the Controller level (during integration) will help towards addressing this problem, control of the ODE solver for simulation of sub-models will also be necessary. The current method within CytoSolve is to choose the time constant sufficiently small that additional decreases in the time step do not lead to different results. We are currently pursuing a more sophisticated algorithm that accounts for the different stiffness of different pathways that are being merged. This is complicated by the fact that some pathways assume a particular molecular component has a constant value whereas that component has production or removal within a parallel pathway. These interdependencies couple the time steps in novel ways. Additional work is underway to completely resolve this issue.</p>
        <sec id="Sec13">
          <title>Implementation and Integration with Emerging Ontologies</title>
          <p>The CytoSolve PID has support for integrating other ontologies such as MIRIAM; however, future research needs to be done to fully integrate MIRIAM and other such ontologies. This effort will enable CytoSolve to support many more model formats with greater ease, leveraging standards that the systems biology community globally accepts. Future work will include a more sophisticated native Ontology to manage nomenclature and species identification across all individual biological pathway models to be integrated by means of the web application, and automated searching for related biological pathways.</p>
          <p>CytoSolve is now available at <ext-link ext-link-type="uri" xlink:href="http://www.cytosolve.com">http://www.cytosolve.com</ext-link> as on-line web computational resource. We are providing access to source code on an as request basis. In such cases, we assume that the receivers of the source code are familiar with the coding language and are capable of independently updating and maintaining their revisions. The user interface of the CytoSolve system, as an ongoing research effort, continues to evolve based on feedback. On-line documentation, context-based help, tutorials, and video presentations are being added and will be updated and made available on an ongoing basis. <xref rid="Sec25" ref-type="sec">Appendix E</xref> provides the important steps for using CytoSolve.</p>
        </sec>
      </sec>
    </sec>
  </body>
  <back>
    <ack>
      <p>The author wishes to thank EchoMail, Inc., which made Dr. Ayyadurai&#x2019;s research funding possible, and the International Center for Integrative Systems for additional support during the preparation of this document.</p>
      <p><bold>Open Access</bold> This article is distributed under the terms of the Creative Commons Attribution Noncommercial License which permits any noncommercial use, distribution, and reproduction in any medium, provided the original author(s) and source are credited.</p>
    </ack>
    <ref-list id="Bib1">
      <title>References</title>
      <ref id="CR1">
        <label>1.</label>
        <mixed-citation publication-type="journal">
          <person-group person-group-type="author">
            <name>
              <surname>Aderem</surname>
              <given-names>A</given-names>
            </name>
          </person-group>
          <article-title>Systems biology: its practice and challenges</article-title>
          <source>Cell</source>
          <year>2005</year>
          <volume>121</volume>
          <fpage>511</fpage>
          <lpage>513</lpage>
          <pub-id pub-id-type="doi">10.1016/j.cell.2005.04.020</pub-id>
          <pub-id pub-id-type="pmid">15907465</pub-id>
        </mixed-citation>
      </ref>
      <ref id="CR2">
        <label>2.</label>
        <mixed-citation publication-type="book">
          <person-group person-group-type="author">
            <name>
              <surname>Andersen</surname>
              <given-names>DH</given-names>
            </name>
          </person-group>
          <source>Compartmental Modeling and Tracer Kinetics</source>
          <year>1983</year>
          <publisher-loc>Berlin</publisher-loc>
          <publisher-name>Springer</publisher-name>
        </mixed-citation>
      </ref>
      <ref id="CR3">
        <label>3.</label>
        <mixed-citation publication-type="journal">
          <person-group person-group-type="author">
            <name>
              <surname>Barth</surname>
              <given-names>M</given-names>
            </name>
            <name>
              <surname>Hennicker</surname>
              <given-names>R</given-names>
            </name>
            <name>
              <surname>Kraus</surname>
              <given-names>A</given-names>
            </name>
            <name>
              <surname>Ludwig</surname>
              <given-names>M</given-names>
            </name>
          </person-group>
          <article-title>DANUBIA: an integrative simulation system for global change research in the upper Danube basin</article-title>
          <source>Cybern Syst.</source>
          <year>2004</year>
          <volume>35</volume>
          <fpage>639</fpage>
          <lpage>666</lpage>
          <pub-id pub-id-type="doi">10.1080/01969720490499425</pub-id>
        </mixed-citation>
      </ref>
      <ref id="CR4">
        <label>4.</label>
        <mixed-citation publication-type="journal">
          <person-group person-group-type="author">
            <name>
              <surname>Bassingthwaighte</surname>
              <given-names>JB</given-names>
            </name>
            <name>
              <surname>Chizeck</surname>
              <given-names>HJ</given-names>
            </name>
            <name>
              <surname>Atlas</surname>
              <given-names>LE</given-names>
            </name>
            <name>
              <surname>Qian</surname>
              <given-names>H</given-names>
            </name>
          </person-group>
          <article-title>Multiscale modeling of cardiac cellular energetics</article-title>
          <source>Ann. N. Y. Acad. Sci.</source>
          <year>2005</year>
          <volume>1047</volume>
          <fpage>395</fpage>
          <lpage>424</lpage>
          <pub-id pub-id-type="doi">10.1196/annals.1341.035</pub-id>
          <pub-id pub-id-type="pmid">16093514</pub-id>
        </mixed-citation>
      </ref>
      <ref id="CR5">
        <label>5.</label>
        <mixed-citation publication-type="other">Brooks, F. The Mythical Man Month: Essays in Software Engineering. Addison-Wesley, 1975.</mixed-citation>
      </ref>
      <ref id="CR6">
        <label>6.</label>
        <mixed-citation publication-type="other">Christensen, E., F. Curbera, G. Meredith, and S. Weerawarana (editors). Web services description language (WSDL) 1.1. <italic>W3C Note,</italic> 2001.</mixed-citation>
      </ref>
      <ref id="CR7">
        <label>7.</label>
        <mixed-citation publication-type="book">
          <person-group person-group-type="author">
            <name>
              <surname>Eaves</surname>
              <given-names>J</given-names>
            </name>
            <name>
              <surname>Godfrey</surname>
              <given-names>W</given-names>
            </name>
            <name>
              <surname>Jones</surname>
              <given-names>R</given-names>
            </name>
          </person-group>
          <source>Apache Tomcat Bible</source>
          <year>2003</year>
          <publisher-loc>New York</publisher-loc>
          <publisher-name>John Wiley &amp; Sons</publisher-name>
        </mixed-citation>
      </ref>
      <ref id="CR8">
        <label>8.</label>
        <mixed-citation publication-type="journal">
          <person-group person-group-type="author">
            <name>
              <surname>Ederer</surname>
              <given-names>M</given-names>
            </name>
            <name>
              <surname>Gilles</surname>
              <given-names>ED</given-names>
            </name>
          </person-group>
          <article-title>Thermodynamically feasible kinetic models of reaction networks</article-title>
          <source>Biophys. J.</source>
          <year>2007</year>
          <volume>92</volume>
          <issue>6</issue>
          <fpage>1846</fpage>
          <lpage>1857</lpage>
          <pub-id pub-id-type="doi">10.1529/biophysj.106.094094</pub-id>
          <pub-id pub-id-type="pmid">17208985</pub-id>
        </mixed-citation>
      </ref>
      <ref id="CR9">
        <label>9.</label>
        <mixed-citation publication-type="journal">
          <person-group person-group-type="author">
            <name>
              <surname>Gonzalez</surname>
              <given-names>PP</given-names>
            </name>
            <etal/>
          </person-group>
          <article-title>Cellulat: an agent-based intracellular signaling model</article-title>
          <source>Biosystems</source>
          <year>2003</year>
          <volume>68</volume>
          <issue>2&#x2013;3</issue>
          <fpage>171</fpage>
          <lpage>185</lpage>
          <pub-id pub-id-type="doi">10.1016/S0303-2647(02)00094-1</pub-id>
          <pub-id pub-id-type="pmid">12595116</pub-id>
        </mixed-citation>
      </ref>
      <ref id="CR10">
        <label>10.</label>
        <mixed-citation publication-type="journal">
          <person-group person-group-type="author">
            <name>
              <surname>Hood</surname>
              <given-names>L</given-names>
            </name>
            <name>
              <surname>Heath</surname>
              <given-names>JR</given-names>
            </name>
            <name>
              <surname>Phelps</surname>
              <given-names>ME</given-names>
            </name>
            <name>
              <surname>Lin</surname>
              <given-names>B</given-names>
            </name>
          </person-group>
          <article-title>Systems biology and new technologies enable predictive and preventative medicine</article-title>
          <source>Science</source>
          <year>2004</year>
          <volume>306</volume>
          <fpage>640</fpage>
          <lpage>643</lpage>
          <pub-id pub-id-type="doi">10.1126/science.1104635</pub-id>
          <pub-id pub-id-type="pmid">15499008</pub-id>
        </mixed-citation>
      </ref>
      <ref id="CR11">
        <label>11.</label>
        <mixed-citation publication-type="journal">
          <person-group person-group-type="author">
            <name>
              <surname>Hucka</surname>
              <given-names>M</given-names>
            </name>
            <etal/>
          </person-group>
          <article-title>The systems biology markup language (SBML): a medium for representation and exchange of biochemical network models</article-title>
          <source>Bioinformatics</source>
          <year>2003</year>
          <volume>19</volume>
          <fpage>524</fpage>
          <lpage>531</lpage>
          <pub-id pub-id-type="doi">10.1093/bioinformatics/btg015</pub-id>
          <pub-id pub-id-type="pmid">12611808</pub-id>
        </mixed-citation>
      </ref>
      <ref id="CR12">
        <label>12.</label>
        <mixed-citation publication-type="journal">
          <person-group person-group-type="author">
            <name>
              <surname>Hunter</surname>
              <given-names>P</given-names>
            </name>
            <name>
              <surname>Smith</surname>
              <given-names>N</given-names>
            </name>
            <name>
              <surname>Fernandez</surname>
              <given-names>J</given-names>
            </name>
            <name>
              <surname>Tawhai</surname>
              <given-names>M</given-names>
            </name>
          </person-group>
          <article-title>Integration from proteins to organs: the IUPS Physiome Project</article-title>
          <source>Mech. Ageing Dev.</source>
          <year>2005</year>
          <volume>126</volume>
          <fpage>187</fpage>
          <lpage>192</lpage>
          <pub-id pub-id-type="doi">10.1016/j.mad.2004.09.025</pub-id>
          <pub-id pub-id-type="pmid">15610778</pub-id>
        </mixed-citation>
      </ref>
      <ref id="CR13">
        <label>13.</label>
        <mixed-citation publication-type="journal">
          <person-group person-group-type="author">
            <name>
              <surname>Ideker</surname>
              <given-names>T</given-names>
            </name>
            <name>
              <surname>Lauffenburger</surname>
              <given-names>D</given-names>
            </name>
          </person-group>
          <article-title>Building with a scaffold: emerging strategies for high- to low-level cellular modeling</article-title>
          <source>Trends Biotechnol.</source>
          <year>2003</year>
          <volume>21</volume>
          <issue>6</issue>
          <fpage>255</fpage>
          <lpage>262</lpage>
          <pub-id pub-id-type="doi">10.1016/S0167-7799(03)00115-X</pub-id>
          <pub-id pub-id-type="pmid">12788545</pub-id>
        </mixed-citation>
      </ref>
      <ref id="CR14">
        <label>14.</label>
        <mixed-citation publication-type="journal">
          <person-group person-group-type="author">
            <name>
              <surname>Kholodenko</surname>
              <given-names>BN</given-names>
            </name>
            <name>
              <surname>Demin</surname>
              <given-names>OV</given-names>
            </name>
            <name>
              <surname>Moehren</surname>
              <given-names>G</given-names>
            </name>
            <name>
              <surname>Hoek</surname>
              <given-names>JB</given-names>
            </name>
          </person-group>
          <article-title>Quantification of short term signaling by the epidermal growth factor receptor</article-title>
          <source>J. Biol. Chem.</source>
          <year>1999</year>
          <volume>274</volume>
          <fpage>30169</fpage>
          <lpage>30181</lpage>
          <pub-id pub-id-type="doi">10.1074/jbc.274.42.30169</pub-id>
          <pub-id pub-id-type="pmid">10514507</pub-id>
        </mixed-citation>
      </ref>
      <ref id="CR15">
        <label>15.</label>
        <mixed-citation publication-type="journal">
          <person-group person-group-type="author">
            <name>
              <surname>Kitano</surname>
              <given-names>H</given-names>
            </name>
          </person-group>
          <article-title>Computational systems biology</article-title>
          <source>Nature</source>
          <year>2002</year>
          <volume>420</volume>
          <fpage>206</fpage>
          <lpage>210</lpage>
          <pub-id pub-id-type="doi">10.1038/nature01254</pub-id>
          <pub-id pub-id-type="pmid">12432404</pub-id>
        </mixed-citation>
      </ref>
      <ref id="CR16">
        <label>16.</label>
        <mixed-citation publication-type="journal">
          <person-group person-group-type="author">
            <name>
              <surname>Kitano</surname>
              <given-names>H</given-names>
            </name>
            <name>
              <surname>Funahashi</surname>
              <given-names>A</given-names>
            </name>
            <name>
              <surname>Matsuoka</surname>
              <given-names>Y</given-names>
            </name>
            <name>
              <surname>Oda</surname>
              <given-names>K</given-names>
            </name>
          </person-group>
          <article-title>Using process diagrams for the graphical representation of biological networks</article-title>
          <source>Nat. Biotechnol.</source>
          <year>2005</year>
          <volume>23</volume>
          <issue>8</issue>
          <fpage>961</fpage>
          <lpage>966</lpage>
          <pub-id pub-id-type="doi">10.1038/nbt1111</pub-id>
          <pub-id pub-id-type="pmid">16082367</pub-id>
        </mixed-citation>
      </ref>
      <ref id="CR17">
        <label>17.</label>
        <mixed-citation publication-type="journal">
          <person-group person-group-type="author">
            <name>
              <surname>Le Nov&#xE8;re</surname>
              <given-names>N</given-names>
            </name>
            <etal/>
          </person-group>
          <article-title>BioModels Database: a free, centralized database of curated, published, quantitative kinetic models of biochemical and cellular systems</article-title>
          <source>Nucleic Acids Res.</source>
          <year>2006</year>
          <volume>34</volume>
          <issue>suppl 1</issue>
          <fpage>D689</fpage>
          <lpage>D691</lpage>
          <pub-id pub-id-type="doi">10.1093/nar/gkj092</pub-id>
          <pub-id pub-id-type="pmid">16381960</pub-id>
        </mixed-citation>
      </ref>
      <ref id="CR18">
        <label>18.</label>
        <mixed-citation publication-type="journal">
          <person-group person-group-type="author">
            <name>
              <surname>Le Nov&#xE8;re</surname>
              <given-names>N</given-names>
            </name>
            <etal/>
          </person-group>
          <article-title>Minimum information requested in the annotation of biochemical models (MIRIAM)</article-title>
          <source>Nat. Biotechnol.</source>
          <year>2007</year>
          <volume>23</volume>
          <fpage>1509</fpage>
          <lpage>1515</lpage>
          <pub-id pub-id-type="doi">10.1038/nbt1156</pub-id>
        </mixed-citation>
      </ref>
      <ref id="CR19">
        <label>19.</label>
        <mixed-citation publication-type="other">Liang, S. The Java Native Interface. Addison-Wesley, 1999.</mixed-citation>
      </ref>
      <ref id="CR20">
        <label>20.</label>
        <mixed-citation publication-type="journal">
          <person-group person-group-type="author">
            <name>
              <surname>Machne</surname>
              <given-names>R</given-names>
            </name>
            <etal/>
          </person-group>
          <article-title>The SBML ODE Solver Library: a native API for symbolic and fast numerical analysis of reaction networks</article-title>
          <source>Bioinformatics</source>
          <year>2006</year>
          <volume>22</volume>
          <fpage>1406</fpage>
          <lpage>1407</lpage>
          <pub-id pub-id-type="doi">10.1093/bioinformatics/btl086</pub-id>
          <pub-id pub-id-type="pmid">16527832</pub-id>
        </mixed-citation>
      </ref>
      <ref id="CR21">
        <label>21.</label>
        <mixed-citation publication-type="journal">
          <person-group person-group-type="author">
            <name>
              <surname>Mendes</surname>
              <given-names>P</given-names>
            </name>
            <etal/>
          </person-group>
          <article-title>Computational modeling of biochemical networks using COPASI</article-title>
          <source>Methods Mol. Biol.</source>
          <year>2009</year>
          <volume>500</volume>
          <fpage>17</fpage>
          <lpage>59</lpage>
          <pub-id pub-id-type="pmid">19399433</pub-id>
        </mixed-citation>
      </ref>
      <ref id="CR22">
        <label>22.</label>
        <mixed-citation publication-type="journal">
          <person-group person-group-type="author">
            <name>
              <surname>Palsson</surname>
              <given-names>BO</given-names>
            </name>
            <name>
              <surname>Price</surname>
              <given-names>ND</given-names>
            </name>
            <name>
              <surname>Papin</surname>
              <given-names>JA</given-names>
            </name>
          </person-group>
          <article-title>Development of network-based pathway definitions: the need to analyze real metabolic networks</article-title>
          <source>Trends Biotechnol.</source>
          <year>2003</year>
          <volume>21</volume>
          <fpage>195</fpage>
          <lpage>198</lpage>
          <pub-id pub-id-type="doi">10.1016/S0167-7799(03)00080-5</pub-id>
          <pub-id pub-id-type="pmid">12727379</pub-id>
        </mixed-citation>
      </ref>
      <ref id="CR23">
        <label>23.</label>
        <mixed-citation publication-type="journal">
          <person-group person-group-type="author">
            <name>
              <surname>Pillai</surname>
              <given-names>S</given-names>
            </name>
            <etal/>
          </person-group>
          <article-title>SOAP-based services provided by the European Bioinformatics Institute</article-title>
          <source>Nucleic Acids Res.</source>
          <year>2005</year>
          <volume>33</volume>
          <fpage>W25</fpage>
          <lpage>W28</lpage>
          <pub-id pub-id-type="doi">10.1093/nar/gki491</pub-id>
          <pub-id pub-id-type="pmid">15980463</pub-id>
        </mixed-citation>
      </ref>
      <ref id="CR24">
        <label>24.</label>
        <mixed-citation publication-type="other">Schulz, M., J. Uhlendorf, E. Klipp, and W. Liebermeister. SBMLmerge, a system for combining biochemical network models. <italic>Genome Inform.</italic> 17(1):62&#x2013;71, 2006.</mixed-citation>
      </ref>
      <ref id="CR25">
        <label>25.</label>
        <mixed-citation publication-type="journal">
          <person-group person-group-type="author">
            <name>
              <surname>Snoep</surname>
              <given-names>JL</given-names>
            </name>
            <name>
              <surname>Bruggeman</surname>
              <given-names>F</given-names>
            </name>
            <name>
              <surname>Olivier</surname>
              <given-names>BG</given-names>
            </name>
            <name>
              <surname>Westerhoff</surname>
              <given-names>HV</given-names>
            </name>
          </person-group>
          <article-title>Towards building the silicon cell: a modular approach</article-title>
          <source>Biosystems</source>
          <year>2006</year>
          <volume>83</volume>
          <fpage>207</fpage>
          <lpage>216</lpage>
          <pub-id pub-id-type="doi">10.1016/j.biosystems.2005.07.006</pub-id>
          <pub-id pub-id-type="pmid">16242236</pub-id>
        </mixed-citation>
      </ref>
      <ref id="CR26">
        <label>26.</label>
        <mixed-citation publication-type="journal">
          <person-group person-group-type="author">
            <name>
              <surname>Tomita</surname>
              <given-names>M</given-names>
            </name>
            <etal/>
          </person-group>
          <article-title>E-CELL: software environment for whole-cell simulation</article-title>
          <source>Bioinformatics</source>
          <year>1999</year>
          <volume>15</volume>
          <fpage>72</fpage>
          <lpage>84</lpage>
          <pub-id pub-id-type="doi">10.1093/bioinformatics/15.1.72</pub-id>
          <pub-id pub-id-type="pmid">10068694</pub-id>
        </mixed-citation>
      </ref>
      <ref id="CR27">
        <label>27.</label>
        <mixed-citation publication-type="other">Vangheluwe, H. DEVS as a common denominator for multi-formalism hybrid modeling. In: Proceedings of the IEEE International Symposium on Computer Aided Control System Design, 2000, pp. 129&#x2013;134.</mixed-citation>
      </ref>
      <ref id="CR28">
        <label>28.</label>
        <mixed-citation publication-type="journal">
          <person-group person-group-type="author">
            <name>
              <surname>Webb</surname>
              <given-names>K</given-names>
            </name>
            <name>
              <surname>White</surname>
              <given-names>T</given-names>
            </name>
          </person-group>
          <article-title>UML as a cell and biochemistry modeling language</article-title>
          <source>Biosystems</source>
          <year>2005</year>
          <volume>80</volume>
          <fpage>283</fpage>
          <lpage>302</lpage>
          <pub-id pub-id-type="doi">10.1016/j.biosystems.2004.12.003</pub-id>
          <pub-id pub-id-type="pmid">15888343</pub-id>
        </mixed-citation>
      </ref>
      <ref id="CR29">
        <label>29.</label>
        <mixed-citation publication-type="journal">
          <person-group person-group-type="author">
            <name>
              <surname>Zeigler</surname>
              <given-names>B</given-names>
            </name>
          </person-group>
          <article-title>Hierarchical modular discrete-event modelling in an object-oriented environment</article-title>
          <source>Simulation</source>
          <year>1987</year>
          <volume>49</volume>
          <fpage>219</fpage>
          <lpage>230</lpage>
          <pub-id pub-id-type="doi">10.1177/003754978704900506</pub-id>
        </mixed-citation>
      </ref>
    </ref-list>
    <app-group>
      <app id="App1">
        <sec id="Sec14">
          <title>Appendix A</title>
          <sec id="Sec15">
            <title>Theoretical Framework and Conditions for Integrating Multiple Molecular Pathway Models</title>
            <p>This Appendix provides the theoretical framework and the conditions upon which integrating an ensemble of molecular pathway models, {<bold>M</bold><sub><bold>i</bold></sub>} (for <italic>i</italic>&#xA0;=&#xA0;1 to <italic>D</italic>) yields the dynamically integrated solution <bold>O</bold> is possible.</p>
            <p>This theoretical framework is based on the Discrete EVent system Specification (DEVS) as introduced by Ziegler for a rigorous basis for discrete-event modeling and simulation.<xref ref-type="bibr" rid="CR27">27</xref>,<xref ref-type="bibr" rid="CR29">29</xref> DEVS allows for the description of system behavior at two levels. At the lower level, an <italic>atomic DEVS</italic> describes the autonomous behavior of a discrete-event system as a sequence of deterministic transitions between sequential states as well as how it reacts to external input events and how it generates output events; and, at the higher level, a <italic>coupled DEVS</italic> describes a system as a <italic>network</italic> of coupled components.<xref ref-type="bibr" rid="CR27">27</xref></p>
            <p>The integrated model <bold>O</bold>, composed of an ensemble of molecular pathway models, using the DEVS framework is the same as a coupled DEVS<xref ref-type="bibr" rid="CR29">29</xref> and is described as:<disp-formula id="Equ3"><label>A1</label><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {\text{coupled}}\,\,{\text{DEVS}} \equiv {\mathbf{O}} \equiv &lt; {\mathbf{X}}_{{\mathbf{o}}} ,{\mathbf{Y}}_{{\mathbf{o}}} ,{\mathbf{D}},\{ {\mathbf{M}}_{{\mathbf{i}}} \} &gt; $$\end{document}</tex-math><graphic xlink:href="12195_2010_143_Article_Equ3.gif" position="anchor"/></alternatives></disp-formula></p>
            <p>As a coupled DEVS may have coupled DEVS components or integrated molecular models may have integrated molecular models, <italic>hierarchical</italic> modeling is supported using this framework.<xref ref-type="bibr" rid="CR27">27</xref><bold>X</bold><sub><bold>o</bold></sub> is the set of allowed inputs to the integrated or coupled model <bold>O</bold>. <bold>Y</bold><sub><bold>o</bold></sub> is the set of allowed outputs of the integrated model <bold>O</bold>. <bold>D</bold> is a set of unique component references (names); in this case, it is the list of the names or references to each molecular pathway model. The set of <italic>components</italic> is the ensemble of molecular pathway models is {<bold>M</bold><sub>i</sub>|i&#xA0;&#x2208;&#xA0;<bold>D</bold>} and is defined using the atomic DEVS formalism as:<disp-formula id="Equ4"><label>A2</label><alternatives><tex-math id="M4">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {\mathbf{M}}_{{\mathbf{i}}} = &lt;{\mathbf{Q}}_{{\mathbf{i}}} ,{\text{t}}_{{{\text{a}},{\text{i}}}} \;{\varvec{\delta}}_{{{\text{int}},{\text{i}},}} \;{\mathbf{X}}_{{{\mathbf{i}},}} \;{\varvec{\delta}}_{{{\text{ext}},{\text{i}}}} ,{\mathbf{Y}}_{{\mathbf{i}}} ,{\varvec{\lambda}}_{{\mathbf{i}}} &gt;,\forall \in {\mathbf{D}} $$\end{document}</tex-math><graphic xlink:href="12195_2010_143_Article_Equ4.gif" position="anchor"/></alternatives></disp-formula></p>
            <p>In Eq. (<xref rid="Equ3" ref-type="">A1</xref>), the <italic>time base T</italic> is continuous (=&#x211C;) and is not mentioned explicitly. The state set <bold><italic>Q</italic></bold><sub><bold><italic>i</italic></bold></sub> is the set of admissible <italic>sequential states</italic>: the DEVS dynamics consists of an ordered sequence of states from <bold><italic>Q</italic></bold> for each model <italic>i</italic> within the ensemble. Typically, <bold><italic>Q</italic></bold><sub><bold><italic>i</italic></bold></sub> will be a <italic>structured</italic> set (a product set) <bold><italic>Q</italic></bold><sub><bold><italic>i</italic></bold></sub>&#xA0;=&#xA0;&#xD7;<sub arrange="stack"><italic>j</italic>=1</sub><sup arrange="stack"><italic>p</italic></sup><italic>Q</italic><sub><italic>i,j</italic></sub>. This formalizes the multiple (<italic>p</italic>) <italic>concurrent</italic> parts of a system.</p>
            <p>The time the system <italic>remains</italic> in a sequential state before making a transition to the next sequential state is modeled by the <italic>time advance function</italic>: <inline-formula id="IEq1"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ t_{a,i} :Q_{i} \to \Re_{0,\infty }^{ + } , $$\end{document}</tex-math><inline-graphic xlink:href="12195_2010_143_Article_IEq1.gif"/></alternatives></inline-formula> denoting that <italic>t</italic><sub><italic>a,i</italic></sub> be non-negative numbers. This time advance function can be used to define the time step of a particular model.</p>
            <p>The internal transition function for any model <italic>i</italic>, <inline-formula id="IEq2"><alternatives><tex-math id="M6">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \delta_{{\text{int} ,i}} :Q_{i} \to Q_{i} $$\end{document}</tex-math><inline-graphic xlink:href="12195_2010_143_Article_IEq2.gif"/></alternatives></inline-formula> is used to describe the transition from one state to the next sequential state and describes the behaviour of a finite state automaton, where the <italic>t</italic><sub>a,i</sub> adds the progression of time, or during computation the advance in time, by the time step.</p>
            <p>The input to any model <italic>i</italic> is denoted as <bold>X</bold><sub>i</sub>. This input will be a <italic>structured</italic> set (a product set) <inline-formula id="IEq3"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \user2{X} = \times_{j = 1}^{m} X_{i,j} . $$\end{document}</tex-math><inline-graphic xlink:href="12195_2010_143_Article_IEq3.gif"/></alternatives></inline-formula> This formalizes multiple (<italic>m</italic>) input ports. Each port is identified by its unique index <italic>j</italic>. For each molecular model <italic>i</italic>, each <italic>j</italic> denotes a particular species of the molecular model.</p>
            <p>The external transition function <italic>&#x3B4;</italic><sub><italic>ext</italic>,<italic>i</italic></sub> allows for the description of a large class of behaviors typically found in discrete-event models (including synchronization, preemption, suspension, and re-activation).</p>
            <p>The output from any model <italic>i</italic> is denoted as <bold>Y</bold><sub><bold>i</bold></sub>. This output will be a <italic>structured</italic> set (a product set) <inline-formula id="IEq4"><alternatives><tex-math id="M8">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \user2{Y} = \times_{j = 1}^{l} Y_{i,j} . $$\end{document}</tex-math><inline-graphic xlink:href="12195_2010_143_Article_IEq4.gif"/></alternatives></inline-formula> This formalizes multiple (<italic>l</italic>) output ports. Each port is identified by its unique index <italic>j</italic>, with each <italic>j</italic> denoting a particular species of the molecular model <italic>i</italic>.</p>
            <p>The output function <inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \lambda_{i} :Q_{i} \to Y_{i} \cup \left. {\left\{ \emptyset \right.} \right\} $$\end{document}</tex-math><inline-graphic xlink:href="12195_2010_143_Article_IEq5.gif"/></alternatives></inline-formula> maps the internal state onto the output <bold>Y</bold><sub><bold>i</bold></sub>. A model <italic>i</italic> only generates output events at the time of an <italic>internal</italic> transition. At that time, the state <italic>before</italic> the transition is used as input to &#x3BB;<sub>i</sub>. For a particular model <italic>i</italic>, &#x3BB;<sub>i</sub> represents the internal mathematical model, the ODE&#x2019;s for that particular model <italic>i</italic>, for example.</p>
            <p>Based on the DEVS formalism, we now seek to formulate a mathematical description of the dynamically integrated model <bold>O</bold>, as described in Eq. (<xref rid="Equ3" ref-type="">A1</xref>), as a function of all possible states of molecular species at all times. To perform this formulation, from the DEV formalism, we allow <bold>X</bold><sub><bold>o</bold></sub> and <bold>Y</bold><sub><bold>o</bold></sub>, the input and output to the integrated model, respectively to be mapped as follows:<disp-formula id="Equa"><alternatives><tex-math id="M10">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {\user2{x}}_{{\user2{r}}} \equiv {\user2{X}}_{{{\user2{o,}}}} \quad {\text{and}}\quad \user2{x} \equiv {\mathbf{Y}}_{{\mathbf{o}}} $$\end{document}</tex-math><graphic xlink:href="12195_2010_143_Article_Equa.gif" position="anchor"/></alternatives></disp-formula>and the total number of input and output ports, <italic>m</italic> and <italic>l</italic>, is set to <italic>C</italic>, the total number of species within the integrated model such that <italic>m</italic>&#xA0;=&#xA0;<italic>l</italic>&#xA0;=&#xA0;<italic>C.</italic> The input, <bold><italic>x</italic></bold><sub><bold><italic>r</italic></bold></sub> is a vector of the species concentrations of species at time <italic>t</italic>&#xA0;=&#xA0;<italic>n</italic>, the state before the reaction occurs<disp-formula id="Equ5"><label>A3</label><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \user2{x}_{\user2{r}} = \left( {x_{r1} ,x_{r2} , \ldots ,x_{rC} } \right)^{T} $$\end{document}</tex-math><graphic xlink:href="12195_2010_143_Article_Equ5.gif" position="anchor"/></alternatives></disp-formula></p>
            <p>The output, <bold>x</bold> is a vector of the species concentrations at time <italic>t</italic>&#xA0;=&#xA0;<italic>n</italic>&#xA0;+&#xA0;1, after the reaction occurs or after the execution of the internal model calculation <italic>&#x3BB;</italic> (per the DEVS formalism).<disp-formula id="Equ6"><label>A4</label><alternatives><tex-math id="M12">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \user2{x} = \left( {x_{1} ,x_{2} , \ldots ,x_{C} } \right) $$\end{document}</tex-math><graphic xlink:href="12195_2010_143_Article_Equ6.gif" position="anchor"/></alternatives></disp-formula></p>
            <p>The internal model calculation <italic>&#x3BB;</italic> is denoted by <bold>w</bold><sub><bold>r</bold></sub>(<bold>x</bold><sub><bold>r</bold></sub>) which represents the propensity of the chemical reaction, as illustrated below:<disp-formula id="Equ7"><label>A5</label><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \user2{x}_{\user2{r}} \mathop{\longrightarrow}\limits^{{w_{r} \left( {x_{r} } \right)}}\user2{x} $$\end{document}</tex-math><graphic xlink:href="12195_2010_143_Article_Equ7.gif" position="anchor"/></alternatives></disp-formula></p>
            <p>The following assumptions are made on the system (e.g. cell or compartment) where such a reaction takes place:<list list-type="order"><list-item><p>The system is assumed to be <italic>well</italic>-<italic>mixed</italic>. Well-mixed means that a sufficiently long-time between reaction collisions takes place to ensure that each pair of molecules is equally likely to be the next to collide. This also means that the concentration of each species is high and transport essentially instantaneous.</p></list-item><list-item><p>The progress of the system only depends on previous state (e.g. Markov process).</p></list-item><list-item><p>Between cells and compartments, transport is slower and associated with an observable rate.</p></list-item></list></p>
            <p>Based on the above assumptions, <italic>p</italic>(<bold><italic>x</italic></bold>, <italic>t</italic>), the probability at time <italic>t</italic> that the species are in state <bold>x</bold> can be represented as:<disp-formula id="Equ8"><label>A6</label><alternatives><tex-math id="M14">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {\frac{dp(x,t)}{dt}} = \sum\limits_{r = 1}^{R} {w_{r} (x_{r} )p(x_{r} ,t)} - \sum\limits_{r = 1}^{R} {w_{r} (x)p(x,t)} $$\end{document}</tex-math><graphic xlink:href="12195_2010_143_Article_Equ8.gif" position="anchor"/></alternatives></disp-formula>where p(<bold>x</bold><sub><bold>r</bold></sub>, t) is the probability of state change to <bold>x</bold>; <italic>w</italic><sub><italic>r</italic></sub>(<italic>x</italic>) is the propensity of no reaction occurring</p>
            <p>Equation (<xref rid="Equ8" ref-type="">A6</xref>) is known as the classic Chemical Master Equation (CME).<xref ref-type="bibr" rid="CR2">2</xref> For integrating an ensemble of molecular pathway models, {<bold>M</bold><sub><bold>i</bold></sub>}, the above formulation is valid as long as the following conditions hold:<list list-type="order"><list-item><p>Each molecular pathway model can be treated as a <italic>black box</italic> as long as we assume that system is well-mixed</p></list-item><list-item><p>The inputs and outputs for each biological pathway model represent the state at times <italic>n</italic> and <italic>n</italic>&#xA0;+&#xA0;1, respectively.</p></list-item><list-item><p>Changes in localization are represented by <italic>compartments</italic> and species are defined by their compartments, e.g. <bold>Ca</bold><sup><bold>++</bold></sup> within the Golgi or <bold>Ca</bold><sup><bold>++</bold></sup> in the Cytosol, or <bold>Ca</bold><sup><bold>++</bold></sup> in the extracellular fluid</p></list-item><list-item><p>Species can move within these compartments freely</p></list-item><list-item><p>Species can inhabit one or more compartments, but the laws governing the transition from one location to another must be specified.</p></list-item></list></p>
          </sec>
        </sec>
        <sec id="Sec16">
          <title>Appendix B</title>
          <sec id="Sec17">
            <title>Structure of the Solution Storage and Formulation of the Integrated Solution</title>
            <p>This Appendix provides the internal details of what is contained in the Solution Store and the Mass Balance Formulation. There are two key items in this Solution Store: the <italic>Local Vector</italic> and <italic>Global Vector.</italic></p>
            <sec id="Sec18">
              <title>Local Vector</title>
              <p>As previously stated a model <bold>M</bold> is treated as a black box. It receives an input, performs a calculation and sends an output. The input of a model, <bold>M</bold>, is a vector containing the concentration values of the all molecular <italic>species</italic> at time step <italic>n</italic> and is formally denoted as:<disp-formula id="Equ9"><label>B1</label><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ S_{M,n}^{j,i} $$\end{document}</tex-math><graphic xlink:href="12195_2010_143_Article_Equ9.gif" position="anchor"/></alternatives></disp-formula>where <italic>i</italic> references a model with <italic>i</italic>&#xA0;<italic>=</italic>&#xA0;1 to <italic>D</italic>, with <italic>D</italic> being the total number of models; <italic>j</italic> references a molecular <italic>species</italic> with <italic>j</italic>&#xA0;=&#xA0;1 to <italic>C</italic>, with <italic>C</italic> being the total number of unique molecular species across the union of <bold>all</bold> models <bold>M</bold>. Any one model may only utilize a subset of those <italic>C</italic> species; and, <italic>n</italic> references the time step with <italic>n</italic>&#xA0;=&#xA0;0 to <italic>N</italic>&#xA0;&#x2212;&#xA0;1, where <italic>N</italic> being total number of time steps.</p>
              <p>The output of a model, <bold>M</bold>, is a vector containing the concentration values of the all molecular <italic>species</italic> at time step <italic>n</italic>&#xA0;+&#xA0;1 and is formally denoted as:</p>
              <p>The output of a model, <bold>M</bold>, is a vector containing the concentration values of the all molecular <italic>species</italic> at time step <italic>n</italic>&#xA0;+&#xA0;1 and is formally denoted as:<disp-formula id="Equ10"><label>B2</label><alternatives><tex-math id="M16">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ S_{M,n + 1}^{j,i} $$\end{document}</tex-math><graphic xlink:href="12195_2010_143_Article_Equ10.gif" position="anchor"/></alternatives></disp-formula></p>
              <p>Based on (B1) and (B2), we define the <italic>Local Vector</italic>, for a model <italic>i</italic> to be the computational store of the species concentration values across all the molecular species (<italic>i</italic>&#xA0;=&#xA0;1 to C), across all time steps (<italic>n</italic>&#xA0;=&#xA0;0 to <italic>N</italic>&#xA0;&#x2212;&#xA0;1). Figure&#xA0;<xref rid="Fig9" ref-type="fig">9</xref>a illustrates the Local Vectors for <italic>D</italic> number of models. Each row of the Local Vector contains a species concentration value, denote by <italic>[]</italic>, for each species, used in that Model, <italic>i</italic>. If a Model does not use one of the species, the value will be zero for that species.<fig id="Fig9"><label>Figure&#xA0;9</label><caption><p>Local vectors and global vector solution store. There are D local vectors and one global vector</p></caption><graphic position="anchor" xlink:href="12195_2010_143_Fig9_HTML" id="MO20"/></fig></p>
            </sec>
            <sec id="Sec19">
              <title>Global Vector</title>
              <p>CytoSolve&#x2019;s goal is to integrate or couple the computations of all the Models and dynamically compute the integrated model, <bold><italic>O</italic></bold>, as previously defined in Appendix A. The <italic>integrated solution</italic> for <bold><italic>O</italic></bold> is denoted as:<disp-formula id="Equ11"><label>B3</label><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ S_{O,n}^{j} $$\end{document}</tex-math><graphic xlink:href="12195_2010_143_Article_Equ11.gif" position="anchor"/></alternatives></disp-formula>where as before <italic>j</italic> references a molecular <italic>species</italic> with <italic>j</italic>&#xA0;=&#xA0;1 to C, with <italic>C</italic> being the total number of unique molecular species across the union of <bold>all</bold> models <bold>M</bold>; and, <italic>n</italic> references the time step with <italic>n</italic>&#xA0;=&#xA0;0 to <italic>N</italic>&#xA0;<italic>&#x2212;</italic>&#xA0;1, where <italic>N</italic> being total number of time steps<italic>.</italic></p>
              <p>The integrated solution is stored as shown in Fig.&#xA0;<xref rid="Fig9" ref-type="fig">9</xref>b. Each row of the Global Vector is computed using the <italic>formulation of the integrated solution.</italic></p>
            </sec>
            <sec id="Sec20">
              <title>Formulation of the Integrated Solution</title>
              <p>This formulation is used to compute the integrated solution denoted in (B3). At each time step, each Model will have receive an input <bold>S</bold><sub>M,<italic>n</italic></sub> and produce an output <bold>S</bold><sub>M,<italic>n</italic>+1</sub>. Since mass must be conserved, for each species <italic>j</italic>, the formulation calculates the production and consumption of species <italic>j</italic>, across all Models by:<disp-formula id="Equ12"><label>B4</label><alternatives><tex-math id="M18">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \sum\limits_{i = 1}^{D} {(S_{M,n}^{j,i} - S_{M,n + 1}^{j,i} )} $$\end{document}</tex-math><graphic xlink:href="12195_2010_143_Article_Equ12.gif" position="anchor"/></alternatives></disp-formula></p>
              <p>The integrated solution, at each time step <italic>n</italic>, for each species <italic>j</italic>, is evaluated as:<disp-formula id="Equ13"><label>B5</label><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ S_{O,n + 1}^{j} = S_{O,n}^{j} + \sum\limits_{i = 1}^{D} {\left( {S_{M,n}^{j,i} - S_{M,n + 1}^{j,i} } \right)} $$\end{document}</tex-math><graphic xlink:href="12195_2010_143_Article_Equ13.gif" position="anchor"/></alternatives></disp-formula></p>
              <p>At <italic>n</italic>&#xA0;=&#xA0;0, the initial conditions are such that for all species:<disp-formula id="Equ14"><label>B6</label><alternatives><tex-math id="M20">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ S_{M,0}^{j} = S_{O,0}^{j} $$\end{document}</tex-math><graphic xlink:href="12195_2010_143_Article_Equ14.gif" position="anchor"/></alternatives></disp-formula></p>
              <p>At each time step <italic>n</italic>, the Controller computes the Local Vectors for each Model. Equation (<xref rid="Equ13" ref-type="">B5</xref>) is then used to compute the Global Vector at each time step <italic>n</italic> for each species <italic>j</italic>.</p>
            </sec>
          </sec>
        </sec>
        <sec id="Sec21">
          <title>Appendix C</title>
          <sec id="Sec22">
            <title>Structure of the Ontology Store</title>
            <p>CytoSolve allows new models to be added to an ensemble through its <italic>ontology</italic>. Currently, the ontology is rudimentary using an ASCII file system. One set of files, in a <italic>Pathway Interface Document</italic> (<italic>PID</italic>) format, stores data on the specifics of each model. Another file contains a list of <italic>Unique Identifiers</italic> for resolving species name conflicts across models. During model registration, a PID file is created for each model. The format of the PID is show in Table&#xA0;<xref rid="Tab2" ref-type="table">2</xref>.<table-wrap id="Tab2"><label>Table&#xA0;2</label><caption><p>Basic ontology PID format</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Name of variable</th><th align="left">Meaning</th></tr></thead><tbody><tr><td align="left">ModelName</td><td align="left">The unique name of the model</td></tr><tr><td align="left">ModelURL</td><td align="left">The location on the Internet where the model executable code resides</td></tr><tr><td align="left">Species</td><td align="left">The number of species in the model</td></tr><tr><td align="left">Species 1, Loc</td><td align="left">The name of the first species (as used in the Model) and its location ID</td></tr><tr><td align="left">Species 2, Loc</td><td align="left">The name of the second species (as used in the Model) and its location ID.</td></tr><tr><td align="left">&#x2026;</td><td align="left">&#x2026;</td></tr><tr><td align="left">Species n, Loc</td><td align="left">The name of the nth species (as used in the Model) and its location ID</td></tr></tbody></table></table-wrap></p>
            <p>In Fig.&#xA0;<xref rid="Fig10" ref-type="fig">10</xref> is a picture of an example PID file for a model called Model 1. The Loc is the location ID denoting which compartments the species appears in the cell. The species STAT1, for example, can appear in two locations. Loc ID &#x201C;1&#x201D; may denote the nucleus and Loc ID &#x201C;2&#x201D; may denote the mitochondrion,<italic> etc</italic>. Species need to be distinguished by their location. The MIRIAM standard was published which serves to provide a framework for model developers to provide a minimal set of information for defining biochemical models.<xref ref-type="bibr" rid="CR18">18</xref> Our basic ontology can take advantage of this emerging standard. Each model when it registers itself to be part of an ensemble creates a PID file.<fig id="Fig10"><label>Figure&#xA0;10</label><caption><p>PID File example for storing CytoSolve&#x2019;s representation of simple biological pathway model</p></caption><graphic position="anchor" xlink:href="12195_2010_143_Fig10_HTML" id="MO25"/></fig></p>
            <p>There are some interesting challenges that can take place during registration of two different models. One example is if two species names are assigned the same name but mean something different or two species names are assigned different names but mean the same thing. The creators of SBMLMerge<xref ref-type="bibr" rid="CR24">24</xref> have identified this as a problem in the implementation of their tool to support semi-automatic source code merging of SBML model files. CytoSolve, includes as as a part of the basic ontology, a file containing a list of Unique Identifiers for mapping Unique Identifier # with a Species Name. This file is like a thesaurus. An example is shown in Table&#xA0;<xref rid="Tab3" ref-type="table">3</xref>.<table-wrap id="Tab3"><label>Table&#xA0;3</label><caption><p>Unique Identifier file example</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Unique Identifier #</th><th align="left">Synonym</th></tr></thead><tbody><tr><td align="left">11231</td><td align="left">Ca</td></tr><tr><td align="left">11231</td><td align="left">Calcium</td></tr><tr><td align="left">11231</td><td align="left">Ca+</td></tr><tr><td align="left">11245</td><td align="left">SOCS</td></tr><tr><td align="left">&#x2026;</td><td align="left">&#x2026;</td></tr></tbody></table></table-wrap></p>
            <p>Let us consider the case where two models have two different names for the exact same species. For example, suppose one model refers to a species called &#x201C;Calcium&#x201D; and another model refers to a species called &#x201C;Ca+&#x201D;. In Table&#xA0;<xref rid="Tab3" ref-type="table">3</xref>, during registration, both of these species will point to Unique Identifier # 11231. The system will automatically resolve those species to be the same species internally. Prior to registering a new model, one can decide to use existing identifiers and names or add their own identifiers and name to the ontology. For example, let us say a developer has a species called &#x201C;Cal&#x201D; and that also refers to the same species as &#x201C;Calcium&#x201D; or &#x201C;Ca+&#x201D;, then the developer can update the ontology so 11231 also has an entry for &#x201C;Cal&#x201D; or they can adjust their species name to one of the existing synonyms.</p>
            <p>Alternatively, let us consider the case of two models where the species name &#x201C;CALCIUM&#x201D; is assigned the same name in each model. When any model registers itself with the system, the PID file for that model is compared with other existing PID files and the Unique Identifier list. If CALCIUM is used in another model, then the system indicates that CALCIUM is currently being used by two other models, along with the Unique Identifier # for CALCIUM. If the author of that model believes that CALCIUM in fact refers to the same species, then no changes are required. If the model&#x2019;s author believes that the species name should be different, then the onus is on the author to create a new Unique Identifier # and Species Name and resubmit.</p>
            <p>The basic ontology of CytoSolve provides the Controller the basic knowledge to integrate species values across an ensemble of models. Currently, PID file creation and the Unique Identifier list maintenance and update is done manually; however, an automated process is under development to enable automatic comparison across models of species and reactions.</p>
          </sec>
        </sec>
        <sec id="Sec23">
          <title>Appendix D</title>
          <sec id="Sec24">
            <title>Sample Example of a Model and Input and Output Format for a Model</title>
            <p>The purpose of this Appendix is to provide an example of a simple model, how CytoSolve interacts with the model, and how the model interacts with other models. Figure&#xA0;<xref rid="Fig11" ref-type="fig">11</xref>a shows a molecular pathway. This pathway contains five species with each species coded in a particular color. Each species interacts with other species as denoted by the arrows. Figure&#xA0;<xref rid="Fig11" ref-type="fig">11</xref>b shows the equivalent molecular pathway <italic>model</italic> of the same pathway. CytoSolve treats the model as a black box, concerned with its inputs and outputs. There are five (5) inputs to the model and five (5) outputs from the model, associated with the five species as indicated by color in Fig.&#xA0;<xref rid="Fig11" ref-type="fig">11</xref>b. The input to the model is the values of the species concentration at time step <italic>n</italic> and the output from the model is the values of the species concentration at time step <italic>n</italic>&#xA0;+&#xA0;1.<fig id="Fig11"><label>Figure&#xA0;11</label><caption><p>Simple example of a molecular pathway and model in CytoSolve. (a) Molecular pathway with five species and reactions. (b) Molecular pathway model with five inputs and five outputs of species concentrations at <italic>t</italic>&#xA0;=&#xA0;<italic>n</italic> and <italic>t</italic>&#xA0;=&#xA0;<italic>n</italic>&#xA0;+&#xA0;1, respectively</p></caption><graphic position="anchor" xlink:href="12195_2010_143_Fig11_HTML" id="MO26"/></fig></p>
            <p>The code within the &#x201C;black box&#x201D; of the model is not shielded even from CytoSolve. Thus, unlike monolithic systems, where model codes have to be linked together, with CytoSolve, there is no linking of model codes. Rather, at each time step, a model receives its inputs, executes, and returns its outputs. In Fig.&#xA0;<xref rid="Fig11" ref-type="fig">11</xref>b, the model format is in SBML, and the model&#x2019;s mathematical approach is to use ODE&#x2019;s. CytoSolve however is agnostic to the internal representation of the model. CytoSolve&#x2019;s Controller processes the input and output streams across all models, as discussed in the &#x201C;<xref rid="Sec5" ref-type="sec">Computational Methodology</xref>&#x201D; section to link and dynamically integrate solutions across all models to yield solutions for temporal changes in species concentrations.</p>
          </sec>
        </sec>
        <sec id="Sec25">
          <title>Appendix E</title>
          <sec id="Sec26">
            <title>Using CytoSolve</title>
            <p>The first two basic requirements for use of the system are registering and logging in. There are three (3) main use cases of CytoSolve: Case I&#x2014;Remote Mode; Case II&#x2014;Local Mode; and, Case III&#x2014;Combined Mode. During Remote Mode, the user can select models loaded on CytoSolve&#x2019;s remote servers, and then integrate them. During Local Mode, the user simply downloads the local solver and combines and runs models resident on their local computer. During Combined Mode, the user can combine models resident on their local machines and with models resident on CytoSolve&#x2019;s remote servers.</p>
            <p>The <italic>initial steps</italic> in using CytoSolve for each mode vary. The initial steps for each mode are outlined in the sub-section &#x201C;<xref rid="Sec27" ref-type="sec">Initial Steps Across All Modes</xref>&#x201D;. Thereafter, the usage steps are common across all modes as outlined in the sub-section &#x201C;<xref rid="Sec28" ref-type="sec">Common Steps Across Modes</xref>&#x201D;.</p>
            <sec id="Sec27">
              <title>Initial Steps Across All Modes</title>
              <p>
                <list list-type="order">
                  <list-item>
                    <p>
                      <italic>Remote Model Case</italic>
                      <list list-type="bullet">
                        <list-item>
                          <p>Step 1&#x2014;Select Remote Solving.</p>
                        </list-item>
                        <list-item>
                          <p>Step 2&#x2014;Select Models to be Integrated. Iteratively, using the drop-down, individual models, which have been pre-registered and loaded onto the remote CytoSolve server(s) are selected.</p>
                        </list-item>
                      </list>
                    </p>
                  </list-item>
                </list>
              </p>
              <p>To make models accessible for use by others, one simply loads up the model from the user interface to make it available for others to &#x201C;see&#x201D; and use. To create the original model itself, for example in SMBL, tools such as Cell Designer, MATLAB and others can be used.<list list-type="order"><list-item><p><italic>Local Model Case</italic><list list-type="bullet"><list-item><p>Step 1&#x2014;Select Local Solving.</p></list-item><list-item><p>Step 2&#x2014;Download the Local Solver. Currently we support the SBML ODE solver, which can be downloaded to PC or MAC. Once the solver is downloaded, a README file provides instructions on how to install and initiate and run the solver.</p></list-item><list-item><p>Step 3&#x2014;Select the Models to Run. Once the local solver is installed, one simply browses and selects the model(s) that one wishes to run and integrate locally.</p></list-item></list></p></list-item><list-item><p><italic>Combined Mode Case</italic></p><p>(Here it is assumed that the user has set up the Local Solver).<list list-type="bullet"><list-item><p>Step 1&#x2014;Select Combined Solving.</p></list-item><list-item><p>Step 2&#x2014;Select Models to be Integrated. Iteratively, using the drop-down, select individual models, which have been pre-registered and loaded onto the remote CytoSolve server(s) as well as the local models, which will appear on the drop down list.</p></list-item></list></p></list-item></list></p>
              <p><italic>Note</italic>: In this drop down list, CytoSolve lists models from the entire Biomodels.Net repository as well as any other models loaded by users of the system. If a local user wishes to make their model available for others to &#x201C;see&#x201D;, the user can simply upload their model into the CytoSolve system by entering the Remote Mode and doing so. Within the current web-based GUI, we are porting features from our non-web interface to enable users to simply <italic>register</italic> their local models and make CytoSolve aware of the model on their local personal computer, so no upload is necessary. However, some important network security issues need to be addressed, before that feature is released to the public, since CytoSolve will have direct access to the user&#x2019;s local machine through the Web, in such cases.</p>
            </sec>
          </sec>
          <sec id="Sec28">
            <title>Common Steps Across Modes</title>
            <p>
              <list list-type="bullet">
                <list-item>
                  <p>Step A&#x2014;Perform Pre-Checks (Align Models). Align models by executing pre-checks and determine duplicate species and reactions. User may be alerted to resolve species naming conflicts. These naming conflicts can be resolved manually or through auto alignment.</p>
                </list-item>
                <list-item>
                  <p>Step B&#x2014;Set Initial Conditions. Set the initial conditions for all species, spanning all models to be integrated.</p>
                </list-item>
                <list-item>
                  <p>Step C&#x2014;Execute. CytoSolve performs dynamic integration of the models selected.</p>
                </list-item>
                <list-item>
                  <p>Step D&#x2014;Display Data. Results from the integration can be viewed as graphs or the data, alternatively, can be downloaded for local analysis.</p>
                </list-item>
              </list>
            </p>
          </sec>
        </sec>
      </app>
    </app-group>
  </back>
</article>

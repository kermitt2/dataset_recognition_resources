<?xml version="1.0"?>
<!DOCTYPE article PUBLIC "-//NLM//DTD Journal Archiving and Interchange DTD v3.0 20080202//EN" "archivearticle3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article">
  <?properties open_access?>
  <?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
  <?DTDIdentifier.IdentifierType public?>
  <?SourceDTD.DTDName A++V2.4.dtd?>
  <?SourceDTD.Version 2.4?>
  <?ConverterInfo.XSLTName springer2nlmx2.xsl?>
  <?ConverterInfo.Version 2?>
  <front>
    <journal-meta>
      <journal-id journal-id-type="nlm-ta">Evol Intell</journal-id>
      <journal-title-group>
        <journal-title>Evolutionary Intelligence</journal-title>
      </journal-title-group>
      <issn pub-type="ppub">1864-5909</issn>
      <issn pub-type="epub">1864-5917</issn>
      <publisher>
        <publisher-name>Springer-Verlag</publisher-name>
        <publisher-loc>Berlin/Heidelberg</publisher-loc>
      </publisher>
    </journal-meta>
    <article-meta>
      <article-id pub-id-type="pmc">2987561</article-id>
      <article-id pub-id-type="pmid">21151488</article-id>
      <article-id pub-id-type="publisher-id">40</article-id>
      <article-id pub-id-type="doi">10.1007/s12065-010-0040-1</article-id>
      <article-categories>
        <subj-group subj-group-type="heading">
          <subject>Research Paper</subject>
        </subj-group>
      </article-categories>
      <title-group>
        <article-title>Recombination operators and selection strategies for evolutionary Markov Chain Monte Carlo algorithms</article-title>
      </title-group>
      <contrib-group>
        <contrib contrib-type="author" corresp="yes">
          <name>
            <surname>Drugan</surname>
            <given-names>Madalina M.</given-names>
          </name>
          <address>
            <email>madalina@cs.uu.nl</email>
          </address>
          <xref ref-type="aff" rid="Aff1"/>
        </contrib>
        <contrib contrib-type="author">
          <name>
            <surname>Thierens</surname>
            <given-names>Dirk</given-names>
          </name>
          <address>
            <email>dirk@cs.uu.nl</email>
          </address>
          <xref ref-type="aff" rid="Aff1"/>
        </contrib>
        <aff id="Aff1">Department of Information and Computing Sciences, Utrecht University, PO. Box 80.089, 3508&#xA0;TB Utrecht, The Netherlands </aff>
      </contrib-group>
      <pub-date pub-type="epub">
        <day>21</day>
        <month>7</month>
        <year>2010</year>
      </pub-date>
      <pub-date pub-type="pmc-release">
        <day>21</day>
        <month>7</month>
        <year>2010</year>
      </pub-date>
      <pub-date pub-type="ppub">
        <month>8</month>
        <year>2010</year>
      </pub-date>
      <volume>3</volume>
      <issue>2</issue>
      <fpage>79</fpage>
      <lpage>101</lpage>
      <history>
        <date date-type="received">
          <day>23</day>
          <month>2</month>
          <year>2010</year>
        </date>
        <date date-type="rev-recd">
          <day>25</day>
          <month>6</month>
          <year>2010</year>
        </date>
        <date date-type="accepted">
          <day>2</day>
          <month>7</month>
          <year>2010</year>
        </date>
      </history>
      <permissions>
        <copyright-statement>&#xA9; The Author(s) 2010</copyright-statement>
      </permissions>
      <abstract>
        <p><italic>Markov Chain Monte Carlo</italic> (MCMC) methods are often used to sample from intractable target distributions. Some MCMC variants aim to improve the performance by running a population of MCMC chains. In this paper, we investigate the use of techniques from Evolutionary Computation (EC) to design population-based MCMC algorithms that exchange useful information between the individual chains. We investigate how one can ensure that the resulting class of algorithms, called <italic>Evolutionary MCMC</italic> (EMCMC), samples from the target distribution as expected from any MCMC algorithm. We analytically and experimentally show&#x2014;using examples from discrete search spaces&#x2014;that the proposed EMCMCs can outperform standard MCMCs by exploiting common partial structures between the more likely individual states. The MCMC chains in the population interact through recombination and selection. We analyze the required properties of recombination operators and acceptance (or selection) rules in EMCMCs. An important issue is how to preserve the detailed balance property which is a sufficient condition for an irreducible and aperiodic EMCMC to converge to a given target distribution. Transferring EC techniques to population-based MCMCs should be done with care. For instance, we prove that EMCMC algorithms with an elitist acceptance rule do not sample the target distribution correctly.</p>
      </abstract>
      <kwd-group>
        <title>Keywords</title>
        <kwd>Evolutionary Markov chain Monte Carlo</kwd>
        <kwd>Detailed balance</kwd>
        <kwd>Recombination</kwd>
        <kwd>Acceptance rules</kwd>
      </kwd-group>
      <custom-meta-group>
        <custom-meta>
          <meta-name>issue-copyright-statement</meta-name>
          <meta-value>&#xA9; Springer-Verlag 2010</meta-value>
        </custom-meta>
      </custom-meta-group>
    </article-meta>
  </front>
  <body>
    <sec id="Sec1">
      <title>Introduction</title>
      <p>Markov Chain Monte Carlo (MCMC) is a framework of algorithms for sampling from complicated distributions. The use of MCMC in Machine Learning has recently been advocated by [<xref ref-type="bibr" rid="CR1">1</xref>]. Usually, a single MCMC is run until it converges to the stationary distribution. To improve their efficiency, some MCMC variants consist of a population of chains that interact by exchanging useful information and at the same time preserve the MCMC convergence characteristics at the population level. In this paper, we are particularly interested in techniques that use multiple interacting chains in parallel as opposed to a single chain.</p>
      <p>The stochastic process of Evolutionary Computation (EC) and MCMC algorithms is basically similar: both are Markov chains with fixed transition matrices between individual states, for instance transition matrices given by mutation and recombination operators for EC and by perturbation operators for MCMC. Furthermore, both Metropolis-Hastings&#x2014;a subclass of MCMCs&#x2014;and EC algorithms have a selection step, the acceptance rule, to propagate good individuals to the next generation. There are also many differences induced by the different scope of these algorithms: EC is used for optimization and MCMC is used for sampling. Additionally, MCMC uses a single chain whereas EC algorithms use a population of individuals that interact. Motivated by the common points of these two algorithms, we have previously discussed the Evolutionary MCMC (EMCMC) framework which aims to improve the efficiency of standard MCMC algorithms [<xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR8">8</xref>]. EMCMC is a population-based MCMC that exchanges information between the individual chains such that at population level it is still an MCMC.</p>
      <p>In general, it is not straightforward to integrate interaction between chains, like recombination or selection, into population based MCMCs and to preserve the convergence to the target distribution. To ease proving that EMCMCs converge to the stationary distribution the individuals generated with recombinative operators (an alternation between mutation and recombination operators) should be all accepted or all rejected [<xref ref-type="bibr" rid="CR8">8</xref>, <xref ref-type="bibr" rid="CR16">16</xref>] with a so called <italic>coupled acceptance rule</italic>. Note the difference between this coupled acceptance and the popular selection strategies in EC; the coupled acceptance rule is selective at the family (i.e., the set of children generated by a set of parents) level whereas the selection strategies are selective at individual level that is one of the children competes against one of its parents. Using the standard MH acceptance rule where only one of the multiple children generated from multiple parents is accepted/rejected is a straightforward alternative algorithm [<xref ref-type="bibr" rid="CR27">27</xref>]. It is interesting to note that Mahfoud and Goldberg [<xref ref-type="bibr" rid="CR17">17</xref>] also obtained good results for <italic>Simulated Annealing</italic> (SA) [<xref ref-type="bibr" rid="CR14">14</xref>] algorithms where one child competes against one of the parents. However, such a recombinative EMCMC does not fit in the standard framework of Metropolis-Hastings algorithms. Some alternative solutions proposed previously restrict the proposal distributions that generate new individuals by generating only one child at the time from a family of parents [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR5">5</xref>, <xref ref-type="bibr" rid="CR15">15</xref>, <xref ref-type="bibr" rid="CR23">23</xref>, <xref ref-type="bibr" rid="CR24">24</xref>]. For example, [<xref ref-type="bibr" rid="CR15">15</xref>] proposed an EMCMC algorithm that uses a population based univariate distribution to sample from likely Bayesian network structures. Other algorithms, for example some population-based adaptive MCMCs [<xref ref-type="bibr" rid="CR9">9</xref>] and sequential Monte Carlo [<xref ref-type="bibr" rid="CR6">6</xref>], relax the Markov property at the price of more difficult convergence properties and usage by practitioners.</p>
      <p>In this paper, we theoretically and experimentally study various recombination operators and their interaction with acceptance rules resulting into <italic>EMCMCs</italic> with a required target distribution. We investigate the properties of several popular recombination operators in GAs (i.e., uniform recombination) when integrated in the EMCMC framework. We show that the individuals that interact in generating candidate individuals should also interact in the acceptance rule to sample from the target distribution. Acceptance rules that are directly derived from the EC&#x2019;s selection strategies are more useful for optimization than for sampling. The sampled distribution is skewed compared with the target distribution: the fit states of the search space are amplified and the less fit states are diminished.</p>
      <p>We propose a general method that corrects the target distribution of a recombinative EMCMC that does not sample from the intended distribution. This technique simply considers the recombinative EMCMC as the proposal distribution and the generated children are all accepted/rejected with a coupled acceptance rule. In this way we postpone the acceptance or rejection of all children with the hope that the recombinative EMCMC generates fit individuals that will increase the chance that children are accepted and, consequently, that the algorithm converges faster to the target distribution. This method has theoretical value constructing a correction term with which the sampled distribution should be multiplied to transform it into the target distribution.</p>
      <p>We compare in practice the performance of various recombinative and non-recombinative EMCMCs with the standard and the population-based MCMC. When comparing (E)MCMCs we respond to three questions: (1) how useful are EMCMCs when compared with MCMCs, (2) how useful are the recombinative operators and (3) what is the difference in performance between EMCMCs using the standard MH acceptance rule selective at individual level and EMCMCs using the coupled acceptance rules. The recombinative operators chosen are the most popular operators in EC: discrete space uniform recombination and uniform mutation. As a consequence, the theory and the practical examples are formulated for the discrete space (E)MCMCs. We also mention that it is straightforward to extend these results to the continuous space (E)MCMCs.</p>
      <p>For our first experiment we analytically compare the algorithms an a toy example such that the exact performance of algorithms is calculated from all the transitions between all the states of an (E)MCMCs. In the second experiment we calculate the Kullback-Leiber distance between the target distribution and the distribution output by an algorithm after a finite number of steps on a relatively small size <italic>binary quadratic programming problem</italic> (BQP) to exactly compute the target distribution. The next experiment is on a larger size BQP where we can compare the performance of (E)MCMCs using only graphical (and more imprecise) tests. Note that BQP is related to the popular mathematical problem in statistical mechanics known as the Ising model [<xref ref-type="bibr" rid="CR10">10</xref>]. The obtained results show that recombination improves the mixing of the EMCMC especially when the standard MH acceptance rule is used with recombination.</p>
      <sec id="Sec2">
        <title>Outline of the paper</title>
        <p>Section <xref rid="Sec3" ref-type="sec">2</xref> presents some basic knowledge of MCMC algorithms and introduces the notation used in the rest of the paper. For an in depth study on MCMCs we refer the reader to [<xref ref-type="bibr" rid="CR12">12</xref>]. In Sect. <xref rid="Sec7" ref-type="sec">3</xref> the EMCMC framework is presented. In Sect. <xref rid="Sec10" ref-type="sec">4 </xref>we investigate several recombination operators and their desired properties for EMCMCs. Section <xref rid="Sec21" ref-type="sec">5 </xref>proposes and analyzes various MH acceptance rules and the properties of the resulting EMCMCs when combined with the recombinative operators. We also establish rules to design recombinative EMCMCs for sampling and optimization. In Sect. <xref rid="Sec29" ref-type="sec">6</xref> we analytically investigate the discussed EMCMCs on a toy problem and experimentally test them on two BQP problem instances. Section <xref rid="Sec37" ref-type="sec">7</xref> concludes and discusses the results of the paper.</p>
      </sec>
    </sec>
    <sec id="Sec3">
      <title>Background: MCMC framework</title>
      <p>MCMC is a general framework to generate samples <italic>X</italic><sup>(<italic>t</italic>)</sup> from a probability distribution <italic>P</italic>(&#xB7;) while exploring its so-called countable &#x2113;-dimensional state (or search) space <italic>E</italic> using a <italic>Markov chain</italic>. We assume the state space is compact. MCMC does not sample directly from <italic>P</italic>(&#xB7;), but only requires that it can be evaluated within a multiplicative constant <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$P(X) = {\hat{P}(X)}/{Z}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq1.gif"/></alternatives></inline-formula>, where <italic>Z</italic> is a normalization constant and <inline-formula id="IEq2"><alternatives><tex-math id="M2">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{P}(\cdot)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq2.gif"/></alternatives></inline-formula> the unnormalized target distribution. A discrete time Markov chain is a stochastic process (<italic>X</italic><sup>(0)</sup>,&#xA0;<italic>X</italic><sup>(1)</sup>,&#xA0;&#x2026;) with the property that the probability distribution for the state <italic>X</italic><sup>(<italic>t</italic>)</sup> given all previous values (<italic>X</italic><sup>(0)</sup>,&#xA0;<italic>X</italic><sup>(1)</sup>,&#x2026;,&#xA0;<italic>X</italic><sup>(<italic>t</italic>&#x2212;1)</sup>) only depends on <italic>X</italic><sup>(<italic>t</italic>&#x2212;1)</sup>. Mathematically, we can write<disp-formula id="Equa"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ P(X^{(t)} \mid X^{(0)},X^{(1)},\ldots,X^{(t-1)}) =P(X^{(t)} \mid X^{(t-1)}) $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equa.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>We call <inline-formula id="IEq3500"><alternatives><tex-math id="M4">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ P(X^{(t)} \mid X^{(t-1)}) $$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq3500.gif"/></alternatives></inline-formula> the <italic>transition matrix</italic> of the Markov chain. A <italic>homogeneous</italic> Markov chain in addition, has a time-independent transition matrix. In the following we only consider homogeneous Markov chains, unless specified otherwise. Aperiodicity excludes for instance that certain points can only be reached at even times. For any starting point a Markov chain with a finite state-space converges to a unique invariant distribution if it is irreducible and aperiodic. A Markov chain is called irreducible if, and only if, every state can be reached from every other state in a finite number of steps.</p>
      <p>A sufficient, but not necessary, condition to ensure that the given distribution <italic>P</italic>(&#xB7;) is the stationary distribution is that it satisfies the <italic>detailed balance condition</italic> [<xref ref-type="bibr" rid="CR1">1</xref>]. A MCMC satisfies the detailed balance condition if, and only if, the probability to move from <italic>X</italic> to <italic>Y</italic> multiplied by the probability to be in <italic>X</italic> is equal to the probability to move from <italic>Y</italic> to <italic>X</italic> multiplied by the probability to be in <italic>Y</italic>:<disp-formula id="Equb"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ P(Y \mid X) \cdot P(X) = P(X \mid Y) \cdot P(Y) $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equb.gif" position="anchor"/></alternatives></disp-formula></p>
      <sec id="Sec4">
        <title>Metropolis-Hastings algorithms</title>
        <p>Many MCMC algorithms are Metropolis-Hastings (MH) algorithms [<xref ref-type="bibr" rid="CR13">13</xref>, <xref ref-type="bibr" rid="CR18">18</xref>]. Since we cannot sample directly from the distribution <italic>P</italic>(&#xB7;), MH algorithms consider a simpler distribution <inline-formula id="IEq35010"><alternatives><tex-math id="M6">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ Q (\cdot \mid \cdot) $$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq35010.gif"/></alternatives></inline-formula>, called the <italic>proposal distribution</italic> to generate the next state of a MCMC chain. <inline-formula id="IEq35012"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$  Q (Y  \mid&amp;#000215;^{(t)}) $$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq35012.gif"/></alternatives></inline-formula> generates the candidate state <italic>Y</italic> from the current state <italic>X</italic><sup>(<italic>t</italic>)</sup>, and the new state <italic>Y</italic> is accepted with probability:<disp-formula id="Equc"><alternatives><tex-math id="M8">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \alpha(Y \mid X^{(t)}) = \hbox{min}{\left(1,{\frac{\hat{P}(Y) \cdot Q(X^{(t)} \mid Y)}{\hat{P}(X^{(t)}) \cdot Q(Y \mid X^{(t)})}}\right)} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equc.gif" position="anchor"/></alternatives></disp-formula>If the candidate state is accepted, the next state becomes <italic>X</italic><sup>(<italic>t</italic>+1)</sup>&#xA0;=&#xA0;<italic>Y</italic>. Otherwise, <italic>X</italic><sup>(<italic>t</italic>+1)</sup>&#xA0;=&#xA0;<italic>X</italic><sup>(<italic>t</italic>)</sup>. For finite search spaces, the transition probability <inline-formula id="IEq35013"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$  K(Y \mid X^{(t)}) $$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq35013.gif"/></alternatives></inline-formula> for arriving in <italic>Y</italic> when the current state is <italic>X</italic><sup>(<italic>t</italic>)</sup>, where <italic>X</italic><sup>(<italic>t</italic>)</sup>&#xA0;&#x2260;&#xA0;<italic>Y</italic>, is<disp-formula id="Equd"><alternatives><tex-math id="M10">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ K(Y \mid X^{(t)}) = Q(Y \mid X^{(t)}) \cdot \alpha(Y \mid X^{(t)}) $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equd.gif" position="anchor"/></alternatives></disp-formula>The rejection probability is,<disp-formula id="Eque"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ K(X^{t} \mid X^{t}) = 1 - \sum_{Y^\prime,  Y^\prime \neq X^{(t)}} Q(Y^\prime \mid X^{(t)}) \cdot \alpha(Y^\prime \mid X^{(t)}) $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Eque.gif" position="anchor"/></alternatives></disp-formula>An MH algorithm is aperiodic, since the chain can remain in the same state with a probability greater than 0, and by construction it satisfies the detailed balance condition,<disp-formula id="Equf"><alternatives><tex-math id="M12">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \hat{P}(X^{(t)}) \cdot K(Y \mid X^{(t)}) = \hat{P}(Y) \cdot K(X^{(t)} \mid Y) $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equf.gif" position="anchor"/></alternatives></disp-formula>If, in addition, the chain is irreducible, then it converges to the stationary distribution <italic>P</italic>(&#xB7;). The rate of convergence depends on the relationship between the proposal distribution and the target distribution: the closer the proposal distribution is to the stationary distribution, the faster the chain converges. A popular Metropolis-Hastings algorithm is the <italic>Metropolis algorithm</italic> where the proposal distribution is <italic>symmetrical</italic><inline-formula id="IEq350100"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ Q (Y \mid X(t)) = Q (X(t) \mid Y)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq350100.gif"/></alternatives></inline-formula> and the acceptance rule becomes<disp-formula id="Equg"><alternatives><tex-math id="M14">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \alpha(Y \mid X^{(t)}) = \hbox{min}{\left(1,{\frac{\hat{P}(Y)} {\hat{P}(X^{(t)})}}\right)} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equg.gif" position="anchor"/></alternatives></disp-formula></p>
      </sec>
      <sec id="Sec5">
        <title>Mutation</title>
        <p>A popular and often used set of irreducible proposal distributions for MH algorithms can be described by a <italic>mutation operator</italic>. We generically denote the proposal distributions resulting from mutation operators with <italic>Q</italic><sub><italic>m</italic></sub>. We consider a state in the discrete space as a string of &#x2113; characters, <bold>X</bold>&#xA0;=&#xA0;(<italic>X</italic><sub>1</sub>,&#xA0;<italic>X</italic><sub>2</sub>,&#x2026;,&#xA0;<italic>X</italic><sub>&#x2113;</sub>). The <italic>h</italic>-th position in <bold>X</bold> is called the <italic>locus</italic> of <italic>X</italic><sub><italic>h</italic></sub>, where 1 &#x2264;&#xA0;<italic>h</italic> &#x2264;&#xA0;&#x2113;, and the value of <italic>X</italic> in the locus <italic>h</italic> is called an allele. Each position (or <italic>locus</italic>) <italic>h</italic> in an individual <bold>X</bold> is instantiated with an <italic>allele</italic><italic>X</italic><sub><italic>h</italic></sub> &#xA0;&#x2208;&#xA0;<italic>E</italic>(<italic>X</italic><sub>&#xB7;</sub>), where <italic>E</italic>(<italic>X</italic><sub>&#xB7;</sub>) is the multi-set of all possible values of <italic>X</italic><sub>&#xB7;</sub>.</p>
        <p>The <italic>uniform mutation operator</italic> randomly changes every value of each variable of the current state with a non-zero probability, called the mutation rate [<xref ref-type="bibr" rid="CR8">8</xref>, <xref ref-type="bibr" rid="CR16">16</xref>, <xref ref-type="bibr" rid="CR17">17</xref>, <xref ref-type="bibr" rid="CR23">23</xref>]. The bigger the uniform mutation rate, the bigger the jump in the search space of the child state from the parent state. <italic>Q</italic><sub><italic>m</italic></sub> denotes the <italic>uniform mutation proposal distribution</italic>. When the context is not ambiguous, we simply refer to it as mutation. The uniform mutation operator defines an irreducible, symmetric and stationary proposal distribution [<xref ref-type="bibr" rid="CR8">8</xref>].</p>
        <p>In the sequel, the <italic>uniform mutation transition matrix</italic>, <italic>K</italic><sub><italic>m</italic></sub>, proposes candidate individuals with <italic>Q</italic><sub><italic>m</italic></sub> and accepts them with the MH acceptance rule. The uniform mutation transition matrix, <italic>K</italic><sub><italic>m</italic></sub>, defines an irreducible MH algorithm which converges to its stationary distribution [<xref ref-type="bibr" rid="CR8">8</xref>].</p>
      </sec>
      <sec id="Sec6">
        <title>Multiple independent chains (MICs)</title>
        <p>When we talk about the performance of an MCMC, we refer to how well an MCMC is mixing or how &#x201C;fast&#x201D; it converges to the target distribution. We say that an MCMC is mixing &#x201C;well&#x201D; if it rapidly traverses the search space and, at the same time, accurately samples the target distribution. Note that the mixing concept in <italic>MCMC</italic> is not related to the mixing of building blocks in the EC literature.</p>
        <p>In an attempt to improve the mixing behavior of MCMCs one could make use of multiple chains that run independently (MICs). The chains are started at different initial states and their output is observed at the same time. It is hoped that this way a more reliable sampling of the target distribution <italic>P</italic>(&#xB7;) is obtained. It is important to note that no information exchange between the chains takes place.</p>
        <p>Recommendations in the literature are conflicting regarding the efficiency of multiple independent chains. Yet there are at least theoretical advantages of multiple independent chains MCMC for establishing its convergence to <italic>P</italic>(&#xB7;) [<xref ref-type="bibr" rid="CR12">12</xref>]. Let&#x2019;s consider a large dimensional distribution where an MCMC takes a long time to find a relevant region of the search space and to escape from it to search for other relevant regions. Then, the time necessary for a long MCMC can be larger than just starting multiple MCMCs spread over the search space sampling in different regions. However, MIC converges only after all the component MCMC chains have converged.</p>
        <p>Since the chains do not interact, MIC is at the population level an MCMC with transition probabilities equal to the product of component chains transition probabilities, or<disp-formula id="Equh"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ K({\bf X}^{(t+1)} \mid {\bf X}^{(t)}) = \prod_{i = 1}^{N} K({\bf x}^{(t+1)}_i \mid {\bf x}^{(t)}_i) $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equh.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq3"><alternatives><tex-math id="M16">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf X}^{(t)} = ({\bf x}_1^{(t)}, \ldots, {\bf x}_N^{(t)})$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq3.gif"/></alternatives></inline-formula>. If the MCMCs have detailed balance, are irreducible and aperiodic, then MIC inherits these properties and it converges, at the population level, to the product of their target distributions, <italic>P</italic><sub>1</sub>(&#xB7;)&#xD7;&#x22EF;&#xD7;<italic>P</italic><sub><italic>N</italic></sub>(&#xB7;), where <italic>P</italic><sub><italic>i</italic></sub>(&#xB7;) is the target distribution of the <italic>i</italic>-th chain.</p>
      </sec>
    </sec>
    <sec id="Sec7">
      <title>EMCMC framework</title>
      <p>EMCMCs use a population of chains that allow interactions between the individuals under the assumption that individuals in the current population exchange information that helps the EMCMC to sample the desired distribution. Note that, in EMCMCs, the population is a multi-set of individual states rather than a collection of MCMCs: the current individual states depend on several states from the previous population. Now the sample at time <italic>t</italic> is the population <inline-formula id="IEq4"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf X}^{(t)} = ({\bf x}^{(t)}_1,\ldots,{\bf x}^{(t)}_N)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq4.gif"/></alternatives></inline-formula> of <italic>N</italic> states (or individuals) <inline-formula id="IEq5"><alternatives><tex-math id="M18">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_{\cdot}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq5.gif"/></alternatives></inline-formula>.</p>
      <p><bold><bold>Definition 1</bold></bold> An <italic>evolutionary Markov chain Monte Carlo</italic> (EMCMC) algorithm is a population MCMC that exchanges information between individual states such that, at the population level, the EMCMC is an MCMC.</p>
      <p>Similarly to an MCMC, the main goal of an EMCMC is to sample from a given distribution, <italic>P</italic>(&#xB7;). Ideally, an MCMC algorithm generates individuals directly from the target distribution. Unfortunately, we do not know where the most likely&#x2014;or equivalently, the most fit&#x2014;individual states can be found in the search space. Furthermore, MCMCs can poorly &#x201C;mix&#x201D; when individual states are disproportionately proposed with their probability. A standard MCMC, for example, generates individuals with some mutation proposal distribution (e.g., the uniform mutation proposal distribution <italic>Q</italic><sub><italic>m</italic></sub>) that does not have any knowledge of the sampled distribution. A method to speed up the mixing is to propose individuals using proposal distributions that are &#x201C;close&#x201D; to the target distribution. For that, we can use recombination operators that exploit the common structure of the parents. Sampling from a distribution implies that the more fit individuals are more often generated than less fit ones. As a consequence, the commonalities of more likely individuals are used by recombination to create other more likely individuals. Intuitively, such a proposal distribution approximates better the target distribution than a proposal distribution that does not make any assumption about the generated individuals, like uniform mutation. In this perspective, the recombination operators adapt the proposal probabilities to generate an individual from the current population. Note that, the allowed types of proposal distribution are the ones that preserve the Markov chain property at the population level: we can only use the information in the current population for generating new individuals.</p>
      <sec id="Sec8">
        <title>Recombination operators in EMCMCs</title>
        <p>We call EMCMCs that use recombination to exchange information between individuals <italic>recombinative EMCMCs</italic>.</p>
        <p><bold><bold>Definition 2</bold></bold> A recombination operator used as proposal distribution of an EMCMC generates one or more children from two or more parents using some function that is independent of the EMCMCs&#x2019; sampled distribution. Each generation, the population is uniform randomly grouped in disjunct families of few (i.e., two, three) individuals such that each individual belongs to exactly one family. All the chains from an EMCMC eventually interact in population recombinations. We call <italic>recombination proposal distribution</italic>, <italic>Q</italic><sub><italic>r</italic></sub>, the distribution defined by the recombination probabilities at the population level.</p>
        <p>It is important to note that at the individual family level, the proposal probabilities of recombination are not stationary since they depend on the family members with which they are grouped. At population level, however, the recombination proposal distribution generating the next population from the current one is stationary.</p>
        <p>We only consider recombination operators that are respectful&#x2014;this is, the common substructures of the parents are inherited by the offspring [<xref ref-type="bibr" rid="CR20">20</xref>]. With respectful recombination the common parts of strings are protected against disruption.</p>
        <p>An important aspect of any recombination operator is to establish whether it is symmetrical or not: for non symmetrical recombinations, we have to compute the proposal probabilities, whereas for symmetrical operators we can simply use the Metropolis algorithm. In Sect. <xref rid="Sec11" ref-type="sec">4.1 </xref>we design and investigate several recombination operators that generate symmetrical proposal distributions and in Sect. <xref rid="Sec15" ref-type="sec">4.2</xref> we give examples of recombination operators that generate non-symmetrical distributions. We focus on the most popular type of recombination operators in GAs that swap alleles between two or more parents with some probability to generate one or more children. Since respectful recombination by definition is reducible [<xref ref-type="bibr" rid="CR8">8</xref>], in Sect. <xref rid="Sec18" ref-type="sec">4.3 </xref>we combine recombination with mutation to obtain irreducible proposal distributions following the simple mathematical rules of mixtures and cycles [<xref ref-type="bibr" rid="CR8">8</xref>].</p>
      </sec>
      <sec id="Sec9">
        <title>The MH acceptance rules</title>
        <p>The recombination operators usually have no information about how fit the individuals in the current and proposed population are. Then, like for the standard MCMCs, we need acceptance rules to sample from the target distribution. Detailed balance is a sufficient, but not a necessary condition, for an irreducible aperiodic EMCMC to converge to a desired target distribution <italic>P</italic>(&#xB7;). By definition, MH algorithms are aperiodic and have detailed balance. Most EMCMCs are irreducible MH algorithms&#x2014;by use of mutation&#x2014;and apply recombination in the proposal distribution.</p>
        <p>In Sect. <xref rid="Sec22" ref-type="sec">5.1</xref> we propose an EMCMC where individuals are generated with recombinative proposal distributions and the parents and children are competing in a Metropolis-Hasting acceptance rule. Such an EMCMC has detailed balance if and only if the individuals that interact through recombination also interact in the acceptance rule. We further call these acceptance rules where two or more chains interact the <italic>coupled acceptance rule</italic>. We prove that such an algorithm is ergodic&#x2014;that is irreducible and aperiodic&#x2014;with the stationary distribution <italic>P</italic><sub>1</sub>(&#xB7;)&#xD7;&#x22EF;&#xD7;<italic>P</italic><sub><italic>N</italic></sub>(&#xB7;), where <italic>P</italic><sub><italic>i</italic></sub>(&#xB7;) is the target distribution of the <italic>i</italic>-th chain. However, such a coupled acceptance rule has a negative effect on the performance of an EMCMC. If some children are fit individuals but the others are not, this acceptance rule can reject &#x201C;good&#x201D; individuals whereas the standard MH acceptance rule will always accept them.</p>
        <p>We investigate the convergence properties of recombinative EMCMCs using variations of the Metropolis-Hasting acceptance rule. In Sect. <xref rid="Sec25" ref-type="sec">5.2</xref> we prove that the recombinative population-based MCMCs that accept/reject each candidate state using the standard Metropolis acceptance rule does not have detailed balance. Its advantage is that the probability of accepting at least one individual of this EMCMC is larger than the acceptance probability of an EMCMC using the coupled acceptance rule. In Sect. <xref rid="Sec26" ref-type="sec">5.3</xref> an example of an MH acceptance rule derived from the elitist replacements selection strategy [<xref ref-type="bibr" rid="CR25">25</xref>] is designed. The sampled distribution is even more skewed towards probable states and the acceptance probability of one individual is even larger. In Sect. <xref rid="Sec27" ref-type="sec">5.4</xref> we propose and analyze a methodology, we call it <italic>nested EMCMC</italic>. It corrects the sampled distributions of skewed EMCMCs by accepting/rejecting all the individuals generated with the EMCMCs with the coupled acceptance rule. This nested EMCMC has detailed balance even though the initial EMCMC does not.</p>
      </sec>
    </sec>
    <sec id="Sec10">
      <title>Recombinative proposal distributions for EMCMCs</title>
      <p>In this section we propose and analyze various recombinative proposal distributions and their properties for EMCMCs that sample from the desired target distribution.</p>
      <sec id="Sec11">
        <title>Symmetrical recombinations</title>
        <p>In EMCMCs, the symmetry is obtained by preserving the distance between the parents and their children. For example, the distance between <italic>N</italic> children is equal with the distance between the <italic>N</italic> parents that generate the children, or the distance between a parent and its child is constant as compared with the distance between two other individuals in the population.</p>
        <sec id="Sec12">
          <title><italic>N</italic> parents generate <italic>N</italic> children</title>
          <p>When the distance, i.e. Hamming distance, between the generated children is the same as the distance between their parents, the recombination operator is symmetrical.</p>
          <p><bold><bold>Proposition 1</bold></bold><italic>Consider</italic><italic>N</italic><italic>parents uniform randomly chosen without replacement from the current population</italic>, <inline-formula id="IEq6"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left\{{\bf x}^{(t)}_i, {\ldots,}{\bf x}^{(t)}_{i+N-1}\right\}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq6.gif"/></alternatives></inline-formula>, <italic>and an associated distance metric</italic><inline-formula id="IEq7"><alternatives><tex-math id="M20">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\Updelta:}E^2 \rightarrow IR$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq7.gif"/></alternatives></inline-formula><italic>with</italic><disp-formula id="Equi"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \Updelta({\bf x}^{(t)}_i, \ldots, {\bf x}^{(t)}_{i+N-1}) = \sum_{j,k \mid j  \neq k} \,\,\,\, \Updelta({\bf x}^{(t)}_j,{\bf x}^{(t)}_k) $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equi.gif" position="anchor"/></alternatives></disp-formula><italic>where</italic><inline-formula id="IEq8"><alternatives><tex-math id="M22">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Updelta({\bf x}^{(t)}_j,{\bf x}^{(t)}_k) = \Updelta({\bf x}^{(t)}_k,{\bf x}^{(t)}_j)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq8.gif"/></alternatives></inline-formula>. <italic>Let the recombination operator where</italic><italic>N</italic><italic>candidate individuals</italic>, {<bold>y</bold><sub><italic>i</italic></sub>,&#x2026;,&#xA0;<bold>y</bold><sub><italic>i</italic>+<italic>N</italic>&#x2212;1</sub>}<italic>, are generated by swapping alleles of parents such that the corresponding proposal probability</italic><inline-formula id="IEq9"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_r({\bf x}^{(t)}_i, \ldots, {\bf x}^{(t)}_{i+N-1} \mid {\bf y}_i, \ldots, {\bf y}_{i+N-1})$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq9.gif"/></alternatives></inline-formula><italic>is a function of the distance between parents such that the distance between parents is equal with the distance between their children</italic><disp-formula id="Equj"><alternatives><tex-math id="M24">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \Updelta({\bf x}^{(t)}_i, \ldots, {\bf x}^{(t)}_{i+N-1}) = \Updelta({\bf y}_{i}, \ldots, {\bf y}_{i+N-1}) $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equj.gif" position="anchor"/></alternatives></disp-formula>then <italic>S</italic><sub><italic>r</italic></sub> is symmetrical.</p>
          <p><bold><italic>Proof</italic></bold> The probability to generate children from their parents is <italic>S</italic><sub><italic>r</italic></sub> is a distance function <italic>f</italic>:&#xA0;<italic>E</italic><sup>2</sup> &#x2192;&#xA0;<italic>&#x211D;</italic> between parents<disp-formula id="Equk"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \begin{aligned} S_r({\bf x}^{(t)}_i, \ldots, {\bf x}^{(t)}_{i+N-1} \mid {\bf y}_i, \ldots, {\bf y}_{i+N-1}) &amp;=\\ f(\Updelta({\bf x}^{(t)}_i, \ldots,{\bf x}^{(t)}_{i+N-1})) =f(\Updelta({\bf y}_{i}, \ldots, {\bf y}_{i+N-1})) &amp;=\\ S_r({\bf y}_i, \ldots, {\bf y}_{i+N-1} \mid {\bf x}^{(t)}_i, \ldots, {\bf x}^{(t)}_{i+N-1})\\ \end{aligned} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equk.gif" position="anchor"/></alternatives></disp-formula>Thus, this recombination is symmetrical.<inline-formula id="IEq10"><alternatives><tex-math id="M26">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\square$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq10.gif"/></alternatives></inline-formula></p>
          <p>Note that if the number of children is different from <italic>N</italic>, in general, the symmetry condition does not hold. We discuss such examples in the next section.</p>
          <p>The swapping recombinations, often used in EMCMCs and the standard GAs, are particular cases of the above proposition where the distance between individuals are kept constant by swapping alleles.</p>
          <p><bold><bold>Proposition 2</bold></bold><italic>Recombination proposal distributions which swap parts of individuals in between chains using a uniform distribution are symmetrical, respectful and stationary</italic>.</p>
          <p><bold><italic>Proof</italic></bold> Since there are equal probabilities to swap alleles (parts) in between parents and in between children, this recombination is symmetrical and the distance between them remains equal. If the parents have the same allele on a locus, so do the children since the swapping does not change the values of alleles. <inline-formula id="IEq11"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\square$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq11.gif"/></alternatives></inline-formula></p>
          <p>We have recombinations which exchange non-common alleles, e.g., uniform crossover, or parts of individuals, e.g., 1 and 2 point crossover [<xref ref-type="bibr" rid="CR16">16</xref>, <xref ref-type="bibr" rid="CR17">17</xref>]. These recombinations are often used only with two parents.</p>
          <p>In binary spaces, an example of swapping recombination is <italic>parameterized uniform crossover</italic>, <italic>Q</italic><sub><italic>unif</italic></sub>, which generates two candidate individuals by swapping alleles between two parents with a uniform probability, <italic>p</italic><sub><italic>x</italic></sub>. Thus, it is impossible to generate children that have other common alleles than their parents. Where the two parents differ, an allele is swapped with the probability <italic>p</italic><sub><italic>x</italic></sub> and is not swapped with the probability 1&#xA0;&#x2212;&#xA0;<italic>p</italic><sub><italic>x</italic></sub>. It is interesting to observe that the time complexity to generate two children from two parents with <italic>Q</italic><sub><italic>unif</italic></sub>, like for uniform mutation, is linear with the dimensionality, <inline-formula id="IEq12"><alternatives><tex-math id="M28">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathcal{O}}(\ell)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq12.gif"/></alternatives></inline-formula>.</p>
          <p>For <italic>p</italic><sub><italic>x</italic></sub>&#xA0;=&#xA0;0.5, the operator is called uniform crossover and is used with all codings: for strings of bits [<xref ref-type="bibr" rid="CR16">16</xref>] and for strings of real numbers [<xref ref-type="bibr" rid="CR12">12</xref>].</p>
        </sec>
        <sec id="Sec13">
          <title>Three parents generate one child</title>
          <p>In the following, we introduce a general condition to design symmetrical recombinations using three parents which generate one child.</p>
          <p><bold><bold>Proposition 3</bold></bold><italic>Consider three parents uniform randomly chosen without replacement from the current population</italic>, <inline-formula id="IEq13"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left\{{\bf x}^{(t)}_i, {\bf x}^{(t)}_{i+1}, {\bf x}^{(t)}_{i+2}\right\}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq13.gif"/></alternatives></inline-formula>. <italic>The recombination operator where a candidate individual</italic>, <bold>y</bold><sub><italic>i</italic></sub><italic>, is generated from the three parents such that the total distance between parents is equal with the total distance between the candidate individual and</italic><inline-formula id="IEq14"><alternatives><tex-math id="M30">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left\{{\bf x}^{(t)}_{i+1}, {\bf x}^{(t)}_{i+2}\right\},$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq14.gif"/></alternatives></inline-formula><disp-formula id="Equl"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \begin{aligned} &amp;\Updelta({\bf x}^{(t)}_i,{\bf x}^{(t)}_{i+1}) +\Updelta({\bf x}^{(t)}_i,{\bf x}^{(t)}_{i+2}) +\Updelta({\bf x}^{(t)}_{i+1},{\bf x}^{(t)}_{i+2}) =\\ &amp;\Updelta({\bf y}_i,{\bf x}^{(t)}_{i+1}) +\Updelta({\bf y}_i,{\bf x}^{(t)}_{i+2}) +\Updelta({\bf x}^{(t)}_{i+1},{\bf x}^{(t)}_{i+2}) \end{aligned} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equl.gif" position="anchor"/></alternatives></disp-formula><italic>is symmetrical, where</italic><inline-formula id="IEq15"><alternatives><tex-math id="M32">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Updelta:E^2 \rightarrow IN$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq15.gif"/></alternatives></inline-formula><italic>is a distance metric</italic>.</p>
          <p><bold><italic>Proof</italic></bold> The parent <inline-formula id="IEq16"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_i$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq16.gif"/></alternatives></inline-formula> and the child <bold>y</bold><sub><italic>i</italic></sub> are interchangeable; they have the same total distance with the other two parents. Thus, this recombination is symmetrical.<inline-formula id="IEq17"><alternatives><tex-math id="M34">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\square$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq17.gif"/></alternatives></inline-formula></p>
          <p>As an example in the binary space, we propose the <italic>total difference crossover</italic>, <italic>Q</italic><sub><italic>dif</italic></sub>. This type of recombination is imported from real coded EAs [<xref ref-type="bibr" rid="CR22">22</xref>] and EMCMCs [<xref ref-type="bibr" rid="CR24">24</xref>]. The new individual, <bold>y</bold><sub><italic>i</italic></sub> has the same alleles like <inline-formula id="IEq18"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_i$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq18.gif"/></alternatives></inline-formula> on the positions where the two other parents coincide. On the other positions, we flip the alleles of <inline-formula id="IEq19"><alternatives><tex-math id="M36">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_i$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq19.gif"/></alternatives></inline-formula> with the probability <italic>p</italic><sub><italic>x</italic></sub>.</p>
          <p><bold><bold>Corollary 1</bold></bold><italic>Q</italic><sub><italic>dif</italic></sub><italic>is symmetric, respectful and stationary. The time complexity of</italic><italic>Q</italic><sub><italic>dif</italic></sub><italic>, like for</italic><italic>Q</italic><sub><italic>unif</italic></sub><italic>, is linear with the dimensionality</italic>, <inline-formula id="IEq20"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathcal{O}}(\ell)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq20.gif"/></alternatives></inline-formula>.</p>
          <p>The xor crossover [<xref ref-type="bibr" rid="CR23">23</xref>] is a special case of <italic>Q</italic><sub><italic>dif</italic></sub> where the probability to flip a bit is 1 for <inline-formula id="IEq21"><alternatives><tex-math id="M38">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_i$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq21.gif"/></alternatives></inline-formula>&#x2019;s bits where <inline-formula id="IEq22"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_{i+1}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq22.gif"/></alternatives></inline-formula> and <inline-formula id="IEq23"><alternatives><tex-math id="M40">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_{i+2}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq23.gif"/></alternatives></inline-formula> disagree.</p>
          <p>The main difference between the two symmetrical types of recombination is that one preserves the sum of distances between the three parents when generating a child and the other preserves the distance between two parents when generating two children.</p>
        </sec>
        <sec id="Sec14">
          <title>Family versus population recombination operators</title>
          <p>Given the number of chains that interact, we distinguish between <italic>family</italic> and <italic>population</italic> recombinations. Recombining few chains (e.g., two or three chains) is an example of the first approach, while in the latter all chains from the population exchange information. The above recombination proposal distributions are all family recombinations.</p>
          <p>We assume that, for family recombination, each generation, the population is uniform randomly grouped in disjunct families such that each individual belongs to exactly one family. All the chains from an EMCMC, eventually, interact in population recombinations. We call <italic>recombination proposal distribution</italic> the distribution defined by the recombination probabilities at the population level. We denote it with <italic>Q</italic><sub><italic>r</italic></sub>. In the case of an individual at the family level, the proposal probabilities of recombination are not stationary since they depend on the family members with which they are grouped. At population level, the probability to generate with recombination one population from another one is stationary.</p>
          <p>For the above family recombinations (e.g., <italic>Q</italic><sub><italic>unif</italic></sub> and <italic>Q</italic><sub><italic>dif</italic></sub>), the time complexity at the population level is linear with the number of individuals in the population: each generation, each individual is randomly paired in exactly one family. The complexity of these recombination proposal distributions at the population level therefore is <inline-formula id="IEq24"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathcal{O}}(\ell \cdot N)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq24.gif"/></alternatives></inline-formula>. Note that, at the population level, the complexity of the mutation proposal distribution depends linearly on the number of individuals in the population <inline-formula id="IEq25"><alternatives><tex-math id="M42">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathcal{O}}(\ell \cdot N)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq25.gif"/></alternatives></inline-formula>.</p>
        </sec>
      </sec>
      <sec id="Sec15">
        <title>Non-symmetrical proposal distributions</title>
        <p>We investigate two non-symmetric recombinations where the alleles are exchanged between parents but, this time, the distance between parents and children is not preserved</p>
        <sec id="Sec16">
          <title>The masked recombination</title>
          <p>This recombination swaps the alleles between two parents like the parameterized recombination but it generates one child instead of two. Then, the distance between parents, in general, is not same with the distance between the child and one of the parents. Thus, the recombination is not symmetrical. We call this recombination the <italic>masked recombination</italic>, <italic>Q</italic><sub><italic>mask</italic></sub>.</p>
          <p>A child <bold>y</bold><sub><italic>i</italic></sub> is generated from a parent, <inline-formula id="IEq26"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_i$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq26.gif"/></alternatives></inline-formula>, and a mask, <inline-formula id="IEq27"><alternatives><tex-math id="M44">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_{i+1}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq27.gif"/></alternatives></inline-formula>. The common alleles of <inline-formula id="IEq28"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_i$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq28.gif"/></alternatives></inline-formula> and <inline-formula id="IEq29"><alternatives><tex-math id="M46">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_{i+1}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq29.gif"/></alternatives></inline-formula> are passed to <bold>y</bold><sub><italic>i</italic></sub>, but the non-common alleles are flipped in <inline-formula id="IEq30"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_i$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq30.gif"/></alternatives></inline-formula> with the rate <italic>p</italic><sub><italic>x</italic></sub>. Note that this crossover and the parameterized uniform crossover have the same probabilities to generate one child. But, <italic>Q</italic><sub><italic>unif</italic></sub> is symmetrical and <italic>Q</italic><sub><italic>mask</italic></sub> is not symmetrical, because <italic>Q</italic><sub><italic>mask</italic></sub> generates only one child. Consequently, we have to compute the probabilities to generate a candidate individual with <italic>Q</italic><sub><italic>mask</italic></sub> in the acceptance rule of the MH algorithm. <italic>Q</italic><sub><italic>mask</italic></sub> also resembles <italic>Q</italic><sub><italic>dif</italic></sub> where two parents are identical. However, by replacing the identical parents with the child in the candidate generation, the symmetry condition does not hold.</p>
          <p><bold><bold>Proposition 4</bold></bold><italic>Q</italic><sub><italic>mask</italic></sub><italic>is reducible and stationary. Consider that from a parent</italic><inline-formula id="IEq31"><alternatives><tex-math id="M48">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_i$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq31.gif"/></alternatives></inline-formula><italic>and a mask</italic><inline-formula id="IEq32"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_{i+1}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq32.gif"/></alternatives></inline-formula><italic>we generate a child</italic>, <bold>y</bold><sub><italic>i</italic></sub><italic>with</italic><italic>Q</italic><sub><italic>mask</italic></sub><italic>. Then</italic>, <italic>Q</italic><sub><italic>mask</italic></sub><italic>is non-symmetrical. The time complexity to generate a child with</italic><italic>Q</italic><sub><italic>mask</italic></sub><italic>is linear with the string size</italic><inline-formula id="IEq33"><alternatives><tex-math id="M50">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\ell, {\mathcal{O}}(\ell)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq33.gif"/></alternatives></inline-formula>.</p>
          <p><bold><italic>Proof</italic></bold> Let&#x2019;s consider that <inline-formula id="IEq34"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_i \neq y_i$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq34.gif"/></alternatives></inline-formula> because bits are flipped on some positions. In those positions, the mask <inline-formula id="IEq35"><alternatives><tex-math id="M52">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_{i+1}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq35.gif"/></alternatives></inline-formula> and the child <bold>y</bold><sub><italic>i</italic></sub> have the same values, whereas <inline-formula id="IEq36"><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_i$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq36.gif"/></alternatives></inline-formula> and <inline-formula id="IEq37"><alternatives><tex-math id="M54">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_{i+1}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq37.gif"/></alternatives></inline-formula> do not. Then, it is impossible to generate <inline-formula id="IEq38"><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_i$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq38.gif"/></alternatives></inline-formula> from <bold>y</bold><sub><italic>i</italic></sub> and <inline-formula id="IEq39"><alternatives><tex-math id="M56">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_{i+1}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq39.gif"/></alternatives></inline-formula>. The rest of the properties follow directly. <inline-formula id="IEq40"><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\square$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq40.gif"/></alternatives></inline-formula></p>
        </sec>
        <sec id="Sec17">
          <title>Recombination using probabilistic models</title>
          <p>This recombination builds a probabilistic model of the parents to generate the children. It is analogous with the operator that generates individuals for the estimation distribution (EDA) algorithms applied in Evolutionary Computation for solving optimization problems [<xref ref-type="bibr" rid="CR19">19</xref>].</p>
          <p>We propose the <italic>tree frequencies probabilistic recombination</italic>, <italic>Q</italic><sub><italic>tree</italic></sub>, closely related with the probabilistic model of Baluja [<xref ref-type="bibr" rid="CR2">2</xref>]. Unlike the previous recombination operators where an allele is generated only given the alleles on the same position, <italic>Q</italic><sub><italic>tree</italic></sub> considers the dependencies between two positions in the population using the Chow and Liu [<xref ref-type="bibr" rid="CR4">4</xref>] algorithm.</p>
          <p>In the following, we describe the algorithm we use to generate individuals with <italic>Q</italic><sub><italic>tree</italic></sub>. This algorithm constructs from the population of current individuals a tree with maximum entropy using a mutual information function. The entropy describes the level of uncertainty in a statistical variable. Here, the frequencies of the alleles in a position define a statistical variable for that position. Mutual information captures the extent to which two statistical variables are dependent. This algorithm keeps adding dependencies between variables based upon their mutual information under the constraint of building a tree (e.g., there are no cyclic paths between variables). The higher the mutual information is, the sooner the algorithm tries to add the dependency in the tree.</p>
          <p>A root for this tree is chosen at random from the set of positions. The allele for the root position is chosen based on its frequencies in the current population. We iteratively generate the other alleles based on their dependency with an allele&#x2014;called parent&#x2014;which was already instantiated in the tree. If <italic>h</italic> is the root of the tree, then the allele <bold>y</bold><sub><italic>ih</italic></sub> is generated using the distribution <italic>N</italic>(<bold>y</bold><sub><italic>ih</italic></sub>)/<italic>N</italic>, where <italic>N</italic>(<bold>y</bold><sub><italic>ih</italic></sub>) is the number of alleles <bold>y</bold><sub><italic>ih</italic></sub> in the current population. Otherwise, if <italic>h</italic> has the parent <italic>h</italic><sub>1</sub> in the tree, then the allele <bold>y</bold><sub><italic>ih</italic></sub> is generated with the probability <inline-formula id="IEq41"><alternatives><tex-math id="M58">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\frac{N({\bf y}_{ih},{\bf y}_{ih_1})}{N({\bf y}_{ih_1})}}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq41.gif"/></alternatives></inline-formula> where <inline-formula id="IEq42"><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf y}_{ih_1}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq42.gif"/></alternatives></inline-formula> is the allele already generated in position <italic>h</italic><sub>1</sub>, and <inline-formula id="IEq43"><alternatives><tex-math id="M60">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N({\bf y}_{ih},{\bf y}_{ih_1})$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq43.gif"/></alternatives></inline-formula> is the number of individuals in the current population that have allele <bold>y</bold><sub><italic>ih</italic></sub> on position <italic>h</italic> and allele <inline-formula id="IEq44"><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf y}_{ih_1}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq44.gif"/></alternatives></inline-formula> in position <italic>h</italic><sub>1</sub>.</p>
          <p>We observe that <italic>Q</italic><sub><italic>tree</italic></sub> is the most expensive recombinative proposal distribution we have investigated for EMCMC. Unlike the other discrete space recombinations, <italic>Q</italic><sub><italic>tree</italic></sub> exploits some relationships between dimensions: it computes the dependencies between two positions in order to construct the tree of maximum entropy and to assign a value to an allele. Then, the generation of an allele on a position also depends on the alleles on another position.</p>
          <p><bold><bold>Proposition 5</bold></bold><italic>Q</italic><sub><italic>tree</italic></sub><italic>is respectful, non-symmetrical, stationary and biases the exploration according to the non-linear correlations between dimensions. The computational complexity to generate a child with</italic><italic>Q</italic><sub><italic>tree</italic></sub><italic>is</italic><inline-formula id="IEq45"><alternatives><tex-math id="M62">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathcal{O}}(\ell^2 \cdot N)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq45.gif"/></alternatives></inline-formula><italic>, where</italic><italic>l</italic><italic>is the dimensionality and</italic><italic>N</italic><italic>the size of the population</italic>.</p>
          <p><bold><italic>Proof</italic></bold> When an individual is generated with <italic>Q</italic><sub><italic>tree</italic></sub> and replaces a parent, some allele frequencies can increase at the cost of the others. The computational complexity of this operator is given by building the maximum log-likelihood tree. Chow and Liu [<xref ref-type="bibr" rid="CR4">4</xref>] show that this is <inline-formula id="IEq46"><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathcal{O}}(\ell^2 \cdot N)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq46.gif"/></alternatives></inline-formula>. <inline-formula id="IEq47"><alternatives><tex-math id="M64">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\square$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq47.gif"/></alternatives></inline-formula></p>
          <p><italic>Q</italic><sub><italic>tree</italic></sub> is a generalization of Laskey and Myers [<xref ref-type="bibr" rid="CR15">15</xref>]&#x2019;s recombination proposal distribution; when generating an allele, they consider only the frequencies of the alleles on the same position and not also on the other positions as <italic>Q</italic><sub><italic>tree</italic></sub> does. Therefore, their recombination, unlike <italic>Q</italic><sub><italic>tree</italic></sub>, does not exploit the relationships between dimensions.</p>
        </sec>
      </sec>
      <sec id="Sec18">
        <title>Irreducible recombinative proposal distributions</title>
        <p>Since respectful recombination by definition is reducible, in the following, we study how to combine it with mutation to obtain irreducible proposal distributions. We combine the proposal distributions following the same simple mathematical rules as for transition distributions. We study the properties (like symmetry and irreducibility) of the resulting proposal distributions. We show some examples where the properties of the component proposal distributions are inherited by the complex proposal distribution. However, in general, we have to check the properties for each distribution.</p>
        <p>We combine mutation and recombination in mixtures and cycles.</p>
        <p><bold><bold>Definition 3</bold></bold> A <italic>mixture of proposal distributions</italic> is a probabilistic sum of proposal distributions where each step one distribution is selected according to some constant positive probability. A <italic>cycle of proposal distributions</italic> is the product of proposal distributions where in each step one distribution is used in turn in a specific order.</p>
        <sec id="Sec19">
          <title>Mixtures</title>
          <p><bold><bold>Proposition 6</bold></bold><italic>In a mixture of proposal distributions, if one distribution is irreducible, then the mixture is irreducible. A mixture is symmetrical if the component distributions are symmetrical. A mixture is stationary if all component distributions are stationary</italic>.</p>
          <p><bold><italic>Proof</italic></bold> If one distribution is irreducible, then there exists a non-zero probability to generate any population from any other population. The rest of the properties follows directly.<inline-formula id="IEq48"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\square$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq48.gif"/></alternatives></inline-formula></p>
          <p>For example, the following mixture<disp-formula id="Equm"><alternatives><tex-math id="M66">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ Q_{m +r} = (1-p_r) \cdot Q_m +p_r \cdot Q_r $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equm.gif" position="anchor"/></alternatives></disp-formula>is irreducible when <italic>p</italic><sub><italic>r</italic></sub>&#xA0;&lt;&#xA0;1, and symmetrical when the recombination is symmetrical. Note that the above operator is equivalent to recombination, <italic>Q</italic><sub><italic>m</italic>+<italic>r</italic></sub>&#xA0;=&#xA0;<italic>Q</italic><sub><italic>r</italic></sub>, for <italic>p</italic><sub><italic>r</italic></sub>&#xA0;=&#xA0;1; then, like recombination, <italic>Q</italic><sub><italic>m</italic>+<italic>r</italic></sub> is reducible. Note that the computational cost of a mixture of proposal distributions is driven by the most expensive component proposal distribution. Furthermore, a mixture exploits some relationships between dimensions if a component proposal distribution does.</p>
        </sec>
        <sec id="Sec20">
          <title>Cycles</title>
          <p>Unlike for mixtures, for cycles, there are no rules for irreducibility or symmetry. They have to be checked for each cycle. Cycles of proposal distributions are common for the standard GAs where one considers first mutation and then recombination, <italic>Q</italic><sub><italic>m</italic>&#xD7;<italic>r</italic></sub>, or first recombination and then mutation, <italic>Q</italic><sub><italic>r</italic>&#xD7;<italic>m</italic></sub>.<disp-formula id="Equn"><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ Q_{m \times r} = Q_r \times Q_m ; \quad  Q_{r \times m} = Q_m \times Q_r $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equn.gif" position="anchor"/></alternatives></disp-formula>In general, since two matrices usually do not commute, <italic>Q</italic><sub><italic>m</italic>&#xD7;<italic>r</italic></sub> and <italic>Q</italic><sub><italic>r</italic>&#xD7;<italic>m</italic></sub> are non-symmetrical.</p>
          <p><bold><bold>Proposition 7</bold></bold><italic>Q</italic><sub><italic>m</italic>&#xD7;<italic>r</italic></sub><italic>and</italic><italic>Q</italic><sub><italic>r</italic>&#xD7;<italic>m</italic></sub><italic>, are symmetrical for any recombination that swaps alleles</italic> [<xref ref-type="bibr" rid="CR17">17</xref>]. <italic>Q</italic><sub><italic>m</italic>&#xD7;<italic>dif</italic></sub><italic>and</italic><italic>Q</italic><sub><italic>dif</italic>&#xD7;<italic>m</italic></sub><italic>are non-symmetrical</italic>. <italic>Q</italic><sub><italic>m</italic>&#xD7;<italic>r</italic></sub><italic>and</italic><italic>Q</italic><sub><italic>r</italic>&#xD7;<italic>m</italic></sub><italic>are irreducible and stationary. If the recombination</italic><italic>Q</italic><sub><italic>r</italic></sub><italic>is symmetrical, we have</italic><disp-formula id="Equo"><alternatives><tex-math id="M68">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ Q_{m \times r}({\bf Y} \mid {\bf X}^{(t)}) = Q_{r\times m}({\bf X}^{(t)} \mid {\bf Y}) $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equo.gif" position="anchor"/></alternatives></disp-formula></p>
          <p>To ease the reading of the paper, we give the proof for the above proposition in Appendix <xref rid="Sec38" ref-type="sec">1</xref>.</p>
          <p>Parallel Recombinative Simulated Annealing (PRSA) [<xref ref-type="bibr" rid="CR17">17</xref>] uses recombination that swaps alleles followed by mutation. Note that it is impractical to compute the probabilities of a cycle: we have to sum over all possible intermediate populations. Therefore, in general, it is impractical to use non-symmetrical cycles. In the following, we show two cycles where the above non-symmetrical recombinations are efficiently combined with uniform mutation directly on each position of an individual.</p>
          <p>Consider a parent <inline-formula id="IEq49"><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_i$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq49.gif"/></alternatives></inline-formula> and a mask <inline-formula id="IEq50"><alternatives><tex-math id="M70">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_{i+1}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq50.gif"/></alternatives></inline-formula> chosen at random from the population. Like for <italic>Q</italic><sub><italic>mask</italic></sub>, for the non-common values of the two parents, <inline-formula id="IEq51"><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_i$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq51.gif"/></alternatives></inline-formula> is flipped with the probability <italic>p</italic><sub><italic>x</italic></sub> to generate the child <bold>y</bold><sub><italic>i</italic></sub>. Unlike for <italic>Q</italic><sub><italic>mask</italic></sub>, for the common parts of these parents, <inline-formula id="IEq52"><alternatives><tex-math id="M72">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_i$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq52.gif"/></alternatives></inline-formula> is flipped with the low probability 1/&#x2113; to generate the child <bold>y</bold><sub><italic>i</italic></sub>. We generate from the mask <inline-formula id="IEq53"><alternatives><tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_{i+1}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq53.gif"/></alternatives></inline-formula> a second child <bold>y</bold><sub><italic>i</italic>+1</sub> with the uniform mutation with the mutation rate <italic>p</italic><sub><italic>m</italic></sub>. We denote this proposal distribution with <italic>Q</italic><sub><italic>m</italic>&#xD7;<italic>mask</italic></sub> where<disp-formula id="Equp"><alternatives><tex-math id="M74">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \begin{aligned} &amp;Q_{m \times mask}({\bf y}_i,{\bf y}_{i+1} \mid {\bf x}^{(t)}_i, {\bf x}^{(t)}_{i+1})\\ &amp; = Q_{mask}({\bf y}_i \mid {\bf x}^{(t)}_i, {\bf x}^{(t)}_{i+1}) \times Q_{m}({\bf y}_{i+1} \mid {\bf x}^{(t)}_{i+1}) \end{aligned} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equp.gif" position="anchor"/></alternatives></disp-formula>In the next proposition we show that <italic>Q</italic><sub><italic>m</italic>&#xD7;<italic>mask</italic></sub>, unlike <italic>Q</italic><sub><italic>mask</italic></sub>, can be used with an MH algorithm. Furthermore, although it is a cycle, its computational time is similar with the one of uniform mutation.</p>
          <p><bold><bold>Proposition 8</bold></bold><italic>Q</italic><sub><italic>m</italic>&#xD7;<italic>mask</italic></sub><italic>is irreducible</italic>. <italic>Q</italic><sub><italic>m</italic>&#xD7;<italic>mask</italic></sub><italic>is symmetrical if</italic><italic>p</italic><sub><italic>m</italic></sub>&#xA0;=&#xA0;1/2 <italic>or</italic><italic>p</italic><sub><italic>x</italic></sub>&#xA0;=&#xA0;1/&#x2113;<italic>. If</italic><italic>p</italic><sub><italic>m</italic></sub>&#xA0;&#x2260;&#xA0;1/2 <italic>and</italic><italic>p</italic><sub><italic>x</italic></sub>&#xA0;&#x2260;&#xA0;1/&#x2113; <italic>then</italic><italic>Q</italic><sub><italic>m</italic>&#xD7;<italic>mask</italic></sub><italic>is non-symmetrical. The time complexity of</italic><italic>Q</italic><sub><italic>m</italic>&#xD7;<italic>mask</italic></sub><italic>is linear with the string size</italic><inline-formula id="IEq54"><alternatives><tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\ell, {\mathcal{O}}(\ell)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq54.gif"/></alternatives></inline-formula>.</p>
          <p>The prove is given in Appendix <xref rid="Sec39" ref-type="sec">2</xref> to ease the reading of the paper.</p>
          <p>Similarly, we combine the tree frequencies probabilistic recombination, <italic>Q</italic><sub><italic>tree</italic></sub>, with the uniform mutation in a cycle to be able to use it with the MH algorithm. We first construct the maximum entropy tree. We choose at random a position, <italic>h</italic>, which we consider the root, we propose an allele <bold>y</bold><sub><italic>ih</italic></sub> with the probability <inline-formula id="IEq55"><alternatives><tex-math id="M76">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(N({\bf y}_{ih}) +1)/(N +|\Upomega({\bf x}_{\cdot\cdot})|)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq55.gif"/></alternatives></inline-formula>. Iteratively, we propose an allele <bold>y</bold><sub><italic>ih</italic></sub> with the probability<disp-formula id="Equq"><alternatives><tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ (N({\bf y}_{ih},{\bf y}_{ih_1}) +1)/(N({\bf y}_{ih_1})) +|\Upomega({\bf x}_{\cdot\cdot})|) $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equq.gif" position="anchor"/></alternatives></disp-formula>where the allele on the position <italic>h</italic><sub>1</sub>, <bold>y</bold><sub><italic>ih</italic>_1</sub>, is already instantiated. We denote this operator with <inline-formula id="IEq56"><alternatives><tex-math id="M78">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Q_{m \times tree} = (Q_{tree} +1/N)/(1 +\Upomega({\bf x}_{\cdot\cdot})/N)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq56.gif"/></alternatives></inline-formula>. Like <italic>Q</italic><sub><italic>tree</italic></sub> and unlike the other proposal distributions, <italic>Q</italic><sub><italic>m</italic>&#xD7;<italic>tree</italic></sub> exploits some relationships between different dimensions.</p>
          <p><bold><bold>Proposition 9</bold></bold><italic>Q</italic><sub><italic>m</italic>&#xD7;<italic>tree</italic></sub><italic>is irreducible and non-symmetrical. The time complexity to generate an individual with</italic><italic>Q</italic><sub><italic>m</italic>&#xD7;<italic>tree</italic></sub><italic>is</italic><inline-formula id="IEq57"><alternatives><tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathcal{O}}(\ell^2 \cdot N)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq57.gif"/></alternatives></inline-formula><italic>, where</italic> &#x2113; <italic>is the string size and</italic><italic>N</italic><italic>the population size</italic>.</p>
          <p><bold><italic>Proof</italic></bold> The proof is immediate.<inline-formula id="IEq58"><alternatives><tex-math id="M80">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\square$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq58.gif"/></alternatives></inline-formula></p>
          <p>In Table&#xA0;<xref rid="Tab1" ref-type="table">1</xref> we present the operators composed from mutation and/or recombination, their irreducibility, their symmetry, and their number of parents compared with the number of children.<table-wrap id="Tab1"><label>Table&#xA0;1</label><caption><p>Properties of several mutation/recombination operators: if they are irreducible or not, symmetrical, and how many children are generated from how many parents</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Type op</th><th align="left">Op</th><th align="left">Irred</th><th align="left">Symmetry</th><th align="left">Par/child</th></tr></thead><tbody><tr><td align="left">Mut</td><td align="left"><italic>Q</italic><sub><italic>m</italic></sub></td><td align="left">Irred</td><td align="left">Symm</td><td align="left">1/1</td></tr><tr><td align="left" rowspan="4"/><td align="left"><italic>Q</italic><sub><italic>unif</italic></sub></td><td align="left">Red</td><td align="left">Symm</td><td align="left">2/2</td></tr><tr><td align="left"><italic>Q</italic><sub><italic>dif</italic></sub></td><td align="left">Red</td><td align="left">Symm</td><td align="left">3/1</td></tr><tr><td align="left"><italic>Q</italic><sub><italic>mask</italic></sub></td><td align="left">Red</td><td align="left">Non-symm</td><td align="left">2/1</td></tr><tr><td align="left"><italic>Q</italic><sub><italic>tree</italic></sub></td><td align="left">Red</td><td align="left">Non-symm</td><td align="left">N/1</td></tr><tr><td align="left" rowspan="4">Mixture cycle</td><td align="left"><italic>Q</italic><sub><italic>m</italic>+<italic>&#xA0;unif</italic></sub></td><td align="left">Irred</td><td align="left">Symm</td><td align="left">2/2</td></tr><tr><td align="left"><italic>Q</italic><sub><italic>m</italic>&#xD7;<italic>unif</italic></sub></td><td align="left">Irred</td><td align="left">Symm</td><td align="left">2/2</td></tr><tr><td align="left"><italic>Q</italic><sub><italic>m</italic>&#xD7;<italic>mask</italic></sub></td><td align="left">Irred</td><td align="left">Non-symm</td><td align="left">2/1</td></tr><tr><td align="left"><italic>Q</italic><sub><italic>m</italic>&#xD7;<italic>tree</italic></sub></td><td align="left">Irred</td><td align="left">Non-symm</td><td align="left">N/1</td></tr></tbody></table></table-wrap></p>
        </sec>
      </sec>
    </sec>
    <sec id="Sec21">
      <title>MH acceptance rules for recombinative EMCMC</title>
      <p>In this section we propose various MH acceptance rules and we discuss the properties of EMCMC algorithms resulting from the interaction between the recombinative operators and these acceptance rules.</p>
      <sec id="Sec22">
        <title>Detailed balance: all children accepted or all rejected</title>
        <p>We establish that the EMCMCs that generate individuals with irreducible recombinative proposal distributions and accept/reject them all has detailed balance and the target distribution for this EMCMC.</p>
        <p><bold><bold>Theorem 1</bold></bold><italic>Consider the EMCMC algorithm that proposes</italic><italic>N</italic> &#x2265;&#xA0;2 <italic>children</italic>, <bold>Y</bold>&#xA0;=&#xA0;(<bold>y</bold><sub>1</sub>,&#x2026;,&#xA0;<bold>y</bold><sub><italic>N</italic></sub>) <italic>from</italic><italic>N</italic><italic>parents</italic>, <inline-formula id="IEq59"><alternatives><tex-math id="M81">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf X}^{(t)} = ({\bf x}^{(t)}_1, \ldots, {\bf x}^{(t)}_N)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq59.gif"/></alternatives></inline-formula><italic>using a irreducible proposal distribution</italic><italic>Q</italic><italic>that is independent of the target distribution. All children are accepted or all children are rejected with the probability</italic><disp-formula id="Equr"><alternatives><tex-math id="M82">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \alpha_C({\bf Y} \mid {\bf X}^{(t)})= \hbox{min}{\left(1,{\frac{\hat{P}_1({\bf y}_1) \cdot \ldots \cdot \hat{P}_N({\bf y}_N)}{\hat{P}_1({\bf x}^{(t)}_1) \cdot \ldots \cdot \hat{P}_N({\bf x}^{(t)}_N)}} \cdot {\frac{Q({\bf X}^{(t)} \mid {\bf Y})}{Q({\bf Y} \mid {\bf X}^{(t)})}}\right)} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equr.gif" position="anchor"/></alternatives></disp-formula></p>
        <p>This EMCMC is ergodic with unique stationary distribution <italic>P</italic><sub>1</sub>(&#xB7;)&#xD7;&#x22EF;&#xD7;<italic>P</italic><sub><italic>N</italic></sub>(&#xB7;), where <italic>P</italic><sub><italic>i</italic></sub>(&#xB7;) is the unique stationary marginal distribution for the <italic>i</italic>th chain, &#x2200;<italic>i</italic>&#xA0;=&#xA0;1,&#x2026;,&#xA0;<italic>N</italic>.</p>
        <p>The prove is given in Appendix <xref rid="Sec40" ref-type="sec">3</xref> to ease the reading of the paper.</p>
        <p>Note that the EMCMC resulting from the interaction between the proposal distribution <italic>Q</italic> and the MH acceptance rule &#x3B1;<sub><italic>C</italic></sub> is an MCMC over the <italic>N</italic> dimensional search space <italic>E</italic><sup><italic>N</italic></sup>. We denote the transition matrix for this EMCMC algorithm with <italic>K</italic><sub><italic>C</italic></sub>. The transition probability between a candidate state <bold>Y</bold> and the current state <bold>X</bold><sup>(<italic>t</italic>)</sup> is <inline-formula id="IEq60"><alternatives><tex-math id="M83">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$K_C({\bf Y} \mid {\bf X}^{(t)}) = \alpha_C({\bf Y} \mid {\bf X}^{(t)}) \cdot Q({\bf Y} \mid {\bf X}^{(t)})$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq60.gif"/></alternatives></inline-formula> and the rejection probability is <inline-formula id="IEq61"><alternatives><tex-math id="M84">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$K_{C}({\bf X}^{(t)} \mid {\bf X}^{(t)}) = 1 - \sum_{Y \neq X^{(t)}} K_C({\bf Y} \mid {\bf X}^{(t)})$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq61.gif"/></alternatives></inline-formula>.</p>
        <sec id="Sec23">
          <title>Two examples</title>
          <p><bold>The coupled acceptance rule</bold>. The coupled acceptance rule &#x3B1;<sub><italic>C</italic></sub> [<xref ref-type="bibr" rid="CR11">11</xref>, <xref ref-type="bibr" rid="CR16">16</xref>] considers for acceptance two chains. Two children, <bold>y</bold><sub>1</sub> and <bold>y</bold><sub>2</sub>, generated from two parents, <inline-formula id="IEq62"><alternatives><tex-math id="M85">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_1$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq62.gif"/></alternatives></inline-formula> and <inline-formula id="IEq63"><alternatives><tex-math id="M86">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_{2}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq63.gif"/></alternatives></inline-formula>, are both accepted or rejected with the coupled acceptance rule <inline-formula id="IEq64"><alternatives><tex-math id="M87">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha_{C}({\bf y}_{1},{\bf y}_{2} \mid {\bf x}^{(t)}_1,{\bf x}^{(t)}_{2})$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq64.gif"/></alternatives></inline-formula>.</p>
          <p>When &#x3B1;<sub><italic>C</italic></sub> is associated with one of the irreducible recombinative proposal distributions&#x2014;for instance <italic>Q</italic><sub><italic>m</italic>&#xD7;<italic>unif</italic></sub> and <italic>Q</italic><sub><italic>m</italic>+<italic>unif</italic></sub> that generates two children from two parents&#x2014;according with Theorem 1, the EMCMC algorithm has detailed balance and samples from the target distribution <italic>P</italic><sub>1</sub>(&#xB7;)&#xD7;<italic>P</italic><sub>2</sub>(&#xB7;).</p>
          <p><bold><bold>Corollary 2</bold></bold><italic>Consider the EMCMC algorithm that proposes two children from two parents using an irreducible proposal distribution</italic><italic>Q</italic><italic>and accepts/rejects the children using the coupled acceptance rule</italic> &#x3B1;<sub><italic>C</italic></sub>. <italic>We denote the corresponding transition matrix with</italic><italic>K</italic><sub><italic>C</italic></sub>. <italic>This EMCMC converges to</italic><italic>P</italic><sub>1</sub>(&#xB7;)&#xD7;<italic>P</italic><sub>2</sub>(&#xB7;)<italic>, where</italic><italic>P</italic><sub><italic>i</italic></sub>(&#xB7;) <italic>is the marginal distribution of the</italic><italic>i</italic><italic>-th chain</italic><italic>i</italic>&#xA0;=&#xA0;1,2.</p>
          <p>However, in practice, such an acceptance rule is not always desired, since it is not selective at individual level. For example, usually, individuals with higher and lower probabilities are proposed; with &#x3B1;<sub><italic>C</italic></sub> the fit individuals can be rejected and the acceptance of less fit individuals depends on the family&#x2019;s fit individuals.</p>
          <p>Note that the target distribution of this EMCMC is given by the product of distributions in the MH acceptance rule. By replacing this product with other mathematical functions (e.g., maximum of two values as in the next example), the corresponding EMCMC converges to a different distribution. </p>
          <p><bold>The order two statistics acceptance rule</bold> To sample from the <italic>order two statistics</italic> distribution</p>
          <p><disp-formula id="Equs"><alternatives><tex-math id="M88">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ P_{2:1}(\cdot,\cdot) = \max \left\{P(\cdot),P(\cdot)\right\} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equs.gif" position="anchor"/></alternatives></disp-formula>we create a variant of the coupled acceptance rule<disp-formula id="Equt"><alternatives><tex-math id="M89">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \alpha_{2:1}({\bf y}_i,{\bf y}_{j} \mid {\bf x}^{(t)}_i,{\bf x}^{(t)}_{j}) = \hbox{min} \left\{1,{\frac{\max(\hat{P}({\bf y}_i),\hat{P}({\bf y}_{j}))} {\max(\hat{P}({\bf x}^{(t)}_i),\hat{P}({\bf x}^{(t)}_{j}))}} \cdot {\frac{Q({\bf x}^{(t)}_i,{\bf x}^{(t)}_{j} \, \mid \, {\bf y}_i,{\bf y}_{j})}{Q({\bf y}_i,{\bf y}_{j} \, \mid \, {\bf x}^{(t)}_i,{\bf x}^{(t)}_{j})}}\right\} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equt.gif" position="anchor"/></alternatives></disp-formula>where max is the maximum for the values of two individuals, and <inline-formula id="IEq65"><alternatives><tex-math id="M90">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Q(\cdot \mid \cdot)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq65.gif"/></alternatives></inline-formula> is any proposal distribution.</p>
          <p>According to Lemma1, an EMCMC that proposes two candidate individuals from two parents and accepts/rejects them both with &#x3B1;<sub>2:1</sub> has detailed balance. If the proposal distribution is also irreducible, this EMCMC converges to the stationary distribution <italic>P</italic><sub>2:1</sub>(&#xB7;,&#xB7;).</p>
        </sec>
        <sec id="Sec24">
          <title>Detailed balance at population level</title>
          <p>Most EMCMCs use family recombinations where, each generation, all individuals are randomly grouped such that each individual belongs to exactly one group. If the children generated with recombination are all accepted or all rejected with an acceptance rule as suggested in Theorem 1, we obtain <italic>family transition probabilities</italic> with detailed balance. At individual or family level, these transitions are not MCMCs, since their proposal probabilities are not stationary&#x2014;they depend on how the individuals are grouped. At population level, for all possible groupings of the current population, the transition distribution is stationary. Then, the <italic>population transition probabilities</italic> obtained by combining the family transitions have detailed balance and define an MCMC.</p>
        </sec>
      </sec>
      <sec id="Sec25">
        <title>The standard MH acceptance rule in recombinative EMCMCs</title>
        <p>In the following, we investigate the properties of EMCMCs that use irreducible recombinative proposal distributions and the standard MH acceptance rule. Such an EMCMC does not fit in the standard MH framework where the individuals that interact in the proposal distribution also interact in the acceptance rule. For this EMCMC individuals interact in the proposal distribution but children are accepted/rejected individually given only one parent.</p>
        <p>To ease the reading, we consider that two children, <bold>y</bold><sub>1</sub> and <bold>y</bold><sub>2</sub>, are generated with a symmetrical proposal distribution <italic>Q</italic> from two parents <inline-formula id="IEq66"><alternatives><tex-math id="M91">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_1$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq66.gif"/></alternatives></inline-formula> and <inline-formula id="IEq67"><alternatives><tex-math id="M92">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_2$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq67.gif"/></alternatives></inline-formula>. Each child is accepted/rejected given one of the parents, randomly chosen without replacement, with the standard Metropolis acceptance rules, <inline-formula id="IEq68"><alternatives><tex-math id="M93">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha({\bf y}_i \mid {\bf x}^{(t)}_i) = \hbox{min}{(1,{\frac{\hat{P}_i({\bf y}_i)} {\hat{P}_i({\bf x}^{(t)}_i)}})}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq68.gif"/></alternatives></inline-formula>. Let&#x2019;s denote with <italic>K</italic><sub>1.1</sub> the resulting transition matrix. The transition probability to accept both children is<disp-formula id="Equu"><alternatives><tex-math id="M94">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \begin{aligned} &amp; K_{1.1}({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \\ &amp; \quad = Q({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \cdot \alpha({\bf y}_1 \mid {\bf x}^{(t)}_1) \cdot \alpha({\bf y}_2 \mid {\bf x}^{(t)}_2) \end{aligned}  $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equu.gif" position="anchor"/></alternatives></disp-formula>The transition probability to accept only one child (i.e., <bold>y</bold><sub>1</sub>) and to reject the other child is<disp-formula id="Equv"><alternatives><tex-math id="M95">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \begin{aligned} &amp; K_{1.1}({\bf y}_1, {\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2)\\ &amp; \quad = \sum_{{\bf y}_2} Q({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \cdot \alpha({\bf y}_1 \mid {\bf x}^{(t)}_1) \cdot \lbrack 1 - \alpha({\bf y}_2 \mid {\bf x}^{(t)}_2) \rbrack \end{aligned}$$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equv.gif" position="anchor"/></alternatives></disp-formula>The rejection probability of both candidate states is<disp-formula id="Equw"><alternatives><tex-math id="M96">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \begin{aligned} &amp;K_{1.1}({\bf x}^{(t)}_1, {\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2)\\ &amp; \quad = \sum_{{\bf y}_1,{\bf y}_2} Q({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \cdot \lbrack 1 - \alpha({\bf y}_1 \mid {\bf x}^{(t)}_1) \rbrack \cdot \lbrack 1 - \alpha({\bf y}_2 \mid {\bf x}^{(t)}_2) \rbrack \end{aligned}$$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equw.gif" position="anchor"/></alternatives></disp-formula>To analyze the behavior of this EMCMC, we compare its transition distribution with <italic>K</italic><sub><italic>C</italic></sub>, which we showed in Theorem 1 that it converges to the target distribution. We show that even though the acceptance and rejection transition probabilities are similar, <italic>K</italic><sub><italic>C</italic></sub> samples from the target distribution and <italic>K</italic><sub>1.1</sub> does not.</p>
        <p><bold><bold>Proposition 10</bold></bold><italic>Consider the two transition distributions</italic><italic>K</italic><sub><italic>C</italic></sub><italic>and</italic><italic>K</italic><sub>1.1</sub><italic>, the coupled acceptance rule</italic> &#x3B1;<sub><italic>C</italic></sub><italic>, the standard Metropolis acceptance rule</italic> &#x3B1; <italic>as before. Let&#x2019;s further consider two parents</italic><inline-formula id="IEq69"><alternatives><tex-math id="M97">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$({\bf x}^{(t)}_1,{\bf x}^{(t)}_2)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq69.gif"/></alternatives></inline-formula><italic>and their two children</italic> (<bold>y</bold><sub>1</sub>, <bold>y</bold><sub>2</sub>) <italic>generated with an irreducible symmetrical proposal distribution</italic><italic>Q</italic>.<italic>The probability to accept a child that it fitter than one of its parents</italic>, <inline-formula id="IEq70"><alternatives><tex-math id="M98">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{P}({\bf y}_1) &gt; \hat{P}({\bf x}^{(t)}_1)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq70.gif"/></alternatives></inline-formula><italic>, is higher for</italic><italic>K</italic><sub>1.1</sub><italic>than for</italic><italic>K</italic><sub><italic>C</italic></sub><disp-formula id="Equx"><alternatives><tex-math id="M99">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}  &amp; K_{C}({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2)\\ &amp; \quad \leq K_{1.1}({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2)+K_{1.1}({\bf y}_1, {\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \end{aligned}$$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equx.gif" position="anchor"/></alternatives></disp-formula><italic>The probability to reject a child less fit than one of its parents</italic>, <inline-formula id="IEq71"><alternatives><tex-math id="M100">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{P}({\bf y}_1) &lt; \hat{P}({\bf x}^{(t)}_1)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq71.gif"/></alternatives></inline-formula><italic>, is higher for</italic><italic>K</italic><sub>1.1</sub><italic>than for</italic><italic>K</italic><sub><italic>C</italic></sub><italic>when the second child is more fit than the second parent</italic>, <inline-formula id="IEq72"><alternatives><tex-math id="M101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{P}({\bf y}_2) &gt; \hat{P}({\bf x}^{(t)}_2),$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq72.gif"/></alternatives></inline-formula><disp-formula id="Equy"><alternatives><tex-math id="M102">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} &amp; K_{C}({\bf x}^{(t)}_1, {\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2)\\ &amp; \quad \leq K_{1.1}({\bf x}^{(t)}_1, {\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) +K_{1.1}({\bf x}^{(t)}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \end{aligned} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equy.gif" position="anchor"/></alternatives></disp-formula><italic>The probability to reject a child less fit than one of its parents</italic>, <inline-formula id="IEq73"><alternatives><tex-math id="M103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{P}({\bf y}_1) &lt; \hat{P}({\bf x}^{(t)}_1)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq73.gif"/></alternatives></inline-formula><italic>, is lower for</italic><italic>K</italic><sub>1.1</sub><italic> than for</italic><italic>K</italic><sub><italic>C</italic></sub><italic> when the second child is less fit than the second parent,</italic><inline-formula id="IEq74"><alternatives><tex-math id="M104">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{P}({\bf y}_2) &lt; \hat{P}({\bf x}^{(t)}_2)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq74.gif"/></alternatives></inline-formula>.</p>
        <p><italic>The EMCMC algorithm</italic><italic>K</italic><sub>1.1</sub><italic> has detailed balance if and only if the probability to generate two children from two parents is equal with the probability to generate one child and one parent from the other parent and the other child</italic><disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M105">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ Q({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) = Q({\bf y}_1, {\bf x}^{(t)}_2 \mid {\bf  x}^{(t)}_1, {\bf y}_2) $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula><italic>If Eq.</italic>&#xA0;<xref rid="Equ1" ref-type="">1</xref><italic> holds, the algorithm converges to the target distribution</italic><italic>P</italic><sub>1</sub>&#xA0;(&#xB7;) &#xA0;&#xB7;&#xA0;<italic>P</italic><sub>2</sub>(&#xB7;).</p>
        <p>Again, to ease the reading, we prove this theorem in Appendix <xref rid="Sec41" ref-type="sec">4</xref>.</p>
        <p>According to the above proposition, an MH algorithm that accepts/rejects with the standard MH acceptance rule some, not all, of the individuals generated with some recombinative proposal distribution does exhibit detailed balance only for some particular types of recombinations.</p>
        <p>Equation&#xA0;<xref rid="Equ1" ref-type="">1</xref> holds, for example, for uniform mutation distribution <italic>Q</italic><sub><italic>m</italic></sub> and symmetrical recombination distributions that generate one child [<xref ref-type="bibr" rid="CR8">8</xref>, <xref ref-type="bibr" rid="CR23">23</xref>]. It does not hold for other symmetrical recombinations that generate two or more children, like for example, uniform recombination. With uniform recombination for any four individuals, we have<disp-formula id="Equz"><alternatives><tex-math id="M106">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ Q_{unif}({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1,{\bf x}^{(t)}_2) \neq Q_{unif}({\bf y}_1,{\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1,{\bf y}_2) $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equz.gif" position="anchor"/></alternatives></disp-formula>Unfortunately, if the detailed balance condition does not hold, there is no standard method to know the target distribution.</p>
        <p>It is interesting to notice that the MH algorithms generated with <italic>K</italic><sub>1.1</sub> have a higher probability of acceptance of at least one candidate state than the algorithms generated with <italic>K</italic><sub><italic>C</italic></sub> that accept or reject all individuals at once. As a consequence, for the same proposal distribution, the algorithm determined by <italic>K</italic><sub>1.1</sub> samples faster than an algorithm that uses <italic>K</italic><sub><italic>C</italic></sub>.</p>
      </sec>
      <sec id="Sec26">
        <title>The elitist coupled acceptance rule</title>
        <p>In this section we investigate an acceptance rule inspired from the elitist replacement strategy [<xref ref-type="bibr" rid="CR25">25</xref>] which does not have detailed balance regardless of the proposal distribution used. Furthermore, we show that the marginal distribution of the generated EMCMC is different from the target distribution being amplified for the fit individuals and diminished for the less fit individuals.</p>
        <p>The elitist coupled acceptance rule (ECA) algorithm is a family competitive acceptance rule where the best two solutions from the family of four is kept if at least one of them is a child. Otherwise, when both children have a lower fitness than both their parents, the children can probabilistically replace the parents.</p>
        <p>ECA can be viewed as a combination between the elitist replacement rule from regular GAs and the coupled acceptance rule &#x3B1;<sub><italic>C</italic></sub>. When compared with the elitist replacement, ECA is more exploratory but less elitist since it still accepts with some probability less fit individuals. When compared with &#x3B1;<sub><italic>C</italic></sub> and &#x3B1; acceptance rules, ECA is more elitist but less exploratory. With ECA, if a child and a parent are the two most fit individual states from two parents and their children, they are <italic>always</italic> accepted whereas with &#x3B1; the other child will be accepted with some probability. </p>
        <p>To establish the properties of ECA&#x2019;s target distribution, we compare it with <italic>K</italic><sub><italic>C</italic></sub>. The probability to escape from the basin of attraction of a peak, as we show in the next paragraphs, is rather poor when compared with the transition distribution <italic>K</italic><sub><italic>C</italic></sub> generated with the same proposal distribution and the coupled acceptance rule &#x3B1;<sub><italic>C</italic></sub>. The transition distribution generated by accepting with ECA the individuals proposed with the irreducible proposal distribution <italic>Q</italic> is denoted with <italic>K</italic><sub><italic>ECA</italic></sub>. We call max<sub>2</sub> the function returning the two most fit solutions.</p>
        <p>We distinguish three cases. <list list-type="order"><list-item><p><italic>Both children are better or worse than their parents</italic>. Then<disp-formula id="Equaa"><alternatives><tex-math id="M107">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \left\{{\bf y}_1,{\bf y}_2\right\} = \mathop {\max} \limits_2 {\left\{{\bf x}^{(t)}_1,{\bf x}^{(t)}_2, {\bf y}_1, {\bf y}_2\right\}} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equaa.gif" position="anchor"/></alternatives></disp-formula>or<disp-formula id="Equab"><alternatives><tex-math id="M108">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \left\{{\bf x}^{(t)}_1, {\bf x}^{(t)}_2\right\} = \mathop {\max} \limits_2  \left\{{\bf x}^{(t)}_1,{\bf x}^{(t)}_2, {\bf y}_1, {\bf y}_2\right\} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equab.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq75"><alternatives><tex-math id="M109">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf y}_1 \neq {\bf x^{(t)}_1}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq75.gif"/></alternatives></inline-formula> and <inline-formula id="IEq76"><alternatives><tex-math id="M110">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf y}_2 \neq {\bf x^{(t)}_2}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq76.gif"/></alternatives></inline-formula>. The transition probability to accept or reject both children, {<bold>y</bold><sub>1</sub>, <bold>y</bold><sub>2</sub>}, proposed with the proposal distribution <italic>Q</italic> is non-zero only in this case. Then<disp-formula id="Equac"><alternatives><tex-math id="M111">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ K_{ECA}({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) = Q({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \cdot $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equac.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equad"><alternatives><tex-math id="M112">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \hbox{min}\left\{1, {\frac{\hat{P}({\bf y}_1) \cdot \hat{P}({\bf y}_2)} {\hat{P}({\bf x}^{(t)}_1) \cdot \hat{P}({\bf x}^{(t)}_2)}} \cdot {\frac{Q({\bf x}^{(t)}_1, {\bf x}^{(t)}_2 \mid {\bf y}_1, {\bf y}_2)}{Q({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2)}}\right\} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equad.gif" position="anchor"/></alternatives></disp-formula>Note that in this case, the transition probability of <italic>ECA</italic> is equal with the transition probability of an EMCMC using the coupled acceptance,<disp-formula id="Equae"><alternatives><tex-math id="M113">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ K_C({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) = K_{ECA}({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equae.gif" position="anchor"/></alternatives></disp-formula></p></list-item><list-item><p><italic>One of the children and one of the parents are most fit</italic>. Then, for example,<disp-formula id="Equaf"><alternatives><tex-math id="M114">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \left\{{\bf y}_1,{\bf x}^{(t)}_1\right\} = \mathop {\max} \limits_2  \left\{{\bf x}^{(t)}_1,{\bf x}^{(t)}_2, {\bf y}_1, {\bf y}_2\right\} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equaf.gif" position="anchor"/></alternatives></disp-formula>The transition probability to go from <inline-formula id="IEq77"><alternatives><tex-math id="M115">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left\{{\bf x}^{(t)}_1, {\bf x}^{(t)}_2\right\}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq77.gif"/></alternatives></inline-formula> to {<bold>y</bold><sub>1</sub>,<bold>y</bold><sub>2</sub>} is 0.<disp-formula id="Equag"><alternatives><tex-math id="M116">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ K_{ECA}({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) = 0 $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equag.gif" position="anchor"/></alternatives></disp-formula>Now, <italic>K</italic><sub><italic>C</italic></sub> is larger than 0 and <italic>K</italic><sub><italic>ECA</italic></sub> is 0.</p></list-item><list-item><p><italic>Only one parent is replaced by its child</italic>. The proposal probability where only one parent is replaced in the next generation, <inline-formula id="IEq78"><alternatives><tex-math id="M117">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$K_{ECA}({\bf y}_1, {\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq78.gif"/></alternatives></inline-formula>, is amplified with the sum over all proposal probabilities that generate a state <bold>y</bold><sub>2</sub> such that<disp-formula id="Equah"><alternatives><tex-math id="M118">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \left\{{\bf y}_1,{\bf x}^{(t)}_2\right\} = \max_2\left\{{\bf y}_1,{\bf y}_2,{\bf x}^{(t)}_1,{\bf x}^{(t)}_2\right\} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equah.gif" position="anchor"/></alternatives></disp-formula>Then<disp-formula id="Equai"><alternatives><tex-math id="M119">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ K_{ECA}({\bf y}_1, {\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) = K_C({\bf y}_1, {\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) +\sum_{{\bf y}_2, \left\{{\bf y}_1,{\bf x}^{(t)}_2\right\}  = \max_2\left\{{\bf y}_1,{\bf y}_2,{\bf x}^{(t)}_1,{\bf x}^{(t)}_2\right\}} Q({\bf y}_1, {\bf y}_2 \hbox{v} {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equai.gif" position="anchor"/></alternatives></disp-formula></p></list-item></list></p>
        <p>For irreducible proposal distributions <italic>Q</italic>, this EMCMC algorithm is irreducible because any two individuals can be generated from any other two individuals with a non-zero probability in two iterations of the algorithm <inline-formula id="IEq7900"><alternatives><tex-math id="M120">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ T_{{ECA}^2} (\cdot \mid \cdot) &gt; 0. $$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq7900.gif"/></alternatives></inline-formula> Let&#x2019;s assume again that a child <bold>y</bold><sub>1</sub> and one of the parents <inline-formula id="IEq79"><alternatives><tex-math id="M121">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_2$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq79.gif"/></alternatives></inline-formula> have the largest probabilities. In one iteration<disp-formula id="Equaj"><alternatives><tex-math id="M122">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ K_{ECA}({\bf y}_1, {\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) &gt; 0 $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equaj.gif" position="anchor"/></alternatives></disp-formula>and, for the second iteration, we also have <inline-formula id="IEq7980"><alternatives><tex-math id="M123">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ K_{ECA}({\bf y}_1, {\bf  y}_2 \mid {\bf y}_1, {\bf x}^{(t)}_2) &gt; 0. $$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq7980.gif"/></alternatives></inline-formula></p>
        <p>Following the above observation, we prove that this EMCMC converges to a stationary distribution and also it does not have detailed balance regardless of the proposal distribution. The proof is given in Appendix <xref rid="Sec42" ref-type="sec">5</xref>.</p>
        <p><bold><bold>Proposition 11</bold></bold><italic>Consider the EMCMC algorithm that generates candidate individuals using an irreducible proposal distribution</italic><italic>Q</italic> and then accepts or rejects them with the ECA acceptance rule. This EMCMC algorithm does not have detailed balance for any non-uniform distribution <italic>Q</italic><italic>and converges to a stationary distribution</italic><inline-formula id="IEq80"><alternatives><tex-math id="M124">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\prod_{i = 1}^{N} R(\cdot)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq80.gif"/></alternatives></inline-formula>.</p>
        <p>This algorithm is climbing towards a local optima since it is very probable that a good solution remains a long time in the population to generate better solutions. Only when both children are worse than their parents this algorithm rejects the two candidate individuals with some probability. Otherwise, ECA always accepts at least one child. As a consequence, the probability to accept at least one proposed child is the largest from all the previous acceptance rules. Thus, an algorithm that uses ECA behaves more similar to a standard GA than to a sampling algorithm. As a consequence, the target distribution of ECA is biased towards high regions of <italic>P</italic>(&#xB7;): the highest fitness states are sampled more often at the expense of the lower fitness states.</p>
      </sec>
      <sec id="Sec27">
        <title>Nested transition distributions: repairing the detailed balance</title>
        <p>In the following, we propose a method to integrate the transition distributions without detailed balance in MH algorithms with detailed balance. To achieve this, we need to accept or reject all the individuals generated with an MH algorithm without detailed balance.</p>
        <p><bold><bold>Definition 4</bold></bold> A <italic>nested EMCMC algorithm</italic> is an EMCMC algorithm where individuals are proposed using a transition distribution, and are further all accepted or all rejected by a coupled MH acceptance rule. A <italic>nested transition distribution</italic> is the transition distribution used as proposal distribution by the nested EMCMC algorithm.</p>
        <p>Furthermore, the nested transition distribution that generates individuals with a recombination distribution is itself a recombinative proposal distribution: from two or more parents we propose two or more children.</p>
        <p><bold><bold>Proposition 12</bold></bold><italic>The nested EMCMC algorithm has detailed balance. The nested transition distribution composed by a respectful recombination proposal distribution and an acceptance rule is by itself a respectful recombination proposal distribution</italic>.</p>
        <p><bold><italic>Proof</italic></bold> The proof is immediate if we consider the nested transition distribution as a proposal distribution and Lemma 1. If parents have identical values at certain positions, then the individuals generated by respectful recombination have&#x2014;by definition&#x2014;the same values at those positions. An acceptance rule simply selects from parents and children, therefore, the accepted individuals have the same values on those positions.<inline-formula id="IEq81"><alternatives><tex-math id="M125">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\square$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq81.gif"/></alternatives></inline-formula></p>
        <p>Nested transitions are, usually, non-symmetrical. Thus, we need to compute these probabilities. In Fig.&#xA0;<xref rid="Fig1" ref-type="fig">1</xref>, we graphically depict the nested EMCMC framework.<fig id="Fig1"><label>Fig.&#xA0;1</label><caption><p>Nested EMCMC framework: a candidate population <inline-formula id="IEq132"><alternatives><tex-math id="M126">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf Y}^\prime$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq132.gif"/></alternatives></inline-formula> is proposed with some proposal distribution <italic>Q</italic> from the current population <bold>X</bold><sup><italic>t</italic></sup> and some children are accepted with some MH acceptance rule. These accepted children and the parents that are not replaced form the candidate population <bold>Y</bold> compete against <bold>X</bold><sup><italic>t</italic></sup> such that the resulting EMCMC has detailed balance</p></caption><graphic xlink:href="12065_2010_40_Fig1_HTML" id="MO87"/></fig></p>
        <sec id="Sec28">
          <title>Examples of nested EMCMCs</title>
          <p><bold>Correcting</bold><italic>K</italic><sub>1.1</sub>. Consider the <italic>nested EMCMC</italic> that uses as proposal distribution the nested transition distribution, <italic>K</italic><sub>1.1</sub> where two candidate individuals are proposed from two parents with some recombinative proposal distribution, <italic>Q</italic>, and each child competes against one of the parents randomly chosen from the population with a standard MH acceptance rule. The candidate individuals proposed with <italic>K</italic><sub>1.1</sub> are, at their turn, accepted with the coupled acceptance rule, &#x3B1;<sub><italic>C</italic></sub>. The nested EMCMC&#x2019;s transition distribution is<disp-formula id="Equak"><alternatives><tex-math id="M127">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ K_{nEMCMC} = K_{1.1} \cdot \alpha_C = (Q \cdot A \cdot A) \cdot \alpha_C $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equak.gif" position="anchor"/></alternatives></disp-formula>where the coupled acceptance rule is<disp-formula id="Equal"><alternatives><tex-math id="M128">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \alpha_C({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) = \hbox{min} \left\{1, {\frac{\hat{P}({\bf y}_1) \cdot \hat{P}({\bf y}_2)}{\hat{P}({\bf x}^{(t)}_1) \cdot \hat{P}({\bf x}^{(t)}_2)}} \cdot {\frac{K_{1.1}({\bf x}^{(t)}_1,{\bf x}^{(t)}_2 \mid {\bf y}_1,{\bf y}_2)}{K_{1.1}({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1,{\bf x}^{(t)}_2)}}\right\} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equal.gif" position="anchor"/></alternatives></disp-formula></p>
          <p>We observe that the nested EMCMC eliminates the influence of the proposal distribution on <italic>K</italic><sub>1.1</sub>&#x2019;s target distribution with the coupled acceptance rule, &#x3B1;<sub><italic>C</italic></sub>.</p>
          <p>In the following proposition, we express <italic>K</italic><sub><italic>nEMCMC</italic></sub> as a function of <italic>K</italic><sub>1.1</sub> and the proposal distribution <italic>Q</italic>. The proof of this proposition is in Appendix <xref rid="Sec43" ref-type="sec">6</xref>.</p>
          <p><bold><bold>Proposition 13</bold></bold><italic>Consider that the symmetrical proposal distribution</italic><italic>Q</italic><italic>generates</italic><bold>y</bold><sub>1</sub><italic>and</italic><bold>y</bold><sub>2</sub><italic>from</italic><inline-formula id="IEq82"><alternatives><tex-math id="M129">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_1$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq82.gif"/></alternatives></inline-formula><italic>and</italic><inline-formula id="IEq83"><alternatives><tex-math id="M130">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_2$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq83.gif"/></alternatives></inline-formula><italic>. If both children are different from their parents</italic>, <inline-formula id="IEq84"><alternatives><tex-math id="M131">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left\{{\bf x}^{(t)}_1,{\bf x}^{(t)}_2\right\} \neq \left\{{\bf y}_1, {\bf y}_2\right\}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq84.gif"/></alternatives></inline-formula>, <italic>the nested transition distribution is</italic><disp-formula id="Equam"><alternatives><tex-math id="M132">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ K_{nEMCMC}({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) = K_{1.1}({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equam.gif" position="anchor"/></alternatives></disp-formula><italic>If only one child is different from its parent</italic>, <inline-formula id="IEq85"><alternatives><tex-math id="M133">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf y}_1 \neq {\bf x}^{(t)}_1$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq85.gif"/></alternatives></inline-formula><italic>, then</italic><disp-formula id="Equan"><alternatives><tex-math id="M134">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ K_{nEMCMC}({\bf y}_1, {\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) = K_{1.1}({\bf y}_1, {\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \cdot\\ \hbox{min}\left\{1,{\frac{q +\sum_{\hat{P}({\bf y}_2) &lt; \hat{P}({\bf x}^{(t)}_2)} Q({\bf x}^{(t)}_1,{\bf y}_2 \mid {\bf y}_1, {\bf x}^{(t)}_2) \cdot [1 - \alpha({\bf y}_2 \mid {\bf x}^{(t)}_2)]}{q +\sum_{\hat{P}({\bf y}_2) &lt; \hat{P}({\bf x}^{(t)}_2)} Q({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \cdot [1 - \alpha({\bf y}_2 \mid {\bf x}^{(t)}_2)]}}\right\} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equan.gif" position="anchor"/></alternatives></disp-formula><italic>where</italic><disp-formula id="Equao"><alternatives><tex-math id="M135">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ q = Q({\bf x}^{(t)}_1, {\bf x}^{(t)}_2 \mid  {\bf y}_1, {\bf x}^{(t)}_2) = Q({\bf y}_1, {\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equao.gif" position="anchor"/></alternatives></disp-formula><italic>Otherwise, if both children are rejected</italic>,<disp-formula id="Equap"><alternatives><tex-math id="M136">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} &amp; K_{nEMCMC}({\bf x}^{(t)}_1, {\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \\ &amp; \quad = 1 - \sum_{{\bf y}_1 \neq {\bf x}^{(t)}_1, {\bf y}_2 \neq {\bf x}^{(t)}_2} K_{nEMCMC}({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2)\end{aligned} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equap.gif" position="anchor"/></alternatives></disp-formula>From the above proposition, we note that the difference between the two transition distributions, <italic>K</italic><sub><italic>nEMCMC</italic></sub>, which samples from the target distribution, and <italic>K</italic><sub>1.1</sub>, which does not sample from the target distribution, is given by the correction term from Eq. 2. In other words, <italic>K</italic><sub>1.1</sub> has to be multipled with the above correction term to sample from the target distribution. If the irreducible proposal distribution <italic>Q</italic> has the property that<disp-formula id="Equaq"><alternatives><tex-math id="M137">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ Q({\bf x}^{(t)}_1,{\bf y}_2 \mid  {\bf y}_1, {\bf x}^{(t)}_2) = Q({\bf y}_1,{\bf y}_2 \mid  {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equaq.gif" position="anchor"/></alternatives></disp-formula>for any <inline-formula id="IEq86"><alternatives><tex-math id="M138">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_1, {\bf x}^{(t)}_2, {\bf y}_1$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq86.gif"/></alternatives></inline-formula> and <bold>y</bold><sub>2</sub>, the correction term is 1. In this case, according with both Proposition 13 and 10, <italic>K</italic><sub>1.1</sub> has detailed balance and converges to the target distribution. Note that the probability of acceptance of at least one candidate individual with <italic>K</italic><sub><italic>nEMCMC</italic></sub> is smaller than with <italic>K</italic><sub>1.1</sub> and larger than with <italic>K</italic><sub><italic>C</italic></sub>. Furthermore, <italic>K</italic><sub>1.1</sub>, as proposal distribution, is not symmetrical and to use it in <italic>K</italic><sub><italic>nEMCMC</italic></sub>, we have to compute the impractical correction term.</p>
          <p><bold>K</bold><sub><bold>C</bold></sub><bold>as nested proposal distribution</bold>. The coupled transition distribution <italic>K</italic><sub><italic>C</italic></sub> is invariant for the nested method. The proof of this proposition is in Appendix <xref rid="Sec44" ref-type="sec">7</xref>.</p>
          <p>
            <bold>
              <bold>Proposition 14</bold>
            </bold>
            <italic>Consider that the symmetrical proposal distribution</italic>
            <italic>Q</italic>
            <italic>generates</italic>
            <bold>y</bold>
            <sub>1</sub>
            <italic>and</italic>
            <bold>y</bold>
            <sub>2</sub>
            <italic>from</italic>
            <inline-formula id="IEq87">
              <alternatives>
                <tex-math id="M139">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_1$$\end{document}</tex-math>
                <inline-graphic xlink:href="12065_2010_40_Article_IEq87.gif"/>
              </alternatives>
            </inline-formula>
            <italic>and</italic>
            <inline-formula id="IEq88">
              <alternatives>
                <tex-math id="M140">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_2$$\end{document}</tex-math>
                <inline-graphic xlink:href="12065_2010_40_Article_IEq88.gif"/>
              </alternatives>
            </inline-formula>
            <italic>. The nested transition distribution is</italic>
            <disp-formula id="Equar">
              <alternatives>
                <tex-math id="M141">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ K_{nEMCMC}({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) = K_C({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) $$\end{document}</tex-math>
                <graphic xlink:href="12065_2010_40_Article_Equar.gif" position="anchor"/>
              </alternatives>
            </disp-formula>
          </p>
          <p>The coupled transition distribution <italic>K</italic><sub><italic>C</italic></sub> does not need a correction term to converge to the target distribution.</p>
        </sec>
      </sec>
    </sec>
    <sec id="Sec29">
      <title>Three experimental tests</title>
      <p>We compare the performance of recombinative and non-recombinative population-based (E)MCMCs on two functions: a toy problem, the <italic>hyper-geometrical</italic> distribution, which we use to analytically compare the performance of the algorithms and a larger problem the <italic>binary quadratic programming problem</italic> (BQP). We show that recombinative EMCMCs can outperform the standard MCMCs. Furthermore, we show that the algorithms that use the coupled acceptance rule &#x3B1;<sub><italic>C</italic></sub> are less efficient than the algorithms that use the standard acceptance rule &#x3B1;.</p>
      <p>We compare the performance of five MCMCs: a single chain MCMC, two non-recombinative MCMCs with two recombinative EMCMCs. We take the size of population <italic>N</italic>&#xA0;=&#xA0;2. <list list-type="order"><list-item><p><italic>MCMC</italic>: one single chain MCMC that proposes new states with <italic>Q</italic><sub><italic>m</italic></sub> with the mutation rate <italic>p</italic><sub><italic>m</italic></sub>&#xA0;=&#xA0;1/&#x2113; and accepts (rejects) them using the Metropolis acceptance rule &#x3B1;.</p></list-item><list-item><p><italic>MIC</italic>: 2 independent MCMCs that propose new states with <italic>Q</italic><sub><italic>m</italic></sub> with the mutation rate <italic>p</italic><sub><italic>m</italic></sub>&#xA0;=&#xA0;1/&#x2113; and accept (reject) them using the Metropolis acceptance rule &#x3B1;.</p></list-item><list-item><p><italic>mut</italic>+&#x3B1;<sub><italic>C</italic></sub>: a non-recombinative population-based MCMC that proposes each generation 2 new states with the same <italic>Q</italic><sub><italic>m</italic></sub> and accepts (rejects) all of them using the coupled acceptance rule &#x3B1;<sub><italic>C</italic></sub>.</p></list-item><list-item><p><italic>rEMCMC</italic>: generates two individuals with a cycle between <italic>Q</italic><sub><italic>m</italic></sub> and parameterized uniform recombination, <italic>Q</italic><sub><italic>unif</italic></sub>, with <italic>p</italic><sub><italic>r</italic></sub>&#xA0;=&#xA0;50%, and then accepts them with the standard Metropolis acceptance rule &#x3B1;.</p></list-item><list-item><p><italic>rEMCMC</italic>+&#x3B1;<sub><italic>C</italic></sub>: generates two individuals with a cycle between <italic>Q</italic><sub><italic>m</italic></sub> and <italic>Q</italic><sub><italic>unif</italic></sub> and then accepts them with the coupled acceptance rule &#x3B1;<sub><italic>C</italic></sub>.</p></list-item></list></p>
      <p>As shown in previous sections, the target distribution of the three population based EMCMCs&#x2013; <italic>MIC</italic>, <italic>mut</italic>+&#x3B1;<sub><italic>C</italic></sub> and <italic>rEMCMC</italic>+&#x3B1;<sub><italic>C</italic></sub>&#x2014;is <inline-formula id="IEq133"><alternatives><tex-math id="M142">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\prod_{N} P(\cdot)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq133.gif"/></alternatives></inline-formula> and the target distribution of single chain <italic>MCMC</italic> is <italic>P</italic>(&#xB7;). The sampled distribution of <italic>rEMCMC</italic> is not the target distribution but, as the experimental results show it, it approximates quite well <italic>P</italic>(&#xB7;) for large search spaces and a small number of samples.</p>
      <sec id="Sec30">
        <title>Sampling from the hyper-geometrical function</title>
        <p>To compare MH algorithms analytically, we compute the second largest eigenvalue of the transition matrices of the corresponding (E)MCMCs. Note that the second eigen value should be small to mix well.</p>
        <sec id="Sec31">
          <title>The tested distribution</title>
          <p>A <italic>hyper-geometric distribution</italic> (Hyper) is<disp-formula id="Equas"><alternatives><tex-math id="M143">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \hat{P}({\bf x}) = \left\{ \begin{array}{lll}  h_2 \cdot {\frac{w - \Updelta({\bf x},{\bf x}_0)}{w}} &amp; \hbox{if}\,\,\Updelta({\bf x},{\bf x}_0) &lt; w\\ 0.01 &amp; \hbox{if}\,\,\Updelta({\bf x},{\bf x}_0) = w\\ h_1 \cdot \frac{\Updelta({\bf x},{\bf x}_0) - w} {\ell-w} &amp; \hbox{otherwise} \end{array} \right. $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equas.gif" position="anchor"/></alternatives></disp-formula>with &#x2113; the string size, <italic>w</italic> the number of bits-1 in the individuals with the lowest value 0.01, individual <bold>x</bold><sub>0</sub> with all bits equal to 0 is the second largest peak <italic>h</italic><sub>2</sub>, and the individual with all bits equal to 1 is the largest peak <italic>h</italic><sub>1</sub>. We set &#x2113;&#xA0;=&#xA0;8 and <italic>h</italic><sub>1</sub>&#xA0;=&#xA0;1.</p>
        </sec>
        <sec id="Sec32">
          <title>Results</title>
          <p>In the first experiment, see Fig.&#xA0;<xref rid="Fig2" ref-type="fig">2</xref>a and b, we vary the distance of the lowest valued states to the optimum, <italic>w</italic>&#xA0;=&#xA0;{1,&#xA0;2,&#xA0;3} and we set the value of the second largest state to <italic>h</italic><sub>2</sub>&#xA0;=&#xA0;0.75. In this case, the local and global optimum have a close value and we vary their basin of attraction: the greater the distance from the local optimum, the smaller the basin of attraction of the global optimum. Second, we vary <italic>h</italic><sub>2</sub> from 0.25 to 0.75 with a step size of 0.25 and we set <italic>w</italic>&#xA0;=&#xA0;3. In this case, the optimum is isolated and its importance is decreasing with the height of the second largest peak. In Fig.&#xA0;<xref rid="Fig2" ref-type="fig">2</xref>a and c we show results for high mutation and swapping rates, 0.5; in Fig.&#xA0;<xref rid="Fig2" ref-type="fig">2</xref>b and d we have low mutation and swapping rates 0.125. We set the low mutation rate for the cycle <italic>Q</italic><sub><italic>m</italic></sub>&#xD7;<italic>Q</italic><sub><italic>unif</italic></sub> to 0.125. Again, we reduce the computation costs by grouping individuals with the same number of ones and zeros in one individual because these individuals have the same fitness value and therefore, the same acceptance probability. The eigenvalues for <italic>MIC</italic> and <italic>MCMC</italic> are the same because the two MCMCs have the same acceptance rule and proposal distribution. Thus, we have chosen to show results only for one of the two algorithms.<fig id="Fig2"><label>Fig.&#xA0;2</label><caption><p>Second largest eigenvalues for Hyper-geometrical function on 8 bits, that is two blocks each of 4 bits, where<bold> a</bold>,<bold>b</bold><italic>w</italic>&#xA0;=&#xA0;{1,&#xA0;2,&#xA0;3} and the peak heights are set to <italic>h</italic><sub>1</sub>&#xA0;=&#xA0;1 and <italic>h</italic><sub>2</sub>&#xA0;=&#xA0;0.75, and<bold> c</bold>,<bold>d</bold><italic>h</italic><sub>2</sub>&#xA0;=&#xA0;{0.25,&#xA0;0.5,&#xA0;0.75} and the distance to the highest peak is set to <italic>w</italic>&#xA0;=&#xA0;3</p></caption><graphic xlink:href="12065_2010_40_Fig2_HTML" id="MO88"/></fig></p>
          <p>In Fig.&#xA0;<xref rid="Fig2" ref-type="fig">2</xref>a and b, for <italic>w</italic>&#xA0;=&#xA0;2, the basin of attraction is equal for the two peaks. Then, we obtain the highest eigenvalues, and thus the worst performance, for all the four algorithms. Here we have the largest amount of low fit states that separate two narrow regions with fit individuals; a random sampler, see <italic>MCMC</italic> with mutation rate of 0.5 in Fig.&#xA0;<xref rid="Fig2" ref-type="fig">2</xref>b, is the best algorithm since it covers a large area with low equal values in short time.</p>
          <p>For the other values of <italic>w</italic>, the basin of attraction of one of the peaks is wider than the basin of attraction of the other peak; the narrower one region is, the harder to find and sample it. For <italic>w</italic>&#xA0;=&#xA0;{1,3} we have the lowest eigenvalues and, furthermore, the highest difference between the algorithms. The non-recombinative (E)MCMCs do well because the narrow peak is reduced now to one point. The recombinative EMCMCs do better than the non-recombinative (E)MCMCs with the same acceptance rule because recombination generates with higher probability more fit individuals by combining the two building blocks of this function, In Fig.&#xA0;<xref rid="Fig2" ref-type="fig">2</xref>c and d, we observe that the performance of all the (E)MCMC algorithms varies very little with the height of the second largest peak <italic>h</italic><sub>2</sub>. Thus, these eigenvalues are (approximatively) the same with the eigenvalues for <italic>w</italic>&#xA0;=&#xA0;{1,3} from Fig.&#xA0;<xref rid="Fig2" ref-type="fig">2</xref>a and b.</p>
          <p>To conclude this example, we observe that due to the structure of the problem recombinative EMCMCs have provably a better performance than the non-recombinative EMCMCs. The performance of MCMCs are diminished by the coupled acceptance rule &#x3B1;<sub><italic>C</italic></sub>; <italic>MCMC</italic> is sampling more efficient than <italic>mut</italic>+&#x3B1;<sub><italic>C</italic></sub> and <italic>rEMCMC</italic> is better than <italic>rEMCMC</italic>+&#x3B1;<sub><italic>C</italic></sub>. The mutation rate greatly influences the performance of non-recombinative MCMCs; a high mutation rate decreases the performance of the algorithm. The swapping probability influences less the efficiency of the recombinative EMCMCs. <italic>rEMCMC</italic> and <italic>rEMCMC</italic>+&#x3B1;<sub><italic>C</italic></sub> perform best for high swapping probabilities, whereas <italic>MCMC</italic> and <italic>mut</italic>+&#x3B1;<sub><italic>C</italic></sub> perform best for low mutation rates.</p>
        </sec>
      </sec>
      <sec id="Sec33">
        <title>Sampling from BQP</title>
        <p>In the following, we have performed experiments with the <italic>binary quadratic programming problem</italic> (BQP) to show, on a more elaborated example, that recombination is useful for sampling. The fitness function of an individual <italic>x</italic> is <italic>f</italic>(<italic>x</italic>)&#xA0;=&#xA0;&#x2211;<sub arrange="stack"><italic>j</italic>=1</sub><sup arrange="stack">&#x2113;</sup> &#x2211;<sub arrange="stack"><italic>k</italic>=1</sub><sup arrange="stack">&#x2113;</sup><italic>F</italic>[<italic>j</italic>][<italic>k</italic>]&#xA0;&#xB7;&#xA0;<italic>x</italic>[<italic>j</italic>]&#xA0;&#xB7;&#xA0;<italic>x</italic>[<italic>k</italic>], where <italic>F</italic>[<italic>j</italic>][<italic>k</italic>] is the element on the <italic>j</italic>-th row and on the <italic>k</italic>-th column of a matrix <italic>F</italic> of integers, both positive and negative and <bold>x</bold> a binary string (e.g., <bold>x</bold><sub>&#xB7;</sub> is 0 or 1). Then, <italic>F</italic>&#x2019;s size is &#x2113;&#xA0;&#xB7;&#xA0;&#x2113;.</p>
        <p>The interaction between two or more positions of the BQP problem depends on the matrix <italic>F</italic>&#x2019;s density, which is defined as the number of non-zero elements divided by the number of total elements in the matrix. The density is then between 0 and 1, where 0 means no interaction between positions and 1 means maximum interaction&#x2014;that is every position depends on every other position. For our experiments, we generate random matrices with density 0.1.</p>
        <p>These fitness values are positive and negative. However, the (unnormalized) probabilities of a distribution can be only greater than 0. Therefore, we add to all the fitness values a fixed positive integer <italic>transl</italic>; every value that now is equal or below 0 is assigned with the value 0.01. The unnormalized probabilities are <inline-formula id="IEq89"><alternatives><tex-math id="M144">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{P}(x) =f(x)-transl$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq89.gif"/></alternatives></inline-formula>, when <italic>f</italic>(<italic>x</italic>)&#xA0;&gt;&#xA0;<italic>transl</italic> and, otherwise, <inline-formula id="IEq90"><alternatives><tex-math id="M145">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{P}(x) = 0.01$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq90.gif"/></alternatives></inline-formula>.</p>
        <p>In this section, we show that recombination can improve sampling. We first discuss the experimental methodology available to measure and compare the performance of EMCMCs. Second, we show experimental results on a BQP problem on 20 bits. By expanding the target distribution, we are able to compute the distance between this distribution and the true distribution. At last, we show results on a larger search space, for <italic>l</italic>&#xA0;=&#xA0;100 bits. Unlike for the previous example, we are not able to expand this distribution, and therefore we are constrained to use less precise methods to assess the performance of (E)MCMCs. For both experiments, we compare the five (E)MCMC algorithms described above: three non-recombinative (E)MCMCs&#x2014;that are one long chain <italic>MCMC</italic>, <italic>MIC</italic> and <italic>mut</italic>+&#x3B1;<sub><italic>C</italic></sub>&#x2014;and two recombinative EMCMCs&#x2014;that are <italic>rEMCMC</italic> and <italic>rEMCMC</italic>+&#x3B1;<sub><italic>C</italic></sub>.</p>
        <sec id="Sec34">
          <title>Experimental methodology</title>
          <p>To assess the efficiency of various EMCMCs we focus on monitoring how fast an MCMC is mixing and how well the samples spread over the entire target distribution after a fixed and rather small number of generated individuals. There is no generally acknowledged methodology on measuring how &#x201C;close&#x201D; a set of samples generated with a real-coded MCMC is to the true target distribution. Wolpert and Lee [<xref ref-type="bibr" rid="CR26">26</xref>] argue that a good approach is to use the Kullback-Leibler (KL) distance between an approximation of the sampled distribution and a discrete approximation of the true distribution.</p>
          <p>To measure the speed with which an algorithm samples the search space, Roberts et&#xA0;al. [<xref ref-type="bibr" rid="CR21">21</xref>] recommend to monitor the acceptance probability of an algorithm. They analytically and experimentally study the behavior of a standard MCMC using a normal distributed mutation with fixed and equal variances in all dimensions. The target distribution is a multivariate normal distribution with standard deviation of 1.0 in all dimensions and no correlations. They conclude that a very high or very low acceptance rate of the MCMC indicates slow mixing, and a good acceptance rate is between 0.2&#xA0;and&#xA0;0.5. A high acceptance rate and a high performance (e.g., the KL-measure close to 0) indicates a well performing algorithm that mixes fast. Analytically computing the optimal acceptance probability is only feasible for very simple target and proposal distributions and when using the Metropolis acceptance rule. Here, we restrict ourselves to experimentally monitoring the acceptance probability.</p>
          <p>For the tested recombinative EMCMCs, we have good performance (e.g., KL distance) even for very high acceptance rates that shows that recombination can improve the mixing of MCMCs. Furthermore, we show that algorithms with similar acceptance probabilities can have rather different performance.</p>
        </sec>
        <sec id="Sec35">
          <title>A 20 bits BQP</title>
          <p>For the first experiment, we set the string length to &#x2113;&#xA0;=&#xA0;20 and <italic>transl</italic>&#xA0;=&#xA0;50. Since the <italic>F</italic>&#x2019;s density is 0.1, only 40 elements of <italic>F</italic> have non-zero values. The non-zero integers are generated at random from the interval [&#x2212;100, 100]. For the generated matrix <italic>F</italic>, we have found the maximum fitness value 146; when this is translated, the maximum unnormalized probability value is 196. We group the individuals with the same value to generate the histogram and we also store the number of individuals with the same value.</p>
          <p>We set the population size <italic>N</italic>&#xA0;=&#xA0;20. Each generation, all individuals are randomly coupled in <italic>N</italic>/2 pairs such that each individual belongs to exactly one pair. We have performed experiments for various mutation rates (from 0.05 to 0.5) and swapping probabilities for the uniform recombination (from 0.05 to 0.5). With each algorithm, we generate 20,000 individuals; our measurements are averaged over 50 runs. We throw away the first 10,000 generated individuals to diminish the impact of the starting points over the performance of the algorithms. This is called the <italic>burn-in</italic> period. Thus, in total, we sample 10,000 &#x201C;useful&#x201D; individuals from which we generate Table&#xA0;<xref rid="Tab2" ref-type="table">2</xref> and the graphs from Fig.&#xA0;<xref rid="Fig3" ref-type="fig">3</xref>.<table-wrap id="Tab2"><label>Table&#xA0;2</label><caption><p>Efficiency of (E)MCMCs for a BQP on 20 bits: the KL distances and acceptance probabilities</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Alg.</th><th align="left">KL dist</th><th align="left">Accept prob</th></tr></thead><tbody><tr><td align="left">Mut+&#x3B1;<sub><italic>C</italic></sub></td><td align="left">(1.47&#xA0;&#xB1;&#xA0;0.36)&#xA0;&#xB7;&#xA0;10<sup>&#x2212;4</sup></td><td align="left">0.16&#xA0;&#xB1;&#xA0;0</td></tr><tr><td align="left">MCMC</td><td align="left">(1.29&#xA0;&#xB1;&#xA0;0.41)&#xA0;&#xB7;&#xA0;10<sup>&#x2212;4</sup></td><td align="left">0.26&#xA0;&#xB1;&#xA0;0.01</td></tr><tr><td align="left">rEMCMC+&#x3B1;<sub><italic>C</italic></sub></td><td align="left">(0.86&#xA0;&#xB1;&#xA0;0.28)&#xA0;&#xB7;&#xA0;10<sup>&#x2212;4</sup></td><td align="left">0.53&#xA0;&#xB1;&#xA0;0</td></tr><tr><td align="left">MIC</td><td align="left">(0.73&#xA0;&#xB1;&#xA0;0.12)&#xA0;&#xB7;&#xA0;10<sup>&#x2212;4</sup></td><td align="left">0.29&#xA0;&#xB1;&#xA0;0</td></tr><tr><td align="left">rEMCMC</td><td align="left">(0.57&#xA0;&#xB1;&#xA0;0.07)&#xA0;&#xB7;&#xA0;10<sup>&#x2212;4</sup></td><td align="left">0.74&#xA0;&#xB1;&#xA0;0.01</td></tr></tbody></table></table-wrap><fig id="Fig3"><label>Fig.&#xA0;3</label><caption><p><bold>a</bold> The frequencies and<bold> b</bold> the percentage of solutions found for each fitness value for <italic>MIC</italic> and <italic>rEMCMC</italic> on BQP on 20 bits;<bold> c</bold> how many times the sampled frequencies differ from the true distribution</p></caption><graphic xlink:href="12065_2010_40_Fig3_HTML" id="MO89"/></fig></p>
          <p>The search space is 2<sup>20</sup>. By expanding the target distribution, we are able to compare the frequencies of samples generated with the tested (E)MCMCs with their value in the true distribution. In Table&#xA0;<xref rid="Tab2" ref-type="table">2</xref>, we compute the KL distance and acceptance ratio for the five (E)MCMCs. Mann-Whitney nonparametric two-sided test with significance level <italic>p</italic>&#xA0;&lt;&#xA0;0.05 is used to verify if KL distances of the five tested algorithms are sampled from different distributions. The algorithms have statistical significantly different output except with <italic>mut</italic>+&#x3B1;<sub><italic>C</italic></sub> and <italic>MCMC</italic>.</p>
          <p>The best algorithm, with the significantly lowest KL distance and the highest acceptance ratio, is the recombinative EMCMC, <italic>rEMCMC</italic>. The only difference between <italic>MIC</italic>, the algorithm with second best KL distance, and <italic>rEMCMC</italic> is that <italic>rEMCMC</italic> uses recombination and <italic>MIC</italic> does not. Further, we observe that the two recombinative EMCMCs, that are <italic>rEMCMC</italic> and <italic>rEMCMC</italic>+&#x3B1;<sub><italic>C</italic></sub>, have a higher acceptance probability than the three non-recombinative EMCMCs, that are <italic>MCMC</italic>, <italic>MIC</italic> and <italic>mut</italic>+&#x3B1;<sub><italic>C</italic></sub>. That indicates that the recombinative proposal distribution <italic>Q</italic><sub><italic>m</italic></sub>&#xD7;<italic>Q</italic><sub><italic>unif</italic></sub>, by exploiting the commonalities of the search space, is a &#x201C;better&#x201D; proposal distribution than <italic>Q</italic><sub><italic>m</italic></sub>.</p>
          <p>Furthermore, as we already observed in the analytical experiments, the coupled acceptance rule &#x3B1;<sub><italic>C</italic></sub> has a negative influence over both recombinative and non-recombinative EMCMCs. Even though using &#x3B1;<sub><italic>C</italic></sub>, the recombinative <italic>rEMCMC</italic>+&#x3B1;<sub><italic>C</italic></sub> has the third best KL distance and the second acceptance ratio, whereas <italic>mut</italic>+&#x3B1;<sub><italic>C</italic></sub> is the worst algorithm of all. We explain the good behavior of <italic>rEMCMC</italic>+&#x3B1;<sub><italic>C</italic></sub> by synchronizing the individuals in the family with the uniform recombination: children that inherit the common parts of their parents have similar fitness with the parents and the algorithm accepts more individuals. In opposition, uniform mutation independently proposes two individuals in random directions; then, if one of the candidates has very low fitness, there is a big probability that both children are rejected. As a consequence, <italic>mut</italic>+&#x3B1;<sub><italic>C</italic></sub> has a low acceptance rate and, thus, performance.</p>
          <p>In accordance with the analytical results from the previous section, we observe that <italic>MIC</italic>, by using populations of MCMC chains has a lower KL distance than the standard <italic>MCMC</italic>. Note that the acceptance ratio for these two algorithms is the same, but their KL distance quite different.</p>
          <p>In Fig.&#xA0;<xref rid="Fig3" ref-type="fig">3</xref>, we show experimental results for the two most performant (E)MCMCs presented in the previous section: <italic>MIC</italic> and <italic>rEMCMC</italic>. By using recombination, <italic>rEMCMC</italic> is a better sampler than <italic>MIC</italic> is: in frequencies, <italic>rEMCMC</italic>, see Fig.&#xA0;<xref rid="Fig3" ref-type="fig">3</xref>a, is closer to the true target distribution than <italic>MIC</italic> is. If <italic>rEMCMC</italic> samples with predilection in the high values of the target distribution, in opposition, <italic>MIC</italic> typically samples the low fit individuals. Furthermore, <italic>rEMCMC</italic> finds more higher probable solutions than <italic>MIC</italic>, see Fig.&#xA0;<xref rid="Fig3" ref-type="fig">3</xref>b. Overall, in Fig.&#xA0;<xref rid="Fig3" ref-type="fig">3</xref>c, we notice that the distribution sampled with <italic>rEMCMC</italic> is closer to the true distribution than <italic>MIC</italic> is. These results are in concordance with the ones in Table&#xA0;<xref rid="Tab2" ref-type="table">2</xref> from which we conclude that <italic>rEMCMC</italic> is the most performant algorithm for this particular problem by proposing individuals with recombination.</p>
        </sec>
        <sec id="Sec36">
          <title>A 100 bits BQP</title>
          <p>We now show that recombination can improve mixing on BQP with string size &#x2113;&#xA0;=&#xA0;100, for which it is impractical to generate the target distribution. In this experiment, we cannot compute the KL distance. Furthermore, we do not know the maximum value of this function or if the values are uniformly distributed in some interval.</p>
          <p>For this experiment, we compare all the five MCMCs as before, but we show the results only for the best two algorithms <italic>MIC</italic> and <italic>rEMCMC</italic>. Note that these two algorithms are the best performant algorithms in all three experiments.</p>
          <p>Assuming, that the unnormalized values of the distribution are in a very large range we group our samples is using the individual&#x2019;s number of ones to compare two (E)MCMCs algorithms. Given this grouping, we compute the frequencies, Fig.&#xA0;<xref rid="Fig4" ref-type="fig">4</xref>a, and the mean value, Fig.&#xA0;<xref rid="Fig4" ref-type="fig">4</xref>b, for each such a group.<fig id="Fig4"><label>Fig.&#xA0;4</label><caption><p><bold>a</bold> The frequencies and<bold> b</bold> the average fitness of the found solutions for each number of ones for <italic>MIC</italic> and <italic>rEMCMC</italic> on BQP on 100 bits</p></caption><graphic xlink:href="12065_2010_40_Fig4_HTML" id="MO90"/></fig></p>
          <p>Again, we set the density of <italic>F</italic> to 0.1; thus, approximately 1,000 elements of <italic>F</italic> are non-zero. We generate these non-zero integers with a uniform random distribution from the interval [&#x2212;100, 100]. To generate a distribution with positive values, we set <italic>transl</italic>&#xA0;=&#xA0;1,250. We set population size <italic>N</italic>&#xA0;=&#xA0;100 and, each algorithm we run 50 times. With each algorithm, we generate 100,000 individuals which we throw away, and we use the next 100,000 generated individuals. Again, we vary the mutation rate and swapping rate from 0.05 and 0.5. In Fig.&#xA0;<xref rid="Fig4" ref-type="fig">4</xref>, we show results for <italic>MIC</italic>&#x2019;s mutation rate 0.2, and <italic>rEMCMC</italic>&#x2019;s swapping probability 0.5 and mutation rate 0.01. Then, <italic>MIC</italic> has an acceptance rate of 30%, whereas <italic>rEMCMC</italic> has an acceptance rate of 78%. We mention that we have performed experiments with various mutation and swapping probabilities but the results are not very different from the ones we currently show.</p>
          <p>In Fig.&#xA0;<xref rid="Fig4" ref-type="fig">4</xref>a, we notice that <italic>rEMCMC</italic> samples slightly more individuals with a higher number of ones than <italic>MIC</italic> does. Except that, the distributions sampled by <italic>MIC</italic> and <italic>rEMCMC</italic> are similar and both are sampling especially from individuals with half number of zeros and ones indicating that the target distribution is symmetrically distributed around these individuals. Despite that, the mean values of the sampled individuals are remarkably larger for <italic>rEMCMC</italic> than for <italic>MIC</italic>. It seems that 100,000 individuals are not enough for <italic>MIC</italic>&#x2019;s burn in whereas for <italic>rEMCMC</italic> it is. We also have performed experiments with single chain <italic>MCMC</italic>; we mention that the mean values are worse than of <italic>MIC</italic>. We explain that by the shape of this BQP: a lot of peaks with many low fit individuals. We therefore consider that <italic>MIC</italic> mixes slower than <italic>rEMCMC</italic>: <italic>N</italic>&#xA0;=&#xA0;100 is not large enough to cover the number of these peaks and thus <italic>MIC</italic> will always have the problem to escape from these peaks to find the other useful ones. To sample the same amount of individuals, an increase in population size must be combined with a decrease in the <italic>MCMC</italic>&#x2019;s time to run. The less time we allow an <italic>MCMC</italic> to run, the worse an <italic>MCMC</italic> samples from the search space and eventually, when population size goes to infinity, <italic>MIC</italic> is just a random sampler.</p>
        </sec>
      </sec>
    </sec>
    <sec id="Sec37">
      <title>Conclusions and discussion</title>
      <p>We discussed aspects from the Evolutionary MCMC framework, a class of population based MCMC algorithms that exchange useful information by using recombination and selection. The main issue for EMCMC algorithms is to improve the performance of the sampling process, or the convergence time to a desired distribution. Detailed balance is a straightforward and sufficient, but not necessary, condition for an irreducible and aperiodic EMCMC to converge to a given distribution.</p>
      <p>We aim to increase the efficiency of MCMCs by the use of recombination. Recombination operators can generate &#x201C;good&#x201D; proposal distributions that exploit the structure of the search space such that EMCMCs using it converge faster to the target distribution. Of course, when the search space has no structure or the structure is not correctly matched with the recombination operator, the recombinative proposal distribution will offer no advantage and will most likely be as efficient as a uniform randomly generated distribution, or even worse in the worst case.</p>
      <p>We proposed various recombinative proposal distributions on discrete spaces and we studied how to integrate them into EMCMCs with detailed balance. Since we consider only respectful recombinations, which are reducible, we have to combine recombination with mutation in order to obtain irreducible EMCMCs. We focus on discrete space recombinations and study the properties of discrete space EMCMCs resulting from the interaction of recombinative proposal distributions and MH acceptance rules. The analytical and experimental results show that EMCMCs can outperform the standard MCMC sampling algorithms by using recombination operators.</p>
      <p>We have proposed and investigated various MH acceptance rules derived from EC&#x2019;s selection strategies. In order to obtain a recombinative EMCMC with detailed balance, the children proposed by the recombination operator need to be all accepted or all rejected with the coupled acceptance rule.</p>
      <p>Both analytical investigations and experimental tests show that the recombinative EMCMC in which a child individually competes against a parent in the standard MH acceptance rule is the best sampler. In the experimental section, for very large search spaces and small number of samples, this EMCMC, <italic>rEMCMC</italic>, samples high regions of the search space faster than an EMCMC using the coupled acceptance rule. Thus, in short time, <italic>rEMCMC</italic> approximates the desired distribution better. However, there is no theoretical guarantee that <italic>rEMCMC</italic> converges to the target distribution. We also proposed the nested EMCMCs that individually accept or reject fitted states with a EMCMC without detailed balance. Even though the nested EMCMCs on the proposed unbalanced EMCMC have theoretical value by indicating a correction term of the sampled distribution, its computation is impractical.</p>
      <p>Finally, we also discussed a recombinative EMCMC without detailed balance but that can be useful for optimization purposes. It is a straightforward extension of the elitist replacement in an MH acceptance rule: two parents compete against two children and the best two from the four are selected for the next generation. This EMCMC can be used only for optimization since it is sampling mainly from the fittest regions of the sampled distribution at the expense of the less fit regions. Its disadvantage is that it can get stuck for a long time in good, but isolated, modes of the sampled distribution.</p>
      <p>We conclude that one should be careful with adopting recombination and selection operators from EC into population-based MCMC framework. Population-based techniques that are suited for optimization can be less suitable for sampling and vice-versa. To have a positive impact on the sampling performance of interacting MCMC chains, recombination and selection techniques need to follow some design principles as outlined in this paper.</p>
    </sec>
  </body>
  <back>
    <ack>
      <title>Open Access</title>
      <p>This article is distributed under the terms of the Creative Commons Attribution Noncommercial License which permits any noncommercial use, distribution, and reproduction in any medium, provided the original author(s) and source are credited.</p>
    </ack>
    <ref-list id="Bib1">
      <title>References</title>
      <ref id="CR1">
        <label>1.</label>
        <mixed-citation publication-type="other">Andrieu C, de Freitas N, Doucet A, Jordan M (2003) An introduction to MCMC for machine learning. Mach Learn 50:5&#x2013;43</mixed-citation>
      </ref>
      <ref id="CR2">
        <label>2.</label>
        <mixed-citation publication-type="other">Baluja S, Davies S (1997) Using optimal dependency-trees for combinational optimization. In: Proceedings of international conference of machine learning (ICML&#x2019;97). Morgan Kaufmann, San Francisco, pp 30&#x2013;38</mixed-citation>
      </ref>
      <ref id="CR3">
        <label>3.</label>
        <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Campillo</surname><given-names>F</given-names></name><name><surname>Rakotozafy</surname><given-names>R</given-names></name><name><surname>Rossi</surname><given-names>V</given-names></name></person-group><article-title>Parallel and interacting Markov chain Monte Carlo algorithm</article-title><source>Math Comput Simul</source><year>2009</year><volume>79</volume><issue>12</issue><fpage>3424</fpage><lpage>3433</lpage>1178.65003<pub-id pub-id-type="doi">10.1016/j.matcom.2009.04.010</pub-id>2547165</mixed-citation>
      </ref>
      <ref id="CR4">
        <label>4.</label>
        <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chow</surname><given-names>CK</given-names></name><name><surname>Liu</surname><given-names>CN</given-names></name></person-group><article-title>Approximating discrete probability distributions with dependence trees</article-title><source>IEEE Trans Inf Theory</source><year>1968</year><volume>14</volume><fpage>462</fpage><lpage>467</lpage>0165.22305<pub-id pub-id-type="doi">10.1109/TIT.1968.1054142</pub-id></mixed-citation>
      </ref>
      <ref id="CR5">
        <label>5.</label>
        <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Corander</surname><given-names>J</given-names></name><name><surname>Ekdahl</surname><given-names>M</given-names></name><name><surname>Koski</surname><given-names>Timo</given-names></name></person-group><article-title>Parallel interacting MCMC for learning of topologies of graphical models</article-title><source>Data Min Knowl Discov</source><year>2008</year><volume>17</volume><issue>3</issue><fpage>431</fpage><lpage>456</lpage><pub-id pub-id-type="doi">10.1007/s10618-008-0099-9</pub-id>2448656</mixed-citation>
      </ref>
      <ref id="CR6">
        <label>6.</label>
        <mixed-citation publication-type="book">
          <person-group person-group-type="editor">
            <name>
              <surname>Doucet</surname>
              <given-names>A</given-names>
            </name>
            <name>
              <surname>Freitas</surname>
              <given-names>N</given-names>
            </name>
            <name>
              <surname>Gordon</surname>
              <given-names>N</given-names>
            </name>
          </person-group>
          <source>Sequential Monte Carlo methods in practice</source>
          <year>2001</year>
          <publisher-loc>Berlin</publisher-loc>
          <publisher-name>Springer</publisher-name>
        </mixed-citation>
      </ref>
      <ref id="CR7">
        <label>7.</label>
        <mixed-citation publication-type="other">Drugan MM, Thierens D (2004) Evolutionary Markov chain Monte Carlo. In: Artificial evolution, LNCS 2936. Springer, Berlin, pp 63&#x2013;76</mixed-citation>
      </ref>
      <ref id="CR8">
        <label>8.</label>
        <mixed-citation publication-type="other">Drugan MM, Thierens D (2005) Recombinative EMCMC algorithms. In: Proceeding of IEEE congress of evolutionary computation, CEC&#x2019;05. IEEE Press, Piscataway, pp 2024&#x2013;2031</mixed-citation>
      </ref>
      <ref id="CR9">
        <label>9.</label>
        <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fearnhead</surname><given-names>P</given-names></name></person-group><article-title>Special issue: adaptive Monte Carlo methods</article-title><source>Statistics and Computing</source><year>2008</year><volume>18</volume><issue>4</issue><fpage>341</fpage><lpage>480</lpage><pub-id pub-id-type="doi">10.1007/s11222-008-9107-6</pub-id>2390816</mixed-citation>
      </ref>
      <ref id="CR10">
        <label>10.</label>
        <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Geraci</surname><given-names>J</given-names></name></person-group><article-title>A new connection between quantum circuits, graphs and the ising partition function</article-title><source>Quantum Information Processing</source><year>2008</year><volume>7</volume><issue>5</issue><fpage>227</fpage><lpage>242</lpage>1160.81330<pub-id pub-id-type="doi">10.1007/s11128-008-0084-7</pub-id>2453606</mixed-citation>
      </ref>
      <ref id="CR11">
        <label>11.</label>
        <mixed-citation publication-type="other">Geyer CJ (1991) Markov Chain Monte Carlo maximum likelihood. In: Computing science and statistics: proceeding of the 23rd symposium on the interface. pp 156&#x2013;163</mixed-citation>
      </ref>
      <ref id="CR12">
        <label>12.</label>
        <mixed-citation publication-type="book">
          <person-group person-group-type="editor">
            <name>
              <surname>Gilks</surname>
              <given-names>WR</given-names>
            </name>
            <name>
              <surname>Richardson</surname>
              <given-names>S</given-names>
            </name>
            <name>
              <surname>Spiegelhalter</surname>
              <given-names>DJ</given-names>
            </name>
          </person-group>
          <source>Markov Chain Monte Carlo in practice</source>
          <year>1996</year>
          <publisher-loc>London</publisher-loc>
          <publisher-name>Chapman &amp; Hall</publisher-name>
        </mixed-citation>
      </ref>
      <ref id="CR13">
        <label>13.</label>
        <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hastings</surname><given-names>WK</given-names></name></person-group><article-title>Monte Carlo sampling methods using Markov chains and their applications</article-title><source>Biometrika</source><year>1970</year><volume>57</volume><fpage>97</fpage><lpage>109</lpage>0219.65008<pub-id pub-id-type="doi">10.1093/biomet/57.1.97</pub-id></mixed-citation>
      </ref>
      <ref id="CR14">
        <label>14.</label>
        <mixed-citation publication-type="other">Kirkpatrick S, Gelatt CD, Vecchi MP (1983) Optimization by simulated annealing. Science 220(4598):671&#x2013;680</mixed-citation>
      </ref>
      <ref id="CR15">
        <label>15.</label>
        <mixed-citation publication-type="other">Laskey KB, Myers JW (2003) Population Markov Chain Monte Carlo. Mach Learn 50:175&#x2013;196</mixed-citation>
      </ref>
      <ref id="CR16">
        <label>16.</label>
        <mixed-citation publication-type="other">Liang F, Wong WH (2000) Evolutionary Monte Carlo: applications to <italic>C</italic><sub><italic>p</italic></sub> model sampling and change point problem. In: Statistica sinica. pp 317&#x2013;342</mixed-citation>
      </ref>
      <ref id="CR17">
        <label>17.</label>
        <mixed-citation publication-type="other">Mahfoud SW, Goldberg DE (1995) Parallel recombinative simulated annealing: a genetic algorithm. Parallel Comput 21:1&#x2013;28</mixed-citation>
      </ref>
      <ref id="CR18">
        <label>18.</label>
        <mixed-citation publication-type="journal">
          <person-group person-group-type="author">
            <name>
              <surname>Metropolis</surname>
              <given-names>N</given-names>
            </name>
            <name>
              <surname>Rosenbluth</surname>
              <given-names>AW</given-names>
            </name>
            <name>
              <surname>Rosenbluth</surname>
              <given-names>MN</given-names>
            </name>
            <name>
              <surname>Teller</surname>
              <given-names>AH</given-names>
            </name>
            <name>
              <surname>Teller</surname>
              <given-names>E</given-names>
            </name>
          </person-group>
          <article-title>Equation of state calculations by fast computing machines</article-title>
          <source>J Chem Phys</source>
          <year>1953</year>
          <volume>21</volume>
          <fpage>1087</fpage>
          <lpage>1092</lpage>
          <pub-id pub-id-type="doi">10.1063/1.1699114</pub-id>
        </mixed-citation>
      </ref>
      <ref id="CR19">
        <label>19.</label>
        <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pelikan</surname><given-names>M</given-names></name><name><surname>Goldberg</surname><given-names>DE</given-names></name><name><surname>Lobo</surname><given-names>F</given-names></name></person-group><article-title>A survey of optimization by building and using probabilistic models</article-title><source>Comput Optim Appl</source><year>2002</year><volume>21</volume><fpage>5</fpage><lpage>20</lpage>0988.90052<pub-id pub-id-type="doi">10.1023/A:1013500812258</pub-id>1883087</mixed-citation>
      </ref>
      <ref id="CR20">
        <label>20.</label>
        <mixed-citation publication-type="other">Radcliffe NJ (1991) Forma analysis and random respectful recombination. In: Proceeding of the fourth international conference on genenetic algorithms. pp 222&#x2013;229. Morgan Kaufmann</mixed-citation>
      </ref>
      <ref id="CR21">
        <label>21.</label>
        <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Roberts</surname><given-names>GO</given-names></name><name><surname>Gelman</surname><given-names>A</given-names></name><name><surname>Gilks</surname><given-names>WR</given-names></name></person-group><article-title>Weak convergence and optimal scaling of random walk Metropolis algorithms</article-title><source>The Annals of Applied Probability</source><year>1997</year><volume>7</volume><issue>1</issue><fpage>110</fpage><lpage>120</lpage>0876.60015<pub-id pub-id-type="doi">10.1214/aoap/1034625254</pub-id>1428751</mixed-citation>
      </ref>
      <ref id="CR22">
        <label>22.</label>
        <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Storn</surname><given-names>R</given-names></name><name><surname>Price</surname><given-names>K</given-names></name></person-group><article-title>Differential evolution&#x2014;a simple and efficient heuristic for global optimization over continuous spaces</article-title><source>Journal Global Optimization</source><year>1997</year><volume>11</volume><fpage>341</fpage><lpage>359</lpage>0888.90135<pub-id pub-id-type="doi">10.1023/A:1008202821328</pub-id>1479553</mixed-citation>
      </ref>
      <ref id="CR23">
        <label>23.</label>
        <mixed-citation publication-type="other">Strens MJA (2003) Evolutionary MCMC sampling and optimization in discrete spaces. In: Proceeding of international conference of machine learning (ICML&#x2019;03). pp 736&#x2013;743</mixed-citation>
      </ref>
      <ref id="CR24">
        <label>24.</label>
        <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>ter Braak</surname><given-names>CJF</given-names></name></person-group><article-title>Genetic algorithms and Markov chain Monte Carlo: differential evolution Markov Chain makes Bayesian computing easy</article-title><source>Stat Comput</source><year>2006</year><volume>16</volume><issue>3</issue><fpage>239</fpage><lpage>249</lpage><pub-id pub-id-type="doi">10.1007/s11222-006-8769-1</pub-id>2242236</mixed-citation>
      </ref>
      <ref id="CR25">
        <label>25.</label>
        <mixed-citation publication-type="other">Thierens D, Goldberg DE (1994) Elitist recombination: an integrated selection-recombination GA. In Proceeding of the congress on computational intelligence. pp 508&#x2013;512</mixed-citation>
      </ref>
      <ref id="CR26">
        <label>26.</label>
        <mixed-citation publication-type="other">Wolpert DH, Lee CF (2005) Adaptive metropolis sampling and optimization with product distributions. Technical report, NASA Ames Research Center</mixed-citation>
      </ref>
      <ref id="CR27">
        <label>27.</label>
        <mixed-citation publication-type="journal">
          <person-group person-group-type="author">
            <name>
              <surname>Zhang</surname>
              <given-names>BT</given-names>
            </name>
            <name>
              <surname>Cho</surname>
              <given-names>DY</given-names>
            </name>
          </person-group>
          <article-title>System identification using evolutionary Markov Chain Monte Carlo</article-title>
          <source>Journal of Systems Architecture</source>
          <year>2001</year>
          <volume>47</volume>
          <fpage>587</fpage>
          <lpage>599</lpage>
          <pub-id pub-id-type="doi">10.1016/S1383-7621(01)00017-0</pub-id>
        </mixed-citation>
      </ref>
    </ref-list>
    <app-group>
      <app id="Appa">
        <sec id="Sec38">
          <title>Appendix 1: Proof for Proposition 7</title>
          <p><italic>Q</italic><sub><italic>m</italic>&#xD7;<italic>r</italic></sub> and <italic>Q</italic><sub><italic>r</italic>&#xD7;<italic>m</italic></sub> are irreducible because they have non-zero probabilities to go from any population to any other population, <italic>Q</italic><sub><italic>m</italic>&#xD7;<italic>r</italic></sub>&#xA0;&gt;&#xA0;0 and <italic>Q</italic><sub><italic>r</italic>&#xD7;<italic>m</italic></sub>&#xA0;&gt;&#xA0;0.</p>
          <p>When <italic>Q</italic><sub><italic>r</italic></sub> is symmetric, we have<disp-formula id="Equat"><alternatives><tex-math id="M146">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \begin{aligned} Q_{m \times r}(Y \mid {\bf X}^{(t)}) \\ &amp;= \sum_{{\bf Y}^\prime \in E} Q_m({\bf Y}^\prime \mid {\bf X}^{(t)}) \cdot Q_{r}(Y \mid {\bf Y}^{\prime}) \\&amp; = \sum_{{\bf Y}^\prime \in E} Q_{r}({\bf Y}^\prime \mid Y) \cdot Q_{m}({\bf X}^{(t)} \mid {\bf Y}^{\prime}) = Q_{r \times m}({\bf X}^{(t)} \mid Y)  \end{aligned}$$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equat.gif" position="anchor"/></alternatives></disp-formula><italic>Q</italic><sub><italic>r</italic>&#xD7;<italic>m</italic></sub> and <italic>Q</italic><sub><italic>m</italic>&#xD7;<italic>r</italic></sub> are symmetrical for recombinations that swap alleles because mutation generates the alleles which differ in the two populations and recombination swaps them or vice-versa.</p>
          <p>By means of an example, we prove that <italic>Q</italic><sub><italic>dif</italic>&#xD7;<italic>m</italic></sub> is non-symmetrical. Consider the current population of bits <bold>X</bold><sup>(<italic>t</italic>)</sup>&#xA0;=&#xA0;{0,&#xA0;1,&#xA0;0} and the candidate population <italic>Y</italic>&#xA0;=&#xA0;{1,&#xA0;1,&#xA0;1}, the mutation rate of 1/3, and, for simplicity, the xor operator. We compute the probability to generate <italic>Y</italic> from <bold>X</bold><sup>(<italic>t</italic>)</sup> with uniform mutation and then with xor recombination and the inverse probability to generate <bold>X</bold><sup>(<italic>t</italic>)</sup> from <italic>Y</italic>.</p>
          <p>Let&#x2019;s consider all possible parent choices for xor. With the xor recombination, given the distance <inline-formula id="IEq91"><alternatives><tex-math id="M147">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Updelta(0,1)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq91.gif"/></alternatives></inline-formula> between the first two bits, we generate 1 from the third bit of the current population 0; the intermediate population is now <inline-formula id="IEq92"><alternatives><tex-math id="M148">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf Y}^\prime = \left\{0,1,1\right\}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq92.gif"/></alternatives></inline-formula>. The distance between the second and the third bit is also <inline-formula id="IEq93"><alternatives><tex-math id="M149">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Updelta(1,0)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq93.gif"/></alternatives></inline-formula>, and thus the intermediate population is again <inline-formula id="IEq94"><alternatives><tex-math id="M150">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf Y}^\prime = \left\{1,1,0\right\}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq94.gif"/></alternatives></inline-formula>. Since the distance between first and second bits of the current population is <inline-formula id="IEq95"><alternatives><tex-math id="M151">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Updelta(0,0)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq95.gif"/></alternatives></inline-formula>, we generate 1 from 1 and the intermediate population is <inline-formula id="IEq96"><alternatives><tex-math id="M152">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf Y}^\prime = \left\{0,1,0\right\}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq96.gif"/></alternatives></inline-formula>. When we mutate the intermediate populations, we have <inline-formula id="IEq96078"><alternatives><tex-math id="M153">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Q_m (1,1,1 \mid 0,1,0) $$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq96078.gif"/></alternatives></inline-formula>=&#xA0;(1/3)<sup>2</sup> &#xB7;2/3 and <inline-formula id="IEq960789"><alternatives><tex-math id="M154">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Q_m (1,1,1 \mid 1,1,0) $$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq960789.gif"/></alternatives></inline-formula>&#xA0;=&#xA0;(2/3)<sup>2</sup> &#xB7;1/3. Computing in a similar manner the inverse probability, for all possible intermediate populations, we have <inline-formula id="IEq97"><alternatives><tex-math id="M155">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Q_{dif \times m}(Y \mid {\bf X}^{(t)}) = 1/3 \cdot ((1/3)^2 \cdot 2/3 +2 \cdot (2/3)^2 \cdot 1/3) = 10/81$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq97.gif"/></alternatives></inline-formula>.</p>
          <p>To generate <bold>X</bold><sup>(<italic>t</italic>)</sup> from <italic>Y</italic> with <italic>Q</italic><sub><italic>dif</italic>&#xD7;</sub><italic>m</italic>, we mutate <italic>Y</italic> to <inline-formula id="IEq98"><alternatives><tex-math id="M156">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf Y}^\prime = \left\{0,1,1\right\}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq98.gif"/></alternatives></inline-formula> and then swap with the xor operator the last bit given the difference between the first two bits resulting in <bold>X</bold><sup>(<italic>t</italic>)</sup>. Similarly, we mutate <italic>Y</italic> to <inline-formula id="IEq99"><alternatives><tex-math id="M157">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf Y}^\prime = \left\{1,1,0\right\}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq99.gif"/></alternatives></inline-formula> and swap the first bit of <inline-formula id="IEq100"><alternatives><tex-math id="M158">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf Y}^\prime$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq100.gif"/></alternatives></inline-formula> or we mutate into <inline-formula id="IEq101"><alternatives><tex-math id="M159">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf Y}^\prime = Y$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq101.gif"/></alternatives></inline-formula> and do not swap the middle bit with xor since the difference between the first and the last bit is 0. We then have <inline-formula id="IEq250010"><alternatives><tex-math id="M160">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ Q_{diff \times m}({\bf X}^{(t)} \mid Y).$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq250010.gif"/></alternatives></inline-formula>&#xA0;=&#xA0;1/3 &#xB7;&#xA0;(2 &#xB7;&#xA0;(2/3)<sup>2</sup> &#xB7;&#xA0;1/3+1/3 &#xB7;(2/3)<sup>2</sup>)&#xA0;=&#xA0;4/81.</p>
          <p>We conclude that  <italic>Q</italic><sub><italic>dif</italic>&#xD7;<italic>m</italic></sub> is not symmetrical since <inline-formula id="IEq25001"><alternatives><tex-math id="M161">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ Q_{diff \times m}({\bf X}^{(t)} \mid Y) \neq Q_{dif \times m} (Y \mid {\bf X}^{(t)}).$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq25001.gif"/></alternatives></inline-formula><inline-formula id="IEq1798"><alternatives><tex-math id="M162">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \square $$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq1798.gif"/></alternatives></inline-formula></p>
        </sec>
        <sec id="Sec39">
          <title>Appendix 2: Proof for Proposition 8</title>
          <p><italic>Q</italic><sub><italic>m</italic>&#xD7;<italic>mask</italic></sub> is irreducible, since is has <inline-formula id="IEq10250"><alternatives><tex-math id="M163">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Q_{m \times mask} (\cdot \mid \cdot) &gt; 0. $$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq10250.gif"/></alternatives></inline-formula> If <italic>p</italic><sub><italic>x</italic></sub>&#xA0;=&#xA0;1/&#x2113;, the <italic>Q</italic><sub><italic>m</italic>&#xD7;<italic>mask</italic></sub> is equivalent with the mutation operator, since all alleles in the parents can be flipped with the probability 1/&#x2113;. Then <italic>Q</italic><sub><italic>m</italic>&#xD7;<italic>mask</italic></sub> is symmetric.</p>
          <p>For <italic>p</italic><sub><italic>m</italic></sub>&#xA0;=&#xA0;1/2, we uniformly random generate the child <bold>y</bold><sub><italic>i</italic>+1</sub> from the mask <inline-formula id="IEq102"><alternatives><tex-math id="M164">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_{i+1}.$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq102.gif"/></alternatives></inline-formula> Then, <italic>Q</italic><sub><italic>m</italic>&#xD7;<italic>mask</italic></sub> is symmetric since the common and uncommon parts of the parents and the children are randomly generated.</p>
          <p>By means of an example, we show that <italic>Q</italic><sub><italic>m</italic>&#xD7;<italic>mask</italic></sub> is non-symmetrical for other values of <italic>p</italic><sub><italic>m</italic></sub> and <italic>p</italic><sub><italic>x</italic></sub>. Consider <inline-formula id="IEq103"><alternatives><tex-math id="M165">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_i = {\bf x}^{(t)}_{i+1} = 0$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq103.gif"/></alternatives></inline-formula> and <inline-formula id="IEq104"><alternatives><tex-math id="M166">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left\{{\bf y}_{i},{\bf y}_{i+1}\right\} = \left\{1,0\right\}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq104.gif"/></alternatives></inline-formula>. When <bold>y</bold><sub><italic>i</italic></sub>&#xA0;=&#xA0;1 and <bold>y</bold><sub><italic>i</italic>+1</sub>&#xA0;=&#xA0;0, the probability to generate <bold>y</bold><sub><italic>i</italic></sub> is 1/&#x2113;, and the probability to generate <bold>y</bold><sub><italic>i</italic>+1</sub> is 1&#xA0;&#x2212;&#xA0;<italic>p</italic><sub><italic>m</italic></sub>. The inverse probability is <inline-formula id="IEq10450"><alternatives><tex-math id="M167">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Q_{m \times mask} ({\bf x}_i^{(t)}, {\bf x}_{(i+1)}^{(t)} \mid {\bf y}_i, {\bf y}_{i+1})$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq10450.gif"/></alternatives></inline-formula>&#xA0;=&#xA0;(1&#xA0;&#x2212;&#xA0;<italic>p</italic><sub><italic>x</italic></sub>) &#xA0;&#xB7;&#xA0;(1&#xA0;&#x2212;&#xA0;<italic>p</italic><sub><italic>m</italic></sub>). When <bold>y</bold><sub><italic>i</italic></sub>&#xA0;=&#xA0;0 and <bold>y</bold><sub><italic>i</italic>+1</sub>&#xA0;=&#xA0;1, the probability to generate <bold>y</bold><sub><italic>i</italic></sub> is 1&#xA0;&#x2212;&#xA0;1/&#x2113; and the probability to generate <bold>y</bold><sub><italic>i</italic>+1</sub> is <italic>p</italic><sub><italic>m</italic></sub>. The reverse probability is now <italic>p</italic><sub><italic>x</italic></sub>&#xA0;&#xB7;&#xA0;<italic>p</italic><sub><italic>m</italic></sub>. Then <inline-formula id="IEq105"><alternatives><tex-math id="M168">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Q_{m \times mask}({\bf y}_{i}, {\bf y}_{i+1} \, \mid \, {\bf x}^{(t)}_i, {\bf x}^{(t)}_{i+1}) = (1 - p_m)/\ell +(1 - 1/\ell) \cdot p_m $$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq105.gif"/></alternatives></inline-formula> and <inline-formula id="IEq105091"><alternatives><tex-math id="M169">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Q_{m \times mask} (x(t)_{i}, x{^(t)_(i+1)} \mid y_{i}, y_{i+1})$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq105091.gif"/></alternatives></inline-formula>&#xA0;=&#xA0;(1&#xA0;&#x2212;&#xA0;<italic>p</italic><sub><italic>x</italic></sub>)&#xA0;&#xB7;&#xA0;(1&#xA0;&#x2212;&#xA0;<italic>p</italic><sub><italic>m</italic></sub>)+<italic>p</italic><sub><italic>x</italic></sub>&#xA0;&#xB7;&#xA0;<italic>p</italic><sub><italic>m</italic></sub>. We now have that if <italic>p</italic><sub><italic>x</italic></sub>&#xA0;&#x2260;&#xA0;1/&#x2113; and <italic>p</italic><sub><italic>m</italic></sub>&#xA0;&#x2260;&#xA0;1/2, then <italic>Q</italic><sub><italic>m</italic>&#xD7;<italic>mask</italic></sub> is non-symmetrical. <inline-formula id="IEq106"><alternatives><tex-math id="M170">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\square$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq106.gif"/></alternatives></inline-formula></p>
        </sec>
        <sec id="Sec40">
          <title>Appendix 3: Proof for Theorem 1</title>
          <p>We consider that the EMCMC resulting from the interaction between transition matrix <italic>Q</italic> and the (generalized) Metropolis acceptance rule is an EMCMC over the <italic>N</italic> dimensional search space <italic>E</italic><sup><italic>N</italic></sup>. For ease of exposure and without loss of generality, let&#x2019;s consider populations of two individuals <italic>N</italic>&#xA0;=&#xA0;2. Two children {<bold>y</bold><sub>1</sub>, <bold>y</bold><sub>2</sub>} that are generated with some irreducible and symmetrical proposal distribution <italic>Q</italic> from two parents <inline-formula id="IEq107"><alternatives><tex-math id="M171">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left\{{\bf x}^{(t)}_1, {\bf x}^{(t)}_2\right\}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq107.gif"/></alternatives></inline-formula>. Then <inline-formula id="IEq108"><alternatives><tex-math id="M172">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Q({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) = Q({\bf x}^{(t)}_1, {\bf x}^{(t)}_2 \mid {\bf y}_1, {\bf y}_2)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq108.gif"/></alternatives></inline-formula>.</p>
          <p>The Metropolis acceptance rule in this case is <inline-formula id="IEq109"><alternatives><tex-math id="M173">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha_C({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1,{\bf x}^{(t)}_2) = \hbox{min}(1,{\frac{\hat{P}_1({\bf y}_1) \cdot \hat{P}_2({\bf y}_2)} {\hat{P}_1({\bf x}^{(t)}_1) \cdot \hat{P}_2({\bf x}^{(t)}_2)}})$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq109.gif"/></alternatives></inline-formula>. The transition matrix we denote with <italic>K</italic><sub><italic>C</italic></sub>. The transition probability that two children <bold>y</bold><sub>1</sub> and <bold>y</bold><sub>2</sub> are generated and both are accepted is<disp-formula id="Equau"><alternatives><tex-math id="M174">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \begin{aligned} &amp; K_C({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1,{\bf x}^{(t)}_2)\\ &amp; \quad = Q({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1,{\bf x}^{(t)}_2) \cdot \alpha_{C}({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1,{\bf x}^{(t)}_2) \end{aligned}$$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equau.gif" position="anchor"/></alternatives></disp-formula>The rejection transition probability that both children are rejected is<disp-formula id="Equav"><alternatives><tex-math id="M175">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} &amp; \sum_{\left\{{\bf y}_1,{\bf y}_2\right\} \neq \left\{{\bf x}^{(t)}_1,{\bf x}^{(t)}_2\right\}}Q({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1,{\bf x}^{(t)}_2)\\ &amp; \quad \cdot \lbrack 1 - \alpha_{C}({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1,{\bf x}^{(t)}_2) \rbrack \end{aligned} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equav.gif" position="anchor"/></alternatives></disp-formula>Let&#x2019;s assume without loss of generality that <inline-formula id="IEq110"><alternatives><tex-math id="M176">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\frac{\hat{P}_1({\bf y}_1) \cdot \hat{P}_2({\bf y}_2)}{\hat{P}_1({\bf x}^{(t)}_1) \cdot \hat{P}_2({\bf x}^{(t)}_2)}} &lt; 1$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq110.gif"/></alternatives></inline-formula>. Then,<disp-formula id="Equaw"><alternatives><tex-math id="M177">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \begin{aligned} \alpha_C({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \\ &amp; = \hbox{min}(1,{\frac{\hat{P}_1({\bf y}_1) \cdot \hat{P}_2({\bf y}_2)} {\hat{P}_1({\bf x}^{(t)}_1) \cdot \hat{P}_2({\bf x}^{(t)}_2)}}) \\ &amp; = {\frac{\hat{P}_1({\bf y}_1) \cdot \hat{P}_2({\bf y}_2)}{\hat{P}_1({\bf x}^{(t)}_1) \cdot \hat{P}_2({\bf x}^{(t)}_2)}} \end{aligned}$$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equaw.gif" position="anchor"/></alternatives></disp-formula>and <inline-formula id="IEq111"><alternatives><tex-math id="M178">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha({\bf x}^{(t)}_1, {\bf x}^{(t)}_2 \mid {\bf y}_1, {\bf y}_2) = 1$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq111.gif"/></alternatives></inline-formula>.</p>
          <p>We now show that the detailed balance condition holds<disp-formula id="Equax"><alternatives><tex-math id="M179">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}&amp;\hat{P}_1({\bf x}^{(t)}_1) \cdot \hat{P}_2({\bf x}^{(t)}_2) \cdot K_C({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1,{\bf x}^{(t)}_2) \\&amp; \quad =\hat{P}_1({\bf x}^{(t)}_1)\cdot \hat{P}_2({\bf x}^{(t)}_2)\cdot Q({\bf y}_1, {\bf y}_2\mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2)\cdot \alpha_C({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2)\\&amp; \quad =\hat{P}_1({\bf x}^{(t)}_1) \cdot \hat{P}_2({\bf x}^{(t)}_2) \cdot Q({\bf y}_1, {\bf y}_2 \mid{\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \cdot {\frac{\hat{P}_1({\bf y}_1)\cdot\hat{P}_2({\bf y}_2)} {\hat{P}_1({\bf x}^{(t)}_1)\cdot\hat{P}_2({\bf x}^{(t)}_2)}} \\&amp; \quad =\hat{P}_1({\bf y}_1)\cdot \hat{P}_2({\bf y}_2) \cdot Q({\bf y}_1, {\bf y}_2\mid{\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \\&amp; \quad =\hat{P}_1({\bf y}_1)\cdot \hat{P}_2({\bf y}_2) \cdot Q({\bf x}^{(t)}_1, {\bf x}^{(t)}_2\mid {\bf y}_1, {\bf y}_2) \cdot 1 \\&amp; \quad =\hat{P}_1({\bf y}_1) \cdot \hat{P}_2({\bf y}_2) \cdot Q({\bf x}^{(t)}_1, {\bf x}^{(t)}_2 \mid {\bf y}_1, {\bf y}_2)\cdot \alpha_C({\bf x}^{(t)}_1, {\bf x}^{(t)}_2 \mid {\bf y}_1, {\bf y}_2)\\&amp; \quad =\hat{P}_1({\bf y}_1) \cdot\hat{P}_2({\bf y}_2) \cdot K_C({\bf x}^{(t)}_1, {\bf x}^{(t)}_2\mid {\bf y}_1, {\bf y}_2)\end{aligned}$$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equax.gif" position="anchor"/></alternatives></disp-formula></p>
          <p>The marginal transition probability to generate <inline-formula id="IEq112"><alternatives><tex-math id="M180">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_1$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq112.gif"/></alternatives></inline-formula> from <bold>y</bold><sub>1</sub> when summing over the variables of the second chain is<disp-formula id="Equay"><alternatives><tex-math id="M181">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ K_{C}({\bf y}_1 \mid {\bf x}^{(t)}_1) = \sum_{{\bf x}^{(t)}_2, {\bf y}_2} \hat{P}_2({\bf x}_2) \cdot K_{C}({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1,{\bf x}^{(t)}_2) $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equay.gif" position="anchor"/></alternatives></disp-formula>The stationary marginal distribution of the first chain is <inline-formula id="IEq113"><alternatives><tex-math id="M182">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{P}(\cdot)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq113.gif"/></alternatives></inline-formula></p>
          <p>From the above equations we infer<disp-formula id="Equaz"><alternatives><tex-math id="M183">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}\hat{P}_1({\bf y}_1)&amp;=\sum_{{\bf y}_2}\sum_{{\bf x}^{(t)}_1,{\bf x}^{(t)}_2} K_{C}({\bf y}_1,{\bf y}_2\mid {\bf x}^{(t)}_1,{\bf x}^{(t)}_2) \cdot \hat{P}_1({\bf x}^{(t)}_1) \cdot \hat{P}_2({\bf x}^{(t)}_2)\\&amp;=\sum_{{\bf y}_2} \sum_{{\bf x}^{(t)}_1,{\bf x}^{(t)}_2}K_C({\bf x}^{(t)}_1,{\bf x}^{(t)}_2 \mid {\bf y}_1,{\bf y}_2)\cdot \hat{P}_1({\bf y}_1) \cdot \hat{P}_2({\bf y}_2) \\&amp;=\sum_{{\bf y}_2} \hat{P}_1({\bf y}_1) \cdot \hat{P}_2({\bf y}_2) \cdot \sum_{{\bf x}^{(t)}_1,{\bf x}^{(t)}_2} K_C({\bf x}^{(t)}_1, {\bf x}^{(t)}_2 \mid {\bf y}_1, {\bf y}_2)\\&amp;=\hat{P}_1({\bf y}_1) \cdot \sum_{{\bf y}_2}\hat{P}_2({\bf y}_2) \cdot 1 = \hat{P}_1({\bf y}_1) \end{aligned} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equaz.gif" position="anchor"/></alternatives></disp-formula>where we have used<disp-formula id="Equba"><alternatives><tex-math id="M184">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}&amp;\hat{P}_1({\bf y}_1) \cdot \hat{P}_2({\bf y}_2) \cdot K_C({\bf x}^{(t)}_1, {\bf x}^{(t)}_2 \mid {\bf y}_1, {\bf y}_2) \\&amp; \quad =\hat{P}_1({\bf x}^{(t)}_1) \cdot \hat{P}_2({\bf x}^{(t)}_2) \cdot K_C({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1,{\bf x}^{(t)}_2)\end{aligned}$$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equba.gif" position="anchor"/></alternatives></disp-formula> We conclude that the marginal target distribution for the <italic>i</italic>-th chain is <italic>P</italic><sub><italic>i</italic></sub>(&#xB7;) and that this EMCMC algorithm has the stationary distribution <italic>P</italic><sub>1</sub>(&#xB7;)&#xD7;<italic>P</italic><sub>2</sub>(&#xB7;).</p>
          <p>The EMCMC algorithm is irreducible since the proposal distribution <italic>Q</italic> is irreducible. This algorithm is aperiodic since the Metropolis algorithm, by construction is aperiodic. We conclude that this EMCMC is ergodic with the stationary distribution <italic>P</italic><sub>1</sub>(&#xB7;)&#xD7;<italic>P</italic><sub>2</sub>(&#xB7;), where <italic>P</italic><sub><italic>i</italic></sub>(&#xB7;) is the marginal target distribution of the <italic>i</italic>-th chain. <inline-formula id="IEq114"><alternatives><tex-math id="M185">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\square$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq114.gif"/></alternatives></inline-formula></p>
        </sec>
        <sec id="Sec41">
          <title>Appendix 4: Proof of Proposition 10</title>
          <p>Consider two parents <inline-formula id="IEq115"><alternatives><tex-math id="M186">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_1$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq115.gif"/></alternatives></inline-formula> and <inline-formula id="IEq116"><alternatives><tex-math id="M187">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf x}^{(t)}_2$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq116.gif"/></alternatives></inline-formula> and their two generated children <bold>y</bold><sub>1</sub> and <bold>y</bold><sub>2</sub>, and the coupled acceptance &#x3B1;<sub><italic>C</italic></sub> that accepts/rejects both states and the probability to accept/reject one or both children with &#x3B1;<sub>1.1</sub>. At first, we prove the first inequality from Proposition 10<disp-formula id="Equbb"><alternatives><tex-math id="M188">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} &amp; K_{C}({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \\ &amp; \quad \leq K_{1.1}({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2)+K_{1.1}({\bf y}_1, {\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \end{aligned}$$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equbb.gif" position="anchor"/></alternatives></disp-formula> The right side of this inequation can be rewriten as<disp-formula id="Equbc"><alternatives><tex-math id="M189">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}&amp; K_{1.1}({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1,{\bf x}^{(t)}_2) +K_{1.1}({\bf y}_1, {\bf x}^{(t)}_2 \mid{\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \\ &amp;\quad = Q({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \cdot \alpha({\bf y}_1 \mid {\bf x}^{(t)}_1) \cdot \alpha({\bf y}_2 \mid{\bf x}^{(t)}_2)\\ &amp;\qquad +Q({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \cdot \alpha({\bf y}_1 \mid{\bf x}^{(t)}_1) \cdot \lbrack 1 - \alpha({\bf y}_2 \mid {\bf x}^{(t)}_2) \rbrack\\ &amp;\quad = Q({\bf y}_1, {\bf y}_2 \mid{\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \cdot \alpha({\bf y}_1 \mid{\bf x}^{(t)}_1) = Q({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2)\end{aligned} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equbc.gif" position="anchor"/></alternatives></disp-formula>because <inline-formula id="IEq117"><alternatives><tex-math id="M190">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{P}({\bf y}_1) &gt; \hat{P}({\bf x}^{(t)}_1)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq117.gif"/></alternatives></inline-formula> and, thus <inline-formula id="IEq118"><alternatives><tex-math id="M191">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha({\bf y}_1 \mid {\bf x}^{(t)}_1) = 1$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq118.gif"/></alternatives></inline-formula>. The left side of the inequality 3 can be rewritten as<disp-formula id="Equbd"><alternatives><tex-math id="M192">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} &amp; K_{C}({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \\ &amp; \quad= Q({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \cdot \alpha_C({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \end{aligned} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equbd.gif" position="anchor"/></alternatives></disp-formula>The inequality 3 holds since<disp-formula id="Eqube"><alternatives><tex-math id="M193">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \alpha_C({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \leq 1 $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Eqube.gif" position="anchor"/></alternatives></disp-formula></p>
          <p>We now prove that the rejection probability for a less fit child, <inline-formula id="IEq119"><alternatives><tex-math id="M194">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{P}({\bf y}_1) &lt; \hat{P}({\bf x}^{(t)}_1)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq119.gif"/></alternatives></inline-formula>, is larger for <italic>K</italic><sub>1.1</sub> than for <italic>K</italic><sub><italic>C</italic></sub> when the second child is more fit than the second parent, <inline-formula id="IEq120"><alternatives><tex-math id="M195">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{P}({\bf y}_2) &gt; \hat{P}({\bf x}^{(t)}_2)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq120.gif"/></alternatives></inline-formula>. Then<disp-formula id="Equbf"><alternatives><tex-math id="M196">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ K_{C}({\bf x}^{(t)}_1, {\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \leq K_{1.1}({\bf x}^{(t)}_1, {\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) +K_{1.1}({\bf x}^{(t)}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equbf.gif" position="anchor"/></alternatives></disp-formula>The right side of the inequality 4 is<disp-formula id="Equbg"><alternatives><tex-math id="M197">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}&amp; K_{1.1}({\bf x}^{(t)}_1, {\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) +K_{1.1}({\bf x}^{(t)}_1, {\bf y}_2\mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \\ &amp; \quad = Q({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \cdot\lbrack 1 - \alpha({\bf y}_1 \mid {\bf x}^{(t)}_1) \rbrack\cdot \lbrack 1 - \alpha({\bf y}_2 \mid {\bf x}^{(t)}_2)\rbrack \\&amp; \qquad +Q({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \cdot \lbrack 1 - \alpha({\bf y}_1\mid {\bf x}^{(t)}_1) \rbrack \cdot \alpha({\bf y}_2\mid {\bf x}^{(t)}_2)\\&amp; \quad = Q({\bf y}_1, {\bf y}_2\mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \cdot \lbrack 1 -\alpha({\bf y}_1 \mid {\bf x}^{(t)}_1) \rbrack\end{aligned}$$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equbg.gif" position="anchor"/></alternatives></disp-formula>Rewriting the left side of the inequality 4<disp-formula id="Equbh"><alternatives><tex-math id="M198">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \begin{aligned} &amp;K_{C}({\bf x}^{(t)}_1, {\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \\ &amp; \quad = Q({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \cdot \lbrack 1 - \alpha_C({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \rbrack \end{aligned} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equbh.gif" position="anchor"/></alternatives></disp-formula>The inequality 4 holds since<disp-formula id="Equbi"><alternatives><tex-math id="M199">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}&amp;K_{C}({\bf x}^{(t)}_1, {\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) - K_{1.1}({\bf x}^{(t)}_1, {\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \\&amp;\quad = \lbrack 1 - \alpha_C({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \rbrack - \lbrack 1 - \alpha({\bf y}_1\mid {\bf x}^{(t)}_1) \rbrack \\ &amp;\quad =\alpha({\bf y}_1\mid {\bf x}^{(t)}_1) - \alpha_C({\bf y}_1, {\bf y}_2\mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \\&amp;\quad = {\frac{\hat{P}({\bf y}_1)}{\hat{P}({\bf x}^{(t)}_1)}} -{\frac{\hat{P}({\bf y}_1) \cdot \hat{P}({\bf y}_2)}{\hat{P}({\bf x}^{(t)}_1) \cdot \hat{P}({\bf x}^{(t)}_2)}} = {\frac{\hat{P}({\bf y}_1)}{\hat{P}({\bf x}^{(t)}_1)}} \cdot \left[1 -{\frac{\hat{P}({\bf y}_2)}{\hat{P}({\bf x}^{(t)}_2)}}\right] \leq 0 \end{aligned}$$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equbi.gif" position="anchor"/></alternatives></disp-formula></p>
          <p>Following the same line of reasoning, the rejection probability that a less fit child, <inline-formula id="IEq121"><alternatives><tex-math id="M200">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{P}({\bf y}_1) &lt; \hat{P}({\bf x}^{(t)}_1)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq121.gif"/></alternatives></inline-formula>, is lower for <italic>K</italic><sub>1.1</sub> than for <italic>K</italic><sub><italic>C</italic></sub> when the second child is less fit than the second parent, <inline-formula id="IEq122"><alternatives><tex-math id="M201">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{P}({\bf y}_2) &lt; \hat{P}({\bf x}^{(t)}_2)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq122.gif"/></alternatives></inline-formula> follows directly.</p>
          <p>We now show that the EMCMC defined by <italic>K</italic><sub>1.1</sub> has detailed balance if and only if<disp-formula id="Equbj"><alternatives><tex-math id="M202">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ Q({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) = Q({\bf x}^{(t)}_1, {\bf y}_2 \mid {\bf y}_1, {\bf x}^{(t)}_2) $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equbj.gif" position="anchor"/></alternatives></disp-formula>The detailed balance should hold only in the case that two different children are proposed but only one of them is accepted and the other is rejected<disp-formula id="Equbk"><alternatives><tex-math id="M203">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \begin{aligned} \hat{P}_1({\bf x}^{(t)}_1) \cdot \hat{P}_2({\bf x}^{(t)}_2) \cdot \alpha({\bf y}_1 \mid {\bf x}^{(t)}_1) \cdot \lbrack 1 - \alpha({\bf y}_2 \mid {\bf x}^{(t)}_2)\rbrack \cdot Q({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1,{\bf x}^{(t)}_2)= \hat{P}_1({\bf y}_1) \cdot \hat{P}_2({\bf x}^{(t)}_2) \cdot \alpha({\bf x}^{(t)}_1 \mid {\bf y}_1) \cdot \lbrack 1 - \alpha({\bf y}_2 \mid {\bf x}^{(t)}_2)\rbrack \cdot Q({\bf x}^{(t)}_1, {\bf y}_2 \mid {\bf y}_1, {\bf x}^{(t)}_2) \end{aligned} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equbk.gif" position="anchor"/></alternatives></disp-formula>Or the above equation holds if and only if<disp-formula id="Equbl"><alternatives><tex-math id="M204">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ Q({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) = Q({\bf x}^{(t)}_1, {\bf y}_2 \mid {\bf y}_1, {\bf x}^{(t)}_2) $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equbl.gif" position="anchor"/></alternatives></disp-formula>If the detailed condition holds and the proposal distribution is irreducible and symmetrical, the EMCMC is ergodic and converge to the target distribution <italic>P</italic><sub>1</sub>(&#xB7;)&#xD7;<italic>P</italic><sub>2</sub>(&#xB7;). <inline-formula id="IEq123"><alternatives><tex-math id="M205">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\square$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq123.gif"/></alternatives></inline-formula></p>
        </sec>
        <sec id="Sec42">
          <title>Appendix 5: Proof of Proposition 11</title>
          <p>We show that ECA does not have detailed balance for any non-uniform distribution. Let&#x2019;s consider three states, <inline-formula id="IEq124"><alternatives><tex-math id="M206">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf y}_1, {\bf x}^{(t)}_1, {\bf x}^{(t)}_2$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq124.gif"/></alternatives></inline-formula> such that <inline-formula id="IEq125"><alternatives><tex-math id="M207">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{P}({\bf y}_1) &gt; \hat{P}({\bf x}^{(t)}_2) &gt; \hat{P}({\bf x}^{(t)}_1)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq125.gif"/></alternatives></inline-formula>. In our discussion from Sect. <xref rid="Sec26" ref-type="sec">5.3 </xref>we show that<disp-formula id="Equbm"><alternatives><tex-math id="M208">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} &amp; K_{ECA}({\bf y}_1, {\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \\ &amp; \quad = K_C({\bf y}_1, {\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) +\sum_{{\bf y}_2, \left\{{\bf y}_1,{\bf x}^{(t)}_2\right\} = \max_2\left\{{\bf y}_1,{\bf y}_2,{\bf x}^{(t)}_1,{\bf x}^{(t)}_2\right\}} Q({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \end{aligned}$$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equbm.gif" position="anchor"/></alternatives></disp-formula>If ECA has detailed balance, then<disp-formula id="Equbn"><alternatives><tex-math id="M209">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \begin{aligned} &amp; Q({\bf y}_1, {\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \cdot K_{ECA}({\bf y}_1, {\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \\ &amp; \quad = Q({\bf x}^{(t)}_1, {\bf x}^{(t)}_2 \mid {\bf y}_1, {\bf x}^{(t)}_2) \cdot K_{ECA}({\bf x}^{(t)}_1, {\bf x}^{(t)}_2 \mid {\bf y}_1, {\bf x}^{(t)}_2) \end{aligned}$$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equbn.gif" position="anchor"/></alternatives></disp-formula>Because <italic>Q</italic> is symmetrical we further have<disp-formula id="Equbo"><alternatives><tex-math id="M210">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ K_{ECA}({\bf y}_1, {\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) = K_{ECA}({\bf x}^{(t)}_1, {\bf x}^{(t)}_2 \mid {\bf y}_1, {\bf x}^{(t)}_2) $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equbo.gif" position="anchor"/></alternatives></disp-formula><italic>K</italic><sub><italic>C</italic></sub> is also symmetrical, so further we have that<disp-formula id="Equbp"><alternatives><tex-math id="M211">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \sum_{{\bf y}_2, \left\{{\bf y}_1,{\bf x}^{(t)}_2\right\} = \max_2\left\{{\bf y}_1,{\bf y}_2,{\bf x}^{(t)}_1,{\bf x}^{(t)}_2\right\}} Q({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) = \sum_{{\bf y}_2, \left\{{\bf x}^{(t)}_1,{\bf x}^{(t)}_2\right\} = \max_2\left\{{\bf y}_1,{\bf y}_2,{\bf x}^{(t)}_1,{\bf x}^{(t)}_2\right\}} Q({\bf x}^{(t)}_1, {\bf y}_2 \mid {\bf y}_1, {\bf x}^{(t)}_2) $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equbp.gif" position="anchor"/></alternatives></disp-formula>The above equation does not hold since for the first sum requires that<disp-formula id="Equbq"><alternatives><tex-math id="M212">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \left\{{\bf y}_1,{\bf x}^{(t)}_2\right\} =\max_2\left\{{\bf y}_1,{\bf y}_2,{\bf x}^{(t)}_1,{\bf x}^{(t)}_2\right\} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equbq.gif" position="anchor"/></alternatives></disp-formula>and for the second sum that<disp-formula id="Equbr"><alternatives><tex-math id="M213">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \left\{{\bf x}^{(t)}_1,{\bf x}^{(t)}_2\right\} =\max_2\left\{{\bf y}_1,{\bf y}_2,{\bf x}^{(t)}_1,{\bf x}^{(t)}_2\right\} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equbr.gif" position="anchor"/></alternatives></disp-formula>We conclude that <italic>K</italic><sub><italic>ECA</italic></sub> does not have detailed balance for any <italic>Q</italic>.</p>
          <p>When <italic>Q</italic> is irreducible, this algorithm is irreducible since it can generate any state from any other state with a non-zero probability. Therefore, the algorithm is also aperiodic since the <italic>K</italic><sub><italic>C</italic></sub> is aperiodic and thus the target distribution of ECA exists. <inline-formula id="IEq126"><alternatives><tex-math id="M214">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\square$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq126.gif"/></alternatives></inline-formula></p>
        </sec>
        <sec id="Sec43">
          <title>Appendix 6: Proof of Proposition 13</title>
          <p>The proof is split in three parts, corresponding with the three equations in the proposition. <list list-type="order"><list-item><p><italic>Both children are different from their parents</italic>. Then<disp-formula id="Equbs"><alternatives><tex-math id="M215">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} &amp; K_{1.1}({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \\ &amp; \quad = Q({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \cdot \alpha({\bf y}_1 \mid {\bf x}^{(t)}_1) \cdot \alpha({\bf y}_2 \mid {\bf x}^{(t)}_2)\end{aligned} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equbs.gif" position="anchor"/></alternatives></disp-formula>The reverse transition probability is<disp-formula id="Equbt"><alternatives><tex-math id="M216">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \begin{aligned} &amp; K_{1.1}({\bf x}^{(t)}_1,{\bf x}^{(t)}_2 \mid {\bf y}_1, {\bf y}_2) \\ &amp; \quad = Q({\bf x}^{(t)}_1,{\bf x}^{(t)}_2 \mid {\bf y}_1, {\bf y}_2) \cdot \alpha({\bf x}^{(t)}_1 \mid {\bf y}_1) \cdot \alpha({\bf x}^{(t)}_2 \mid {\bf y}_2) \end{aligned}$$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equbt.gif" position="anchor"/></alternatives></disp-formula>We now have<disp-formula id="Equbu"><alternatives><tex-math id="M217">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}&amp;{\frac{K_{1.1}({\bf x}^{(t)}_1,{\bf x}^{(t)}_2 \mid {\bf y}_1,{\bf y}_2)}{K_{1.1}({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1,  {\bf x}^{(t)}_2)}} \\ &amp;\quad ={\frac{Q({\bf x}^{(t)}_1,{\bf x}^{(t)}_2\mid {\bf y}_1, {\bf y}_2) \cdot \alpha({\bf x}^{(t)}_1 \mid {\bf y}_1) \cdot \alpha({\bf x}^{(t)}_2 \mid {\bf y}_2)}{Q({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \cdot \alpha({\bf y}_1\mid {\bf x}^{(t)}_1) \cdot \alpha({\bf y}_2 \mid {\bf x}^{(t)}_2)}}\\ &amp; \quad= 1 \cdot {\frac{\alpha({\bf x}^{(t)}_1 \mid {\bf y}_1)} {\alpha({\bf y}_1 \mid {\bf x}^{(t)}_1)}} \cdot{\frac{\alpha({\bf x}^{(t)}_2 \mid {\bf y}_2)}{\alpha({\bf y}_2 \mid {\bf x}^{(t)}_2)}}\end{aligned}$$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equbu.gif" position="anchor"/></alternatives></disp-formula>where <italic>Q</italic> is symmetrical and thus <inline-formula id="IEq127"><alternatives><tex-math id="M218">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Q({\bf x}^{(t)}_1,{\bf x}^{(t)}_2 \mid {\bf y}_1, {\bf y}_2) =Q({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq127.gif"/></alternatives></inline-formula>. By replacing the definition of acceptance rule &#x3B1;, we have<disp-formula id="Equbv"><alternatives><tex-math id="M219">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {\frac{\alpha({\bf x}^{(t)}_1 \mid {\bf y}_1)}{\alpha({\bf y}_1 \mid {\bf x}^{(t)}_1)}} = {\frac{\hat{P}({\bf x}^{(t)}_1)}{\hat{P}({\bf y}_1)}} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equbv.gif" position="anchor"/></alternatives></disp-formula>and<disp-formula id="Equbw"><alternatives><tex-math id="M220">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {\frac{\alpha({\bf x}^{(t)}_2 \mid {\bf y}_2)}{\alpha({\bf y}_2 \mid {\bf x}^{(t)}_2)}} = {\frac{\hat{P}({\bf x}^{(t)}_2)}{\hat{P}({\bf y}_2)}} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equbw.gif" position="anchor"/></alternatives></disp-formula>The coupled acceptance probability for the nested acceptance probability is now<disp-formula id="Equbx"><alternatives><tex-math id="M221">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \alpha_C(y_1, y_2 \mid x^{(t)}_1, x^{(t)}_2) =\\ \hbox{min} \left\{1, {\frac{\hat{P}({\bf y}_1) \cdot \hat{P}({\bf y}_2)} {\hat{P}({\bf x}^{(t)}_1) \cdot \hat{P}({\bf x}^{(t)}_2)}} \cdot {\frac{K_{1.1}({\bf x}^{(t)}_1,{\bf x}^{(t)}_2 \mid  {\bf y}_1,{\bf y}_2)}{K_{1.1}({\bf y}_1,{\bf y}_2 \mid  {\bf x}^{(t)}_1,{\bf x}^{(t)}_2)}}\right\} =\\ \hbox{min} \left\{1, {\frac{\hat{P}({\bf y}_1) \cdot \hat{P}({\bf y}_2)} {\hat{P}({\bf x}^{(t)}_1) \cdot \hat{P}({\bf x}^{(t)}_2)}} \cdot {\frac{\hat{P}({\bf x}^{(t)}_1)}{\hat{P}({\bf y}_1)}} \cdot {\frac{\hat{P}({\bf x}^{(t)}_2)}{\hat{P}({\bf y}_2)}}\right\} = 1 $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equbx.gif" position="anchor"/></alternatives></disp-formula>The nested transition probability now is<disp-formula id="Equby"><alternatives><tex-math id="M222">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ K_{nEMCMC}({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) = K_{1.1}({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equby.gif" position="anchor"/></alternatives></disp-formula></p></list-item><list-item><p><italic>One child is different from its parent</italic>. For example <bold>y</bold><sub>2</sub> is rejected and <bold>y</bold><sub>1</sub> is accepted. Then<disp-formula id="Equbz"><alternatives><tex-math id="M223">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} K_{1.1}({\bf y}_1,{\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \\ &amp; = Q({\bf y}_1,{\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \cdot \alpha({\bf y}_1 \mid {\bf x}^{(t)}_1) \\ &amp; +\sum_{\hat{P}({\bf y}_2) &lt; \hat{P}({\bf x}^{(t)}_2)} Q({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \cdot \alpha({\bf y}_1 \mid {\bf x}^{(t)}_1) \cdot \lbrack 1 - \alpha({\bf y}_2 \mid {\bf x}^{(t)}_2) \rbrack \end{aligned}$$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equbz.gif" position="anchor"/></alternatives></disp-formula>The reverse transition probability is<disp-formula id="Equca"><alternatives><tex-math id="M224">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \begin{aligned} K_{1.1}({\bf x}^{(t)}_1,{\bf x}^{(t)}_2 \mid {\bf y}_1, {\bf x}^{(t)}_2) \\ &amp; = Q({\bf x}^{(t)}_1,{\bf x}^{(t)}_2 \mid {\bf y}_1, {\bf x}^{(t)}_2) \cdot \alpha({\bf x}^{(t)}_1 \mid {\bf y}_1) \\ &amp; +\sum_{\hat{P}({\bf y}_2) &lt; \hat{P}({\bf x}^{(t)}_2)} Q({\bf x}^{(t)}_1,{\bf y}_2 \mid {\bf y}_1, {\bf x}^{(t)}_2) \cdot \alpha({\bf x}^{(t)}_1 \mid {\bf y}_1) \cdot \lbrack 1 - \alpha({\bf y}_2 \mid {\bf x}^{(t)}_2) \rbrack \end{aligned} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equca.gif" position="anchor"/></alternatives></disp-formula>We now have<disp-formula id="Equcb"><alternatives><tex-math id="M225">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \begin{aligned} &amp;{\frac{K_{1.1}({\bf x}^{(t)}_1,{\bf x}^{(t)}_2 \mid {\bf y}_1, {\bf x}^{(t)}_2)}{K_{1.1}({\bf y}_1,{\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2)}} = {\frac{\alpha({\bf x}^{(t)}_1 \mid {\bf y}_1)}{\alpha({\bf y}_1 \mid {\bf x}^{(t)}_1)}} \cdot\\ &amp;{\frac{q +\sum_{\hat{P}({\bf y}_2) &lt; \hat{P}({\bf x}^{(t)}_2)} Q({\bf x}^{(t)}_1,{\bf y}_2 \mid {\bf y}_1, {\bf x}^{(t)}_2) \cdot \lbrack 1 - \alpha({\bf y}_2 \mid {\bf x}^{(t)}_2) \rbrack} {q+\sum_{\hat{P}({\bf y}_2) &lt; \hat{P}({\bf x}^{(t)}_2)} Q({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \cdot \lbrack 1 - \alpha({\bf y}_2 \mid {\bf x}^{(t)}_2) \rbrack}} \end{aligned} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equcb.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq128"><alternatives><tex-math id="M226">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q = Q({\bf x}^{(t)}_1,{\bf y}_2 \mid  {\bf y}_1, {\bf x}^{(t)}_2) = Q({\bf y}_1,{\bf y}_2 \mid  {\bf x}^{(t)}_1, {\bf x}^{(t)}_2)$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq128.gif"/></alternatives></inline-formula>. Now, the coupled acceptance is<disp-formula id="Equcc"><alternatives><tex-math id="M227">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \begin{aligned} \alpha_C({\bf y}_1,{\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) &amp;=\\ \hbox{min} \left\{1, {\frac{\hat{P}({\bf y}_1)} {\hat{P}({\bf x}^{(t)}_1)}} \cdot {\frac{K_{1.1}({\bf x}^{(t)}_1,{\bf x}^{(t)}_2 \mid {\bf y}_1,{\bf x}^{(t)}_2)}{K_{1.1}({\bf y}_1,{\bf x}^{(t)}_2 \mid vec{x}^{(t)}_1,{\bf x}^{(t)}_2)}}\right\} &amp;=\hbox{min}\left\{1,{\frac{q +\sum_{\hat{P}({\bf y}_2) &lt; \hat{P}({\bf x}^{(t)}_2)} Q({\bf x}^{(t)}_1,{\bf y}_2 \mid {\bf y}_1, {\bf x}^{(t)}_2) \cdot \lbrack 1 - \alpha({\bf y}_2 \mid {\bf x}^{(t)}_2) \rbrack}{q+\sum_{\hat{P}({\bf y}_2) &lt; \hat{P}({\bf x}^{(t)}_2)} Q({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \cdot \lbrack 1 - \alpha({\bf y}_2 \mid {\bf x}^{(t)}_2) \rbrack}}\right\} \end{aligned} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equcc.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq129"><alternatives><tex-math id="M228">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\frac{\hat{P}({\bf y}_1)}{\hat{P}({\bf x}^{(t)}_1)}} = {\frac{\alpha({\bf y}_1 \mid {\bf x}^{(t)}_1)}{\alpha({\bf x}^{(t)}_1 \mid {\bf y}_1)}}$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq129.gif"/></alternatives></inline-formula>. The second equation from the proposition now follows directly.</p></list-item><list-item><p><italic>Both children are rejected</italic>. Then<disp-formula id="Equcd"><alternatives><tex-math id="M229">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} &amp; K_{nEMCMC}({\bf x}^{(t)}_1, {\bf x}^{(t)}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \\ &amp; \quad = 1 - \sum_{{\bf y}_1, {\bf y}_2 \neq {\bf x}^{(t)}_1,  {\bf x}^{(t)}_2} K_{nEMCMC}({\bf y}_1, {\bf y}_2 \mid {\bf x}^{(t)}_1, {\bf x}^{(t)}_2) \end{aligned} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equcd.gif" position="anchor"/></alternatives></disp-formula></p></list-item></list><inline-formula id="IEq130"><alternatives><tex-math id="M230">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\square$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq130.gif"/></alternatives></inline-formula></p>
        </sec>
        <sec id="Sec44">
          <title>Appendix 7: Proof of Proposition 14</title>
          <p>The coupled acceptance probability for the nested acceptance probability is now<disp-formula id="Equce"><alternatives><tex-math id="M231">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \begin{aligned}\alpha_C(y_1, y_2 \mid x^{(t)}_1, x^{(t)}_2) \\ &amp;= \hbox{min} \left\{1,{\frac{\hat{P}({\bf y}_1) \cdot \hat{P}({\bf y}_2)} {\hat{P}({\bf x}^{(t)}_1) \cdot\hat{P}({\bf x}^{(t)}_2)}} \cdot {\frac{K_{C}({\bf x}^{(t)}_1,{\bf x}^{(t)}_2 \mid {\bf y}_1,{\bf y}_2)}{K_{C}({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1,{\bf x}^{(t)}_2)}}\right\}\\ &amp;=\hbox{min} \left\{1,{\frac{\hat{P}({\bf y}_1) \cdot\hat{P}({\bf y}_2)} {\hat{P}({\bf x}^{(t)}_1) \cdot \hat{P}({\bf x}^{(t)}_2)}} \cdot{\frac{Q({\bf x}^{(t)}_1,{\bf x}^{(t)}_2 \mid {\bf y}_1,{\bf y}_2)}{Q({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1,{\bf x}^{(t)}_2)}}\right. \\ &amp; \left.\quad \cdot{\frac{\alpha_C({\bf x}^{(t)}_1,{\bf x}^{(t)}_2 \mid {\bf y}_1,{\bf y}_2)}{\alpha_C({\bf y}_1,{\bf y}_2 \mid{\bf x}^{(t)}_1,{\bf x}^{(t)}_2)}}\right\} = 1\end{aligned} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equce.gif" position="anchor"/></alternatives></disp-formula>where <italic>Q</italic> is symmetrical<disp-formula id="Equcf"><alternatives><tex-math id="M232">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ Q({\bf x}^{(t)}_1,{\bf x}^{(t)}_2 \mid {\bf y}_1,{\bf y}_2) = Q({\bf y}_1,{\bf y}_2 \mid  {\bf x}^{(t)}_1,{\bf x}^{(t)}_2) $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equcf.gif" position="anchor"/></alternatives></disp-formula>and<disp-formula id="Equcg"><alternatives><tex-math id="M233">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {\frac{\alpha_C({\bf x}^{(t)}_1,{\bf x}^{(t)}_2 \mid {\bf y}_1,{\bf y}_2)}{\alpha_C({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1,{\bf x}^{(t)}_2)}} = {\frac{Q({\bf x}^{(t)}_1,{\bf x}^{(t)}_2 \mid {\bf y}_1,{\bf y}_2)}{Q({\bf y}_1,{\bf y}_2 \mid {\bf x}^{(t)}_1,{\bf x}^{(t)}_2)}} $$\end{document}</tex-math><graphic xlink:href="12065_2010_40_Article_Equcg.gif" position="anchor"/></alternatives></disp-formula>The equation in the proposition follows directly.<inline-formula id="IEq131"><alternatives><tex-math id="M234">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\square$$\end{document}</tex-math><inline-graphic xlink:href="12065_2010_40_Article_IEq131.gif"/></alternatives></inline-formula></p>
        </sec>
      </app>
    </app-group>
  </back>
</article>
